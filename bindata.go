// Code generated by go-bindata.
// sources:
// gitignore/Actionscript.gitignore
// gitignore/Ada.gitignore
// gitignore/Agda.gitignore
// gitignore/Android.gitignore
// gitignore/AppEngine.gitignore
// gitignore/AppceleratorTitanium.gitignore
// gitignore/ArchLinuxPackages.gitignore
// gitignore/Autotools.gitignore
// gitignore/C++.gitignore
// gitignore/C.gitignore
// gitignore/CFWheels.gitignore
// gitignore/CMake.gitignore
// gitignore/CONTRIBUTING.md
// gitignore/CUDA.gitignore
// gitignore/CakePHP.gitignore
// gitignore/ChefCookbook.gitignore
// gitignore/Clojure.gitignore
// gitignore/CodeIgniter.gitignore
// gitignore/CommonLisp.gitignore
// gitignore/Composer.gitignore
// gitignore/Concrete5.gitignore
// gitignore/Coq.gitignore
// gitignore/CraftCMS.gitignore
// gitignore/D.gitignore
// gitignore/DM.gitignore
// gitignore/Dart.gitignore
// gitignore/Delphi.gitignore
// gitignore/Drupal.gitignore
// gitignore/EPiServer.gitignore
// gitignore/Eagle.gitignore
// gitignore/Elisp.gitignore
// gitignore/Elixir.gitignore
// gitignore/Elm.gitignore
// gitignore/Erlang.gitignore
// gitignore/ExpressionEngine.gitignore
// gitignore/ExtJs.gitignore
// gitignore/Fancy.gitignore
// gitignore/Finale.gitignore
// gitignore/ForceDotCom.gitignore
// gitignore/Fortran.gitignore
// gitignore/FuelPHP.gitignore
// gitignore/GWT.gitignore
// gitignore/Gcov.gitignore
// gitignore/GitBook.gitignore
// gitignore/Go.gitignore
// gitignore/Gradle.gitignore
// gitignore/Grails.gitignore
// gitignore/Haskell.gitignore
// gitignore/IGORPro.gitignore
// gitignore/Idris.gitignore
// gitignore/Java.gitignore
// gitignore/Jboss.gitignore
// gitignore/Jekyll.gitignore
// gitignore/Joomla.gitignore
// gitignore/Julia.gitignore
// gitignore/KiCad.gitignore
// gitignore/Kohana.gitignore
// gitignore/LICENSE
// gitignore/LabVIEW.gitignore
// gitignore/Laravel.gitignore
// gitignore/Leiningen.gitignore
// gitignore/LemonStand.gitignore
// gitignore/Lilypond.gitignore
// gitignore/Lithium.gitignore
// gitignore/Lua.gitignore
// gitignore/Magento.gitignore
// gitignore/Maven.gitignore
// gitignore/Mercury.gitignore
// gitignore/MetaProgrammingSystem.gitignore
// gitignore/Nanoc.gitignore
// gitignore/Nim.gitignore
// gitignore/Node.gitignore
// gitignore/OCaml.gitignore
// gitignore/Objective-C.gitignore
// gitignore/Opa.gitignore
// gitignore/OpenCart.gitignore
// gitignore/OracleForms.gitignore
// gitignore/Packer.gitignore
// gitignore/Perl.gitignore
// gitignore/Phalcon.gitignore
// gitignore/PlayFramework.gitignore
// gitignore/Plone.gitignore
// gitignore/Prestashop.gitignore
// gitignore/Processing.gitignore
// gitignore/PureScript.gitignore
// gitignore/Python.gitignore
// gitignore/Qooxdoo.gitignore
// gitignore/Qt.gitignore
// gitignore/R.gitignore
// gitignore/README.md
// gitignore/ROS.gitignore
// gitignore/Rails.gitignore
// gitignore/RhodesRhomobile.gitignore
// gitignore/Ruby.gitignore
// gitignore/Rust.gitignore
// gitignore/SCons.gitignore
// gitignore/Sass.gitignore
// gitignore/Scala.gitignore
// gitignore/Scheme.gitignore
// gitignore/Scrivener.gitignore
// gitignore/Sdcc.gitignore
// gitignore/SeamGen.gitignore
// gitignore/SketchUp.gitignore
// gitignore/Smalltalk.gitignore
// gitignore/Stella.gitignore
// gitignore/SugarCRM.gitignore
// gitignore/Swift.gitignore
// gitignore/Symfony.gitignore
// gitignore/SymphonyCMS.gitignore
// gitignore/TeX.gitignore
// gitignore/Terraform.gitignore
// gitignore/Textpattern.gitignore
// gitignore/TurboGears2.gitignore
// gitignore/Typo3.gitignore
// gitignore/Umbraco.gitignore
// gitignore/Unity.gitignore
// gitignore/UnrealEngine.gitignore
// gitignore/VVVV.gitignore
// gitignore/VisualStudio.gitignore
// gitignore/Waf.gitignore
// gitignore/WordPress.gitignore
// gitignore/Xojo.gitignore
// gitignore/Yeoman.gitignore
// gitignore/Yii.gitignore
// gitignore/ZendFramework.gitignore
// gitignore/Zephir.gitignore
// gitignore/Global/Anjuta.gitignore
// gitignore/Global/Ansible.gitignore
// gitignore/Global/Archives.gitignore
// gitignore/Global/Bazaar.gitignore
// gitignore/Global/BricxCC.gitignore
// gitignore/Global/CVS.gitignore
// gitignore/Global/Calabash.gitignore
// gitignore/Global/Cloud9.gitignore
// gitignore/Global/CodeKit.gitignore
// gitignore/Global/DartEditor.gitignore
// gitignore/Global/Dreamweaver.gitignore
// gitignore/Global/Dropbox.gitignore
// gitignore/Global/Eclipse.gitignore
// gitignore/Global/EiffelStudio.gitignore
// gitignore/Global/Emacs.gitignore
// gitignore/Global/Ensime.gitignore
// gitignore/Global/Espresso.gitignore
// gitignore/Global/FlexBuilder.gitignore
// gitignore/Global/GPG.gitignore
// gitignore/Global/JDeveloper.gitignore
// gitignore/Global/JetBrains.gitignore
// gitignore/Global/KDevelop4.gitignore
// gitignore/Global/Kate.gitignore
// gitignore/Global/Lazarus.gitignore
// gitignore/Global/LibreOffice.gitignore
// gitignore/Global/Linux.gitignore
// gitignore/Global/LyX.gitignore
// gitignore/Global/Matlab.gitignore
// gitignore/Global/Mercurial.gitignore
// gitignore/Global/MicrosoftOffice.gitignore
// gitignore/Global/ModelSim.gitignore
// gitignore/Global/Momentics.gitignore
// gitignore/Global/MonoDevelop.gitignore
// gitignore/Global/NetBeans.gitignore
// gitignore/Global/Ninja.gitignore
// gitignore/Global/NotepadPP.gitignore
// gitignore/Global/Otto.gitignore
// gitignore/Global/README.md
// gitignore/Global/Redcar.gitignore
// gitignore/Global/Redis.gitignore
// gitignore/Global/SBT.gitignore
// gitignore/Global/SVN.gitignore
// gitignore/Global/SlickEdit.gitignore
// gitignore/Global/Stata.gitignore
// gitignore/Global/SublimeText.gitignore
// gitignore/Global/SynopsysVCS.gitignore
// gitignore/Global/Tags.gitignore
// gitignore/Global/TextMate.gitignore
// gitignore/Global/TortoiseGit.gitignore
// gitignore/Global/Vagrant.gitignore
// gitignore/Global/Vim.gitignore
// gitignore/Global/VirtualEnv.gitignore
// gitignore/Global/VisualStudioCode.gitignore
// gitignore/Global/WebMethods.gitignore
// gitignore/Global/Windows.gitignore
// gitignore/Global/Xcode.gitignore
// gitignore/Global/XilinxISE.gitignore
// gitignore/Global/macOS.gitignore
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _gitignoreActionscriptGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x50\xc1\x6a\xeb\x30\x10\xbc\xeb\x2b\x06\x7c\x0b\x79\xf2\x3f\x84\x97\x1c\x9b\xd0\xf6\x16\x02\x96\xe4\x75\xbc\xa9\xa2\x15\x2b\xb9\x4d\xff\xbe\xd8\x6e\xa1\xd0\x8b\x18\x46\xc3\xcc\xec\x34\xd8\x4d\x1c\x7b\xb8\xd4\xe3\x99\x22\xb9\x42\x38\x48\xec\x49\x8b\xf1\x9c\xda\xf9\xf9\xd7\x93\x9f\xae\x2b\xd4\x55\xd3\x9a\xf3\x51\x2e\xfe\xd6\xa2\xc1\x21\xba\x32\xfe\xa7\x77\x8a\x92\x21\xfe\x66\xce\x3b\x7f\xe1\xf4\xe7\xcb\x73\x32\xa6\xc1\xb1\x8e\xa4\x18\x38\x52\x59\x52\x87\xef\x34\x5b\xa8\x56\x4e\xd7\xd2\xce\xaa\xfd\x83\xc2\x54\x9d\x8f\x54\xcc\xc6\x96\x8f\xc1\x6c\xac\x63\x35\x1b\xcb\xd9\xcd\x38\xbf\xcd\xb2\x93\xca\x8d\x42\x5d\xed\xb6\x60\x4b\x16\x9d\xcd\x2b\xdb\x6d\xd1\x59\x17\x2a\x4b\x7a\x09\xca\xb9\x9e\x54\x32\x69\x65\x2a\xdd\x12\xdd\xd9\x21\xd2\xe3\x17\x6b\x1a\x94\x51\xa6\xd8\xe3\xe9\xf8\x0a\x4f\xa0\x47\x88\x53\x4f\x3d\x5c\x41\x1d\xe9\x13\x41\x52\x75\x9c\x10\xe4\x9e\x39\x92\xe2\xa7\xf5\x62\x28\xcb\x6d\x7c\xcf\xa2\xd5\xa5\x6a\x1a\x70\x1a\x44\xef\x6e\xee\x80\x41\x14\xfb\x10\x39\x17\x42\xbb\x6e\xb3\xae\x4f\x6a\xcd\x57\x00\x00\x00\xff\xff\x67\xf6\x1e\xac\x89\x01\x00\x00")

func gitignoreActionscriptGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreActionscriptGitignore,
		"gitignore/Actionscript.gitignore",
	)
}

func gitignoreActionscriptGitignore() (*asset, error) {
	bytes, err := gitignoreActionscriptGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Actionscript.gitignore", size: 393, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAdaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\x4f\xca\x4a\x4d\x2e\x51\x48\xcb\xcc\x49\xe5\xd2\xd2\xcb\xe7\xe2\x52\x56\x70\x4c\x49\x54\xf0\xc9\x4c\x2a\x4a\x2c\xaa\x54\xf0\xcc\x4b\xcb\x2f\xca\x4d\x2c\xc9\xcc\xcf\xe3\xd2\xd2\x4b\xcc\xc9\xe4\x02\x04\x00\x00\xff\xff\x56\x40\x49\xd4\x33\x00\x00\x00")

func gitignoreAdaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAdaGitignore,
		"gitignore/Ada.gitignore",
	)
}

func gitignoreAdaGitignore() (*asset, error) {
	bytes, err := gitignoreAdaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ada.gitignore", size: 51, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAgdaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x4b\x4c\x4f\x49\xcc\xe4\x02\x04\x00\x00\xff\xff\x27\x6c\x17\xd3\x08\x00\x00\x00")

func gitignoreAgdaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAgdaGitignore,
		"gitignore/Agda.gitignore",
	)
}

func gitignoreAgdaGitignore() (*asset, error) {
	bytes, err := gitignoreAgdaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Agda.gitignore", size: 8, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAndroidGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xcb\x6e\xdc\x30\x0c\xbc\xeb\x2b\x08\xec\x25\x59\xb4\x32\x90\x3f\xd8\xa2\x49\x91\x3e\x82\xa0\x29\x7a\x5d\xd0\x12\xad\x70\xad\x48\x02\x25\xbb\xbb\x7f\x5f\x48\x76\xdc\xa0\xed\xc5\x10\x67\xc6\xd4\x70\xa8\x1d\x7c\x98\xd8\x17\xc0\x94\x3c\x1b\x2c\x1c\x03\x0c\xec\x29\xab\xbd\xc6\x34\xb6\xef\x51\xa9\x1d\xdc\x55\x10\x86\x28\x50\x9e\x09\x0e\xdf\x7f\x74\x1f\xd1\xcf\x3c\xc2\xcf\x6f\x6a\xaf\x2d\x9d\xab\xe8\x33\xce\x08\xc6\x63\xce\x5b\x93\x56\x55\xee\x13\x05\x12\x2c\x64\x57\xaa\xe7\xd0\x29\x47\xa1\x53\x71\x2a\x5d\x53\x08\x5a\x4f\x2b\xad\x5d\xab\x3a\xd5\x4f\xec\x6d\xe3\xbf\x46\x83\x1e\x4c\x0c\x03\xbb\x49\xfe\x78\x85\xab\x6c\x47\x48\x58\x9e\xdf\x01\x15\x73\xad\x7c\x15\xea\x24\x31\x91\x14\xa6\x76\xfd\xa3\x44\x37\xa1\x58\x18\xa2\xb7\x24\xe0\x36\x3b\xfd\x05\x6e\x8d\xe7\x94\x49\xa5\x55\xb4\x5e\xe7\x96\xa9\xd5\x5e\xfb\xe8\x2a\x74\x08\x56\x22\x5b\x78\x2a\x93\xe5\x08\x0f\x38\xb3\x5b\x7c\x90\xe5\x52\xb3\xa1\x97\xf4\x3a\x40\xd8\xd8\xee\x3f\xff\x1a\x4c\x65\x92\x16\x69\xf5\xa3\x5e\xeb\xa6\xbd\x0f\x85\xbc\xe7\x93\xda\x6b\x7e\xf1\x4a\xb3\x25\xec\x7e\x45\x19\x73\x42\x43\xfa\xbc\x61\x05\xf3\x98\xdf\xd4\x4b\x68\x6f\x00\xcb\xa6\x3a\x40\xa9\x31\x2c\x90\xe7\x5e\x96\x5a\xed\xe0\x0b\x5d\x72\x89\x42\xdb\xbe\x4e\x63\xc3\x6f\xcf\x85\x24\xa0\x87\x80\x85\x67\x82\xb6\x85\x7f\xb3\xe3\xf0\xf7\x5c\x37\xfa\x06\x30\x58\xf0\x58\x48\x94\xa6\xb5\xcf\x43\x6b\x53\xdf\x9a\x6d\xab\x8e\xd1\x79\x82\x27\x92\x99\x0d\x65\xb8\x22\xed\x34\x1c\x1e\xef\x33\x44\x81\x3b\x16\xea\x31\xd3\xb5\x72\x4d\xf7\x3e\xaf\x3a\x7d\xca\x31\xb4\xd7\x28\x44\x9e\x03\xa9\x61\x3d\xe8\x74\xd9\xce\xdd\x76\x3a\x26\x89\x27\x32\xe5\x68\x29\x1b\xe1\x54\xa3\x58\x7a\xfc\x0e\x00\x00\xff\xff\xf3\xe2\x3b\x2b\xf8\x02\x00\x00")

func gitignoreAndroidGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAndroidGitignore,
		"gitignore/Android.gitignore",
	)
}

func gitignoreAndroidGitignore() (*asset, error) {
	bytes, err := gitignoreAndroidGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Android.gitignore", size: 760, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAppengineGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xcf\xcf\x4f\xcf\x49\x55\x70\x2c\x28\x50\x70\xcd\x4b\xcf\xcc\x4b\x55\x48\x4f\xcd\x4b\x2d\x4a\x2c\x49\x4d\x51\x48\xcb\xcf\x49\x49\x2d\xe2\x4a\x2c\x28\x48\x05\x4b\xe9\xc2\xa5\xf4\xb9\x00\x01\x00\x00\xff\xff\x16\xc1\xe5\x46\x3a\x00\x00\x00")

func gitignoreAppengineGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAppengineGitignore,
		"gitignore/AppEngine.gitignore",
	)
}

func gitignoreAppengineGitignore() (*asset, error) {
	bytes, err := gitignoreAppengineGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/AppEngine.gitignore", size: 58, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAppceleratortitaniumGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x2a\xcd\xcc\x49\x51\x48\xcb\xcf\x49\x49\x2d\x52\x48\xcc\x4b\x51\xc8\xc9\x4f\x57\x48\xcb\xcc\x49\xe5\x4a\x02\xc9\xe8\x43\x28\xbd\x9c\xfc\x74\x2e\x40\x00\x00\x00\xff\xff\x9f\xf6\xb1\xea\x2d\x00\x00\x00")

func gitignoreAppceleratortitaniumGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAppceleratortitaniumGitignore,
		"gitignore/AppceleratorTitanium.gitignore",
	)
}

func gitignoreAppceleratortitaniumGitignore() (*asset, error) {
	bytes, err := gitignoreAppceleratortitaniumGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/AppceleratorTitanium.gitignore", size: 45, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreArchlinuxpackagesGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x49\x2c\xe2\x02\x93\x7a\x5a\x5c\x5a\x7a\x59\x60\x5e\x6a\x45\x2a\x97\x96\x5e\x6e\x71\x26\x97\x96\x5e\x55\x66\x01\x48\x3e\xbd\x8a\x4b\x4b\x2f\x27\x3f\x1d\x42\x82\xd5\x16\x67\xa6\x73\x71\x15\x64\xa7\xeb\x73\x15\x17\x25\xeb\x73\x01\x02\x00\x00\xff\xff\x6d\x4d\xf4\x14\x4b\x00\x00\x00")

func gitignoreArchlinuxpackagesGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreArchlinuxpackagesGitignore,
		"gitignore/ArchLinuxPackages.gitignore",
	)
}

func gitignoreArchlinuxpackagesGitignore() (*asset, error) {
	bytes, err := gitignoreArchlinuxpackagesGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ArchLinuxPackages.gitignore", size: 75, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreAutotoolsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x3b\x6e\x2b\x31\x0c\x45\x7b\xae\xe2\x01\xaf\x0b\x20\x11\x01\x5c\x65\x0f\x59\x04\x2d\x73\x24\xc2\xd4\x07\x22\x27\x63\xef\x3e\xf0\x37\x69\x02\x77\xf7\x34\x97\xf7\xf0\xff\xbf\xe2\x3e\x3e\x10\xb7\x6d\x8b\xb9\xad\xb1\xcf\x8c\xd6\x17\xdf\x68\x32\xd2\xea\xbd\xd2\x91\x01\x3e\xe9\xc8\x8b\x28\x47\x69\x80\x34\x83\xca\x1e\xb0\x1e\xc8\x39\x58\x01\x1c\xe7\x90\x7a\x1d\xa2\x0c\xe8\x6c\x1e\x0e\x53\xbe\x78\x02\x9e\x75\x9b\x34\x00\x5e\xdf\x49\xbd\x2d\x00\xb7\x93\x3b\xe7\x98\x28\x15\xbe\xb1\x25\x6a\x51\x7b\xfe\xa1\xf0\x76\xe7\xa4\x3d\x91\xc6\xba\x03\x7c\x0e\xb8\x34\x49\x8e\x79\x65\xb3\x27\x95\xeb\xf2\x3b\xd8\xba\x7f\xe4\x75\xf2\xaf\x18\x2f\xe5\x80\x07\x1e\x97\x36\x40\x69\xe6\xa4\x7a\x75\xac\x62\x26\x2d\x03\x9a\x53\x1d\xa1\xbc\x3f\xac\xec\x2f\x2d\x95\xbd\xf7\xae\x08\x80\xea\x95\xa4\x45\x2b\xaf\x5e\xe1\x7c\x92\xb6\x74\x80\x47\x8a\xce\x27\xf8\x0e\x00\x00\xff\xff\xdc\xa6\x0c\x74\xa7\x01\x00\x00")

func gitignoreAutotoolsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAutotoolsGitignore,
		"gitignore/Autotools.gitignore",
	)
}

func gitignoreAutotoolsGitignore() (*asset, error) {
	bytes, err := gitignoreAutotoolsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Autotools.gitignore", size: 423, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x3b\x6e\xc4\x30\x0c\x44\x7b\x9e\x42\x80\x3b\x15\xba\x44\x3e\x48\x17\x03\x39\x81\x3e\x4c\x4c\x83\xb2\x14\x5a\x02\xec\xdb\x07\x94\x91\xc5\xee\x16\x33\x53\x68\xe6\x41\x9c\xcc\x2c\x28\xf8\xdb\x69\xa7\x86\x3b\x58\x97\x00\x26\xf3\x52\x72\x25\xc6\x64\x3e\xc3\x8a\xb1\x99\x6f\xe2\xf1\xb8\x73\x01\xeb\x86\x0d\x85\x55\xdb\xb3\x60\xfc\x1f\x7c\xa0\x4f\x28\xda\xfd\x89\x0b\x58\x57\xe3\xf2\x00\x7c\x3d\x37\x9f\x29\x1a\xa6\x20\x5e\xe8\xa2\x2a\x2b\x9d\x4c\x41\x93\x59\x07\xef\x45\x9a\xf8\xcd\xe4\x92\x3a\xe3\xed\x03\xb9\x24\x1d\x68\xdc\x53\xbf\x9a\x6f\x4f\x50\xf6\x34\x1c\xac\x53\x29\x1c\x26\xf3\x76\x60\xec\xcd\x87\x8b\x86\x07\xea\x15\xbd\x69\xa9\x56\xf8\x0b\x00\x00\xff\xff\x66\x17\x81\x4f\x0e\x01\x00\x00")

func gitignoreCGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCGitignore,
		"gitignore/C++.gitignore",
	)
}

func gitignoreCGitignore() (*asset, error) {
	bytes, err := gitignoreCGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/C++.gitignore", size: 270, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCGitignore2 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x90\x41\x4b\x03\x31\x10\x85\xef\xf3\x2b\x02\xbd\x68\x0e\xe3\x45\x4a\xef\x56\x10\x6c\xb1\xd8\x83\x78\x92\x6c\x66\xb6\x9b\x6e\xb2\x89\xc9\x46\xb7\xff\x5e\x26\x0b\x5e\x86\x10\xde\x7b\xf3\xbd\xd9\xa8\x53\xe6\xcc\xdf\xd5\x15\x37\x73\x01\x8d\x04\xb0\x51\x6f\xdd\x95\xed\xac\x7a\xe7\xdb\x5f\x04\x8d\xa3\x8c\xd8\x5d\x41\x23\xfb\x5e\x44\x07\x37\x8d\x9c\x55\xac\x73\xaa\x33\x68\x74\x7e\x04\x8d\xc1\x24\x91\x2c\x49\x24\xa7\xcc\x36\x86\xe4\x3c\x93\x7a\x61\x43\x9c\x25\xee\x62\x07\xd0\x98\xec\xb0\xa6\x74\xd9\x64\xd7\xf6\x78\xd7\x81\x46\x23\xaf\x36\xa2\x08\xce\x83\xc9\x4c\x2a\x36\xa4\xa2\xee\xdc\x64\x51\x7d\xb8\x89\xe2\x6f\x51\xfb\xc3\xa1\xdc\x0b\xb5\xf7\xa0\xb1\xc4\x36\x50\xcb\xcf\x4d\xd2\x60\xa3\x9e\x17\xb6\x75\x36\xdd\x5a\x85\x17\x96\x1e\x0d\xd8\x24\x41\x75\x7a\xb7\x05\x8d\xcb\x6e\xfb\xb5\x7d\x04\x8d\x03\x2f\x62\xdb\x73\x57\x2f\xff\x17\xa0\xf3\xe7\xf1\x41\xc2\xab\x38\x48\x30\x13\xb5\xf8\x57\xce\x13\x7b\x75\x8c\x54\x3d\xab\xa7\xb5\xad\x7a\xe7\x52\xfd\x2c\xce\x10\x49\x70\x6c\x20\x08\x4d\x53\x30\x66\xe2\x0c\xab\x03\xcb\x2d\xfc\xc8\x59\x8e\xa3\xec\xc2\xe8\x09\x68\x0c\x05\x6d\x9c\x7a\xf8\x0b\x00\x00\xff\xff\x37\xce\xd3\x32\x9f\x01\x00\x00")

func gitignoreCGitignore2Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCGitignore2,
		"gitignore/C.gitignore",
	)
}

func gitignoreCGitignore2() (*asset, error) {
	bytes, err := gitignoreCGitignore2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/C.gitignore", size: 415, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCfwheelsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\x31\x8e\xc2\x30\x10\x85\xe1\xde\xa7\x18\x29\x5d\x1a\xf7\xdb\x6d\xb4\xe5\x52\x20\x4e\xe0\xc4\x2f\x8e\x61\x64\x9b\x19\x1b\x94\xdb\xa3\x04\x90\x28\x28\xe7\x9f\x4f\xaf\xa3\x96\x8a\x9b\x2e\xf0\x54\xb8\x85\x98\x68\xce\xec\x21\x6a\x9e\xa7\xda\xbe\xb7\xbd\x31\x1d\xcd\x91\xa1\xe4\xa3\x60\xaa\x59\x56\xba\x2f\x10\x50\x2b\x9c\x9d\x57\x0a\xd9\xec\x60\x93\x7f\xc3\x21\x06\x71\x15\xaf\xc9\x1f\x0a\x48\xd8\x82\xa7\xd3\xf1\xdf\xf8\xd1\xea\x95\x37\xf9\xab\x8a\x3a\xb4\xe4\x19\xf2\x05\x8f\xfb\x47\xcd\xd9\xdd\x9c\x4e\x12\x4b\x55\xfb\x6e\x5a\x57\x86\x2e\xc0\x47\x7b\x04\x00\x00\xff\xff\x20\xb2\xd5\x74\xcd\x00\x00\x00")

func gitignoreCfwheelsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCfwheelsGitignore,
		"gitignore/CFWheels.gitignore",
	)
}

func gitignoreCfwheelsGitignore() (*asset, error) {
	bytes, err := gitignoreCfwheelsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CFWheels.gitignore", size: 205, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCmakeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\xb1\x0e\x02\x41\x08\x44\x7b\x3e\x66\x7f\x62\x13\x3b\x2b\xed\x37\x04\x39\xc5\x03\xf6\x22\x14\x7e\xbe\x61\xbd\x62\x92\x79\x93\xcc\xeb\x57\xdc\xb9\x23\xbd\xb8\xe5\x37\x61\xe1\x45\x94\xe3\x5f\x6f\xf4\x91\x23\x03\xee\x1c\x29\xfe\x84\xda\x36\x51\x06\x32\xdc\x79\x88\x47\xa2\x6a\x5b\x04\x27\x0d\x43\x97\x8d\x23\x97\x91\xa6\x1d\xa2\x3c\x68\x9a\xa1\x3f\xa2\xbd\x63\x3a\xf4\x12\x56\x4a\x76\xde\x7f\x01\x00\x00\xff\xff\x01\x88\x6e\x8d\x8b\x00\x00\x00")

func gitignoreCmakeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCmakeGitignore,
		"gitignore/CMake.gitignore",
	)
}

func gitignoreCmakeGitignore() (*asset, error) {
	bytes, err := gitignoreCmakeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CMake.gitignore", size: 139, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreContributingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x55\x4b\x8e\xdc\x38\x0f\xde\xfb\x14\x04\xfe\xc5\x3f\x63\x38\x75\x89\x20\xc0\x64\x35\x59\x64\x30\xdb\xb0\x24\xda\x56\x8a\x16\x15\x51\xea\x8a\x77\x7d\x8d\xbe\x5e\x9f\x64\x40\xd9\xae\x47\x80\xec\xaa\x2c\x8b\x8f\xef\xe5\xff\xc1\x47\x89\x25\x87\x73\x2d\x21\x4e\x30\xd5\xe0\x89\x43\x24\xed\xba\x7f\xe9\xfd\xf5\xcd\x03\xcb\x0b\xc1\x2a\x15\x8a\xc0\x4c\x9c\xa0\x2a\x84\x25\x65\x7b\x5c\xe6\xa0\x90\xb2\x7c\x27\x57\x4e\xf0\xf5\xfe\xc2\x85\x28\x6d\xa7\x4e\x98\xc9\x95\x20\xb1\x9b\xc3\x34\xc3\x8f\x8a\x1c\xca\x3a\xc0\x95\x20\xd3\x8f\x4a\x5a\xa0\xcc\x58\xc0\xdd\xe6\x90\xa8\x80\x7e\xa6\x4c\xd6\xb3\xcc\x04\xa3\x30\xcb\xf5\x79\xc0\x53\xd7\x7d\x80\xbe\xff\x92\xe5\x25\x78\x02\x04\x0e\xf1\x72\x5c\xc0\x94\x38\x38\xb4\x5a\x20\xf9\x18\xf1\xfd\xf5\x4d\x61\x96\x85\x12\x4e\xd4\xf7\x27\xf8\x27\x32\xa9\x42\x68\x27\x1d\x00\xfd\x2c\x99\x16\xe2\x15\x92\xa4\xca\x98\x07\xab\x96\xa9\x5d\x44\x70\x33\x46\x47\xad\xc1\x82\x21\x16\x0c\x91\xb2\x82\x97\xf8\xfe\xfa\x56\xe0\x12\xe5\x0a\x78\x96\x5a\xac\x67\x55\xea\xa0\xbd\xcb\x18\xa7\x8a\x13\x0d\x30\x66\x5c\xe8\x2a\xf9\x32\x00\xf9\x50\x24\x0f\x36\xe9\xf0\x30\xa2\x21\x9d\x5b\xa3\x69\xdf\x82\x14\x8a\x9c\x3a\x80\xa7\x75\x6d\x59\x3b\x00\x2f\xae\x2e\x14\x4b\xdb\xb5\xef\x41\x6b\x4a\x92\x1b\x99\xd6\x7b\xaf\xb4\x4a\x7d\x7f\x7d\xcb\x36\xf7\x25\xc4\xc9\xca\x7d\xac\x39\x53\x2c\x03\x38\x8c\x12\x83\x43\x7e\xae\x05\xf6\x2b\x48\x3c\x2a\x8d\x81\x49\xe1\x4c\xf6\x3f\x4c\x51\x32\x79\x08\xf6\x40\x8b\x95\xfb\x3c\xfe\x72\x3d\xe8\x86\x0a\xbe\x60\x60\x3c\x73\x23\x73\x9f\xee\x71\xcb\x01\xfc\xc6\x99\x55\x6a\x42\x73\x18\x0d\x39\x01\xfa\x99\x18\x43\x84\xab\xe9\xe3\x77\x33\x60\x36\x7d\xe4\x1b\x42\x9f\x6e\x97\xd6\x5f\xd7\xde\x29\xdc\xb8\xff\xf4\x42\x11\xc2\x08\xa1\x80\x12\x2d\x0a\x4a\x3c\x7e\x20\x43\xd7\x50\x49\x4c\xb8\x31\x88\x17\x53\x97\x52\x2c\x64\xec\x4b\x86\x72\x95\x26\x34\x62\x36\xb1\xef\x9d\x6e\xb4\x49\x06\xf4\x3e\x34\x14\x74\x96\xca\x1e\x66\x4c\x89\x62\xc3\x69\x53\x21\x69\x22\x17\x90\x79\x6d\x9e\x19\x2b\x5b\x45\xcc\x25\xb8\xca\x58\xa8\x15\xdd\x0c\xf4\xab\x16\xa0\xa7\x17\xca\xab\x44\xea\x3b\x80\xeb\x2c\x60\x8a\x52\xb8\x86\x32\x3f\x8a\xbf\x41\x4e\x6e\x8e\xc2\x32\xad\x03\x64\x34\x2d\x9b\xd9\x22\x7c\xaf\x3b\xd6\x92\xb7\xd1\x0b\xe1\x72\x17\x59\xdb\xdd\x1c\xa9\xc1\xb7\x2b\x04\xea\x24\x11\xc8\xf8\xb8\xa9\xc1\xf8\xf9\xe9\x09\xb4\xb5\xc6\xe0\xda\x36\x1d\x80\xa3\x6c\x36\xb9\x79\xc0\x1a\x3e\xb8\xa0\xcc\x14\x8d\x1c\x02\xad\x99\x1e\x15\x1b\x14\x16\xf4\x47\x02\x18\x0f\xb4\xa4\x86\xcc\x28\x79\x4b\x8c\xdf\xd4\x7c\xdc\x73\x8f\x83\xa7\xbb\x4d\x5d\x87\xfd\x8a\x08\x37\xff\x49\xa2\x8c\xcd\x36\xba\x6a\xa1\xe5\x88\x97\x0d\x0a\x89\xbc\xc2\x22\x3e\x8c\x2b\xf4\x12\xef\x15\x7b\x48\x94\x21\x55\xe6\x23\xcd\x0c\x94\xaf\x46\x9c\xf1\xba\x27\xa1\x9d\x77\x70\xbc\xa1\x80\xd1\xc3\x48\xe4\xcf\xe8\x2e\x30\x8a\xab\x4a\x1e\x24\x9a\xcc\x0e\xfc\x8e\x3c\xb0\x65\x6f\x24\x9e\xba\xee\x73\x84\x89\x22\x65\xe4\x61\x0b\x22\xc9\x74\xb8\xa6\x39\xe9\x1e\xc2\x35\x7a\xca\x5a\xac\xd9\xef\xa3\x60\xe8\x6e\x55\x38\x5c\x2c\xfa\xae\x16\x77\xcc\x70\x6e\xe0\xa3\x73\x94\x0e\xc3\x3e\x44\x34\xfc\xa8\xc1\x5d\xb8\x8d\x34\x02\xde\x21\x36\xe2\x44\x0b\xaf\x2d\x92\xb5\x98\x66\x36\xdf\x86\xa8\x05\x99\xc9\xc3\xd9\x0e\xd3\xa1\xf6\x0c\x2f\x94\xb5\x45\xf5\xd8\xa9\x2c\x04\x2a\x63\xb9\x9a\xb1\xff\xa0\xd3\x74\x02\x84\x2f\x7f\x7d\xb9\x53\xfc\xe7\x26\x9b\x50\xfe\xaf\x70\xce\xa1\x14\xa6\x86\x68\xca\x72\xc6\x33\xaf\x10\xa5\x2d\xd4\xdd\x9c\x65\x52\x40\xd0\xb0\x24\x26\xf8\xc6\xfa\xad\xe9\xb6\x15\x88\x52\x20\x89\x6a\xd8\x13\xca\xd5\x6c\x5b\x20\xe8\x82\xcc\xa0\x64\x0b\x74\x55\xc9\x0a\xe5\xca\xa4\xbb\x6a\x9f\x74\xb5\x84\x69\x2e\xad\xd6\xd9\xee\x4e\x22\x1e\xc6\x50\x76\xad\x3e\x7d\x06\x4f\x5d\xb7\x8b\x0a\x59\xe5\x99\x24\x2c\xf6\x59\x74\xb8\x25\x67\x43\xaf\x79\xbd\xc9\x74\x3b\xb7\xff\x40\x3f\x83\x16\xf2\xa7\xee\xef\x9a\x01\xc3\x62\xa0\x3f\xce\x7e\xef\x66\xe8\xdb\xa4\xbd\x71\x02\x4e\x96\xc5\x64\x16\xfd\x91\x3a\xfd\x6d\x07\x1d\x3a\x9b\xbf\xc8\x83\x1f\x6d\x18\x69\x0d\xdb\x14\x87\x26\x0f\xbc\x1a\x8a\xf6\xce\x2c\xa2\x04\xdb\xf5\x2e\x44\xc7\xd5\xd3\x26\x99\xfb\xb7\xef\xe6\xb4\xbd\xca\xb0\x7f\x76\x77\xd4\x1c\x56\xa5\xc7\x47\x78\x25\xd3\xc2\xa9\xfb\x2f\x00\x00\xff\xff\xa6\xc0\xc7\x2d\xa3\x08\x00\x00")

func gitignoreContributingMdBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreContributingMd,
		"gitignore/CONTRIBUTING.md",
	)
}

func gitignoreContributingMd() (*asset, error) {
	bytes, err := gitignoreContributingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CONTRIBUTING.md", size: 2211, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCudaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\xcb\xe4\xd2\xd2\xcb\x04\x11\xe9\x05\xa5\x5c\x5a\x7a\x05\x25\x15\x5c\x5a\x7a\xc9\xa5\x49\x99\x79\x5c\x5a\x7a\x69\x89\x25\x20\x06\x20\x00\x00\xff\xff\xd8\x38\x0a\x95\x26\x00\x00\x00")

func gitignoreCudaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCudaGitignore,
		"gitignore/CUDA.gitignore",
	)
}

func gitignoreCudaGitignore() (*asset, error) {
	bytes, err := gitignoreCudaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CUDA.gitignore", size: 38, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCakephpGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x31\xae\x83\x30\x0c\x86\x77\x9f\x82\xa7\xb7\x31\xd4\x52\x7b\x04\x96\x8e\x5c\x21\x0d\x2e\x44\x85\xc4\xc2\x16\x55\x6f\x5f\x81\x51\x13\xc1\xe6\x7c\xff\xe7\x44\xf9\xff\xab\xc6\xbd\xa8\xbd\xb7\xd5\x0d\x00\x17\x8a\x5d\x9a\xb1\x06\xf4\x29\x3e\x43\x8f\x8e\xf9\xc2\x03\x03\xa0\x4e\x8c\xde\xf9\x81\x70\x4a\x1d\x8d\x82\x35\xfc\x9d\x21\x4d\xac\x9f\x52\x66\x9a\x25\x88\x52\xd4\xc3\x42\x11\x9c\x96\x96\x40\xef\xe3\x03\xc6\x0a\x55\x48\x24\xa4\x98\xbd\x1f\x28\x24\x25\xd1\x6c\xd8\xc9\x62\xc0\x31\xf5\x16\x6d\xc3\x4e\x73\x1f\x57\x80\xf5\xfb\xdb\x62\x6d\x63\x63\xa5\xf8\x34\xd3\xd6\x4a\x09\x3b\xa7\xee\xe1\x64\x0f\xac\xc8\xf5\xfa\x6f\x00\x00\x00\xff\xff\x7c\x91\x54\x65\x61\x01\x00\x00")

func gitignoreCakephpGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCakephpGitignore,
		"gitignore/CakePHP.gitignore",
	)
}

func gitignoreCakephpGitignore() (*asset, error) {
	bytes, err := gitignoreCakephpGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CakePHP.gitignore", size: 353, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreChefcookbookGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x4b\x4c\x2f\x4a\xcc\x2b\xe1\xd2\x4f\xce\xcf\xcf\x4e\xca\xcf\xcf\x2e\xe6\xe2\x52\x56\x70\x2a\xcd\x4b\xc9\x49\x2d\xe2\x4a\xca\xcc\xd3\xd7\xe2\xd2\x4b\x02\x73\xf5\xb5\xb8\xb8\xf4\xb2\x33\x4b\x92\x33\x52\xf3\xf4\xe1\x2c\xbd\x9c\xfc\xe4\xc4\x1c\xbd\xca\xdc\x1c\x2e\x40\x00\x00\x00\xff\xff\xa7\x83\x38\x45\x4d\x00\x00\x00")

func gitignoreChefcookbookGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreChefcookbookGitignore,
		"gitignore/ChefCookbook.gitignore",
	)
}

func gitignoreChefcookbookGitignore() (*asset, error) {
	bytes, err := gitignoreChefcookbookGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ChefCookbook.gitignore", size: 77, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreClojureGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x51\x0e\x02\x31\x08\x05\xff\x39\xca\x26\x0b\x67\xaa\x15\x77\x51\xda\x12\xa0\x89\xde\xde\xb8\x69\xfc\x7a\x99\xc9\x1b\x1b\x0d\xdf\x4d\x61\x2d\x96\xa8\xb0\xe1\xb3\x38\x6c\x58\xb5\x44\x00\xa9\xdc\x08\xe8\x02\x0e\x02\xca\xe2\x07\xe7\x4f\x9d\x5c\x5f\x63\x66\x10\xa0\xb2\xf4\xfd\xce\x16\x7b\xcc\xb6\xd0\xd9\x74\x3f\x25\x72\xf8\x67\x29\xd3\x79\x48\xff\x07\x8f\x22\x3a\x9d\x03\xb0\x5f\x67\x1b\x9e\xf0\x0d\x00\x00\xff\xff\x5a\x92\x69\x1b\x93\x00\x00\x00")

func gitignoreClojureGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreClojureGitignore,
		"gitignore/Clojure.gitignore",
	)
}

func gitignoreClojureGitignore() (*asset, error) {
	bytes, err := gitignoreClojureGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Clojure.gitignore", size: 147, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCodeigniterGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x6a\x86\x30\x10\x46\xf7\x73\x8a\x4a\x77\x03\x66\x16\x3d\x90\xa4\x93\x31\x19\x88\x49\x48\xa2\xd8\xdb\x17\x51\x5a\xa9\x94\x7f\xf3\xf1\xf1\xde\xea\x21\x71\x4e\xb3\x7a\x72\xb2\x49\xcc\x65\x91\xd4\x01\x29\x66\xdf\x8e\x19\xd1\x94\x50\x60\xb8\x88\x26\x27\xbb\x09\x7d\x89\x80\xc4\x96\x83\x10\x1e\xf2\xbc\x37\xfb\xc3\x4c\xe8\x96\x59\x5a\x03\x58\x9b\xd4\xc9\xaf\xea\x64\x6a\x95\xe9\x73\xd5\xe8\x08\xff\x62\xd6\x28\xbb\xd4\x57\xda\x69\xeb\xff\xdb\xf2\x75\x3d\x23\xde\x8f\x9a\xe6\x4c\x08\xf0\xce\xd9\x89\xfa\xa4\x5d\xea\xdb\x07\xd8\x52\xa2\xb2\xed\x9a\xd3\x59\x87\x30\x3c\xd8\xbd\xe9\x21\x7f\xe3\x68\x93\xe4\x72\x25\xf8\x0e\x00\x00\xff\xff\xbd\x01\x0d\x3f\x50\x01\x00\x00")

func gitignoreCodeigniterGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCodeigniterGitignore,
		"gitignore/CodeIgniter.gitignore",
	)
}

func gitignoreCodeigniterGitignore() (*asset, error) {
	bytes, err := gitignoreCodeigniterGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CodeIgniter.gitignore", size: 336, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCommonlispGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x73\x73\x0c\xf6\xe1\xd2\xd2\x4b\x4b\x2c\xce\xe1\xd2\xd2\xcb\xc9\x2c\x2e\xd0\x2d\x49\xcd\x2d\xe0\xd2\xd2\x4b\x49\x03\x0b\x15\x40\xa8\x14\x33\x13\x28\x1f\xc6\xc8\xa9\x40\xb0\x8c\x8d\xa0\xaa\xe0\x62\x29\x70\xb1\x34\xb8\x58\x1a\x5c\xac\x18\x2e\x56\x0c\x17\x2b\x87\x8b\x95\x43\xc5\x00\x01\x00\x00\xff\xff\x1d\xcc\xcf\x4b\x9e\x00\x00\x00")

func gitignoreCommonlispGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCommonlispGitignore,
		"gitignore/CommonLisp.gitignore",
	)
}

func gitignoreCommonlispGitignore() (*asset, error) {
	bytes, err := gitignoreCommonlispGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CommonLisp.gitignore", size: 158, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreComposerGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xc2\x52\x07\xa6\x34\xc0\xc8\xca\x29\x18\xdd\xd4\x24\x16\x49\x1d\x39\x29\x52\x6f\x8f\xa2\x8a\x8a\x91\xcd\xb2\xde\x7f\xcf\x4b\x2e\x52\x49\xc7\x12\x51\x8d\x7b\xd3\x32\x8b\x3a\x63\x06\xb8\x4b\xce\xdc\x60\x93\x55\x01\x4b\x49\xec\xb1\xb1\x2c\xa7\x0a\x49\xfc\x0b\x9e\x9c\x08\x62\x6b\xe5\xe6\x5c\xa0\x76\x78\x44\x83\x9b\xc5\xbb\xf3\xc5\x4e\x58\xd9\xdb\xb5\x62\xa0\x31\xcf\xc3\x17\xb1\x7d\x6f\x5b\xa4\xfd\xe8\x22\x33\xc0\x43\x56\xc8\xb8\x81\x8f\x22\x95\xa0\x09\x70\x58\x44\x09\x10\x12\x4f\x8a\xba\xfd\xd9\xbd\xda\x9d\x67\xaa\xbd\xfa\xdb\x38\xe0\xfe\x34\x9f\x00\x00\x00\xff\xff\x04\x53\x99\xce\xfb\x00\x00\x00")

func gitignoreComposerGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreComposerGitignore,
		"gitignore/Composer.gitignore",
	)
}

func gitignoreComposerGitignore() (*asset, error) {
	bytes, err := gitignoreComposerGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Composer.gitignore", size: 251, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreConcrete5Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xce\xcf\x4b\xcb\x4c\xd7\x2f\xce\x2c\x49\xd5\x2b\xc8\x28\xe0\x4a\xcb\xcc\x49\x2d\xd6\x4f\x4e\x4c\xce\x48\xd5\xd7\x82\xf2\x4a\x72\x0b\xf4\xb5\xb8\xf4\x32\x4a\x12\x93\x93\x53\x8b\x8b\xb9\x00\x01\x00\x00\xff\xff\x35\x98\xec\x37\x34\x00\x00\x00")

func gitignoreConcrete5GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreConcrete5Gitignore,
		"gitignore/Concrete5.gitignore",
	)
}

func gitignoreConcrete5Gitignore() (*asset, error) {
	bytes, err := gitignoreConcrete5GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Concrete5.gitignore", size: 52, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCoqGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\x41\x0e\xc2\x30\x0c\x04\xef\x7e\x8a\x25\x96\x0b\x1f\x72\xdd\x0a\x2c\xd2\xa6\x50\x88\xf2\x7c\x84\x93\x2a\xbe\xec\x8e\xbc\x99\x80\x21\xdf\x4a\x0c\x21\x86\xae\x2d\xcd\x33\x7b\xd6\x96\x6d\xa8\x07\x31\xee\x29\x4f\xc4\x58\x13\x66\xaf\x5b\x6f\xeb\x9d\x6c\xea\xb4\x8b\x3e\x1d\x37\xf9\x58\x59\x88\xf1\xff\xb3\xf8\xa9\x98\x73\x26\x68\x7e\x5d\xda\x83\x2b\x41\x8f\x79\x87\x8a\x3e\x16\x42\x32\x39\x71\x0b\x18\xcf\xef\x13\x83\x37\xf6\x61\x05\x69\x38\xbf\x00\x00\x00\xff\xff\x3d\xa2\x35\xe9\xfc\x00\x00\x00")

func gitignoreCoqGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCoqGitignore,
		"gitignore/Coq.gitignore",
	)
}

func gitignoreCoqGitignore() (*asset, error) {
	bytes, err := gitignoreCoqGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Coq.gitignore", size: 252, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreCraftcmsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x2e\x4a\x4c\x2b\x51\x08\x2e\xc9\x2f\x4a\x4c\x4f\x55\xd0\x48\x4e\x4c\xce\x48\xd5\x54\x88\xce\x28\x29\x29\xb0\xd2\xd7\x4f\x2a\xcd\xcc\x49\x29\xcf\x2c\xc9\x48\x06\x29\xd3\x4b\xce\xcf\xd5\xcf\x48\xcd\x29\xd0\x07\x73\x75\x8b\x21\xba\x74\xd3\x33\x4b\x32\xd3\xf3\xf2\x8b\x52\x63\xb9\x20\x32\xfa\x50\x19\x7d\x2d\x2e\x45\x34\x91\x9c\xfc\xf4\x7c\x7d\x2d\x40\x00\x00\x00\xff\xff\xf4\x22\xb6\xea\x78\x00\x00\x00")

func gitignoreCraftcmsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCraftcmsGitignore,
		"gitignore/CraftCMS.gitignore",
	)
}

func gitignoreCraftcmsGitignore() (*asset, error) {
	bytes, err := gitignoreCraftcmsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CraftCMS.gitignore", size: 120, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreDGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\x88\xd4\xad\x43\xb8\x03\x94\x99\x01\x31\x57\x49\x6c\xc0\x95\xd3\xa0\xc6\x45\xed\xed\x91\xdb\x05\x18\x2c\x4b\x5f\xcf\xfe\x8d\x3b\x95\xfc\x62\x21\x74\x97\x38\x50\x52\x77\x67\xa1\x0a\xad\x2f\x36\x71\x00\xf8\x22\xdd\x3a\x86\xcc\xc9\x09\xc7\x29\x4c\xbc\xb9\x6a\x10\x57\xe1\x68\x5b\xe4\xe7\xe0\xaa\x41\xff\x7c\x80\xd6\x1b\x86\xc6\x9d\x17\x4a\xb3\x86\xb8\x17\xd2\x42\x16\x76\xb7\x23\x78\x9c\x23\x60\x49\xd5\x0f\xb5\x8c\xd0\xf7\x38\xe7\xbc\xfa\xa7\x66\xd9\xe2\xc3\x5e\x82\xe4\x52\x79\xd3\x14\x1e\x64\x4f\xab\xc2\x27\x00\x00\xff\xff\xd4\xf9\x93\xf4\xcf\x00\x00\x00")

func gitignoreDGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDGitignore,
		"gitignore/D.gitignore",
	)
}

func gitignoreDGitignore() (*asset, error) {
	bytes, err := gitignoreDGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/D.gitignore", size: 207, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreDmGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x4b\xc9\x4d\xe2\xd2\xd2\x2b\x2a\x4e\xe6\xd2\xd2\xcb\xcc\x2b\xe1\xd2\xd2\xcb\xc9\xe6\xd2\xd2\xab\xca\x2c\xe0\x02\x04\x00\x00\xff\xff\x1b\x86\x0d\x57\x1d\x00\x00\x00")

func gitignoreDmGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDmGitignore,
		"gitignore/DM.gitignore",
	)
}

func gitignoreDmGitignore() (*asset, error) {
	bytes, err := gitignoreDmGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/DM.gitignore", size: 29, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreDartGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x41\x6a\xc4\x30\x0c\x45\xf7\x3e\xc5\x87\x2c\x66\xd3\xb1\xf7\x5d\x97\x42\xd7\x3d\x81\x22\x6b\x12\x13\xc7\x32\xb6\x32\x21\xb7\x2f\x09\xa5\x74\x96\x5f\x5f\xe8\x3d\x0d\xf8\x16\xc1\x6c\x56\xfb\x7b\x08\xfb\xbe\xfb\x48\xcd\x32\x95\xc9\x6b\x9b\x82\xa9\xe6\x1e\x6a\x4b\x4f\x32\xb9\x3f\x52\x96\xee\x67\x5b\xb3\x73\x03\x3e\xcf\x04\x2a\x11\x31\x35\x61\xd3\x96\xa4\x83\x9b\x90\x49\xc4\x78\xa0\x6e\xa3\xf3\x95\x78\xa1\x49\xba\xf3\x75\x1b\x83\x1b\xb7\x94\x63\x70\x03\xbe\x1e\x38\x74\xbb\x35\xc1\x35\x4a\x65\x02\x15\x50\xad\x39\x31\x59\xd2\xf2\x76\xf6\x58\xe9\xc0\x4e\xc5\x60\x0a\x9e\x85\x97\x7b\x2a\x67\xd1\xce\xeb\xbd\x0a\xfb\xac\xbc\xb8\x97\xe0\x06\x7c\xfc\x1a\x1d\xff\x7d\xce\xcf\xa2\xf2\x1f\x1c\x51\xcb\xcd\x30\x49\x91\x46\x26\x88\xca\xdb\x2a\xc5\x2e\x3c\xb2\x32\xe5\x7c\x5c\x8b\x4c\x05\x4d\x56\x7d\x0a\x6c\x4e\x1d\x39\x15\xf1\x2e\x2a\x07\xaa\x29\xb8\x9f\x00\x00\x00\xff\xff\xe3\xf6\x27\x93\x45\x01\x00\x00")

func gitignoreDartGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDartGitignore,
		"gitignore/Dart.gitignore",
	)
}

func gitignoreDartGitignore() (*asset, error) {
	bytes, err := gitignoreDartGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Dart.gitignore", size: 325, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreDelphiGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x31\x8f\x1c\x37\x0f\x86\x7b\xfd\x0a\x02\xdb\x9c\xc7\xdf\xc9\x86\x1b\xe3\x2b\xe3\x3b\x17\x06\x12\x24\x70\xec\xc0\xdd\x41\x23\x71\x76\xe8\xd3\x88\x82\x28\xed\xee\xa4\xc8\x6f\x0f\xa8\x99\xbd\xbb\xa4\x72\x9a\xc5\x40\x4b\xbd\x7c\x48\xbe\xe2\x01\xbe\x26\xcf\xcb\x82\xa9\x42\x9d\x51\x10\xea\x9a\x51\x80\x26\x58\xb9\xc1\xd9\xa5\x0a\x78\xc2\x04\x0b\x17\x04\x1f\xd1\x25\x28\x98\x59\xa8\x72\x59\x2d\x7c\x68\x15\x46\x04\xef\x0a\x4e\x2d\x5a\x73\x80\x4f\x15\xbc\x4b\xb0\xb8\x47\x84\xd9\x95\x05\x2a\x83\x4b\x80\x17\x92\x4a\xe9\x08\xb9\xf0\x77\xf4\x15\x84\x5b\xf1\x68\xe1\x33\xba\x00\x78\xc9\xd1\x25\x57\x89\x93\xc0\x88\x91\xcf\xd6\x1c\xcc\x01\x3e\xe3\x16\x06\x13\x45\x14\x70\x05\x61\xa4\xe4\x0a\xa1\x80\xe7\x54\x1d\x25\xd5\x5c\x5c\xa2\x09\xa5\xfe\xef\x49\x9d\x3c\x27\x70\x29\xc0\x09\x8b\x10\x27\xa0\x34\xb1\xe2\x7d\x99\x71\xed\x80\x89\x3b\xf9\x89\xf0\x8c\x01\x9c\x40\xc5\x4b\x05\x2e\xe0\x79\xc9\xae\x60\x80\x71\x85\x40\xd3\x74\x5b\x99\xa3\x58\xb8\xe3\x24\x14\xb0\x68\xfd\xd1\x79\xcd\x5b\x67\x5c\xe0\x4c\x75\x06\x5b\xfc\xc6\x68\xcd\x61\xb0\x05\xa5\xe3\x7f\x59\x33\x42\xa4\xb1\xb8\xb2\xf6\xbf\xe1\xa6\xe3\xaf\xaf\x2c\x7c\x4a\xc0\x31\xc0\x3d\xc6\x3c\xd3\x15\x53\x80\x2a\xc8\xcc\x2d\x06\x85\x93\xca\x05\x83\x62\xff\x4e\xc9\xe3\x35\xf8\xdd\xdb\xb7\xff\xd7\x40\x12\xad\x37\x34\x8f\x01\xa6\xc2\x0b\xd8\x42\x21\x6e\x89\xb4\x76\x2d\x53\xdc\x84\x71\x55\x31\x3a\xa6\x5d\x6d\xb0\x35\x8e\x1d\xf0\x9e\xdc\xb1\xb8\x05\x7e\xe3\x52\x27\x8e\xc4\xfd\xb2\x85\xaf\xb2\xd5\x5f\x67\x84\xb0\xc7\x60\xd0\x99\x43\xcb\x3a\xd1\x9d\xe4\xbd\xb2\xbd\x74\x10\x3d\x59\x47\x67\xa5\x3d\x6e\xa2\x9d\xda\x45\x44\x1b\xdc\x04\x21\xe1\x19\xcb\xbf\x8a\xef\x64\x21\xe4\x4e\xf6\x07\x49\x73\x11\x7e\xa6\x13\x7e\xa0\x14\x28\x1d\x65\x67\xfb\x29\x04\x0c\x40\xe9\x7a\xfb\xdb\xc7\x77\x3f\x4a\xf1\x0f\xb5\x7b\x14\x3a\x26\x2c\x3d\xed\xe9\xda\x10\xcc\x91\xd7\x2e\xf3\x8b\x4b\xee\x88\xea\x87\x34\xd1\xb1\x95\xee\xce\xad\xb9\x13\x17\x55\x2f\x57\xbb\xfd\x07\xa8\x6d\x6c\x8a\xb4\xf0\xa8\x5a\x01\x4f\x18\x39\xf7\x20\x1d\x9a\x52\x07\xde\xa1\x11\x0a\x2e\x5c\x35\x6a\x6c\x47\x98\xd0\xd5\x56\x70\x6b\x54\x27\x55\x00\x73\x00\x73\x80\xbb\xd7\xaf\x81\xc7\x6e\xfe\xed\xb1\x3c\x59\xe3\x3c\x63\x82\xbb\x37\x1a\xf0\x6b\xab\xb9\x6d\x01\x70\xc4\x84\x7b\x51\x24\x4f\x55\x6e\x76\xfb\x91\x66\xe2\xa5\x62\x49\x2e\xee\x59\x05\x6e\xfe\x8c\x34\x3e\xdb\x9d\x0b\xe0\xc5\x2d\x39\xe2\xab\x0e\xcc\xe3\x77\x73\x30\xbd\xc7\xbd\x45\xfa\xce\x28\x62\xb9\xdd\x41\xd4\x71\xd7\xb7\x7d\xa3\xb6\x55\x9f\x05\x8c\x58\xf1\x95\x19\x2c\x5e\xd0\x0c\x36\xc4\x68\x06\x3b\xe6\xed\x97\xf4\xc4\x67\x33\x58\x61\x33\x58\x97\x1f\xf5\xa0\x78\x33\xd8\xc5\xe5\xfe\x8d\x62\x06\x5b\x64\x31\x83\xad\x41\x7a\x7c\x33\x83\x8d\x34\xea\x05\x33\x58\xbd\xc8\xfe\xf2\x02\xcc\xb5\xca\xcf\x4c\x5b\x33\x6f\x42\xcb\x91\x7c\x3f\xd1\x55\xa2\x44\x7e\x3a\x9a\xc1\xce\x39\x9b\xe1\xba\xa7\x6c\xf1\x2f\x84\x22\x7b\x17\xaf\x02\x4d\xb0\xdc\x4a\x46\x4f\x13\xf9\x27\x8d\x1e\x62\x06\x4b\x01\x53\xf5\xce\xcf\x5a\xa4\x0e\x35\xb8\xaa\x74\xf5\x24\xdb\x64\x94\x5c\x1e\x5f\x88\xcf\xa4\xdb\x61\xed\x9e\x19\x9d\x7f\x6c\x59\xcc\xc3\xc3\x7e\xfa\xc6\x3c\x3c\x14\xf4\x7c\x42\xfd\x1e\xec\x5f\x83\xde\xbc\x73\x52\x5d\x24\x07\x52\x5d\xd5\x75\xec\x65\xdf\x4a\xd2\xd7\xcb\xb7\x8f\xef\x9f\x63\x48\x20\x90\xd4\x42\x63\xd3\xa2\xfb\x96\xdb\x52\x2b\xb7\x2a\x98\xbf\x03\x00\x00\xff\xff\xe4\xf1\xc2\xb0\x3d\x06\x00\x00")

func gitignoreDelphiGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDelphiGitignore,
		"gitignore/Delphi.gitignore",
	)
}

func gitignoreDelphiGitignore() (*asset, error) {
	bytes, err := gitignoreDelphiGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Delphi.gitignore", size: 1597, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreDrupalGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\x41\x6e\xdc\x30\x0c\xbc\xeb\x15\x44\x7a\x69\xf7\x60\xbd\xc1\x48\x8c\x8d\x01\xc7\x09\xbc\xdb\x43\x8f\x5a\x99\xb6\x08\xc8\x92\x20\xd1\xae\xd3\xd7\x17\x95\x9c\x6d\x8b\xa2\xb7\x19\x0e\x35\xe2\x90\x9f\xa0\x9d\x9d\x8f\x08\xda\xbb\x89\xe6\x35\x2a\x26\xef\x60\x22\x8b\x09\xd8\x28\x86\x45\xbd\xff\x12\x59\x91\x83\x84\x2e\x11\xd3\x86\x40\x6e\xf2\x71\xc9\xcd\x95\x48\xc4\x98\xe4\x49\x9e\x12\x32\x93\x9b\xd3\xa9\x0a\x26\x08\x71\x37\x0f\x8a\xcd\x61\xf7\x61\x35\xa3\xc3\xa8\x18\xc7\x5c\x41\xc7\x95\xc8\x9f\xca\xbb\x5b\xa6\x77\x16\x22\x6d\x8a\xf1\x0f\xd3\x11\x27\xb5\x5a\x06\xc6\x9d\xcb\xc0\x22\xfa\x9b\xe7\x54\xf1\xce\x42\x3e\x3e\xd7\xfd\xb9\xe9\x5e\xcf\x07\x7d\x7d\xfb\x36\xb4\xe7\xe7\x6b\xa1\x6d\x7f\xb9\xd6\x5d\x77\x2a\xac\x6b\x1f\x9b\xfe\xd2\x14\xf2\x52\xb7\xfd\xb5\x6e\xfb\x66\xb8\x94\xc2\xd7\xb7\xf3\x50\x3f\x1d\xea\xd0\xd4\x4f\x2f\x05\x97\xd1\xfe\x29\x28\x6b\xe5\xe2\xc7\xd5\xfe\x4f\x64\x83\xcb\xdf\xda\xef\x50\xb8\x61\x7c\x67\x43\x6e\x86\xdb\xca\xc0\x06\xe1\x21\xbf\x7c\x80\xc9\xdb\x11\x23\x7c\x86\xc9\x47\x70\xde\x81\x2e\x5b\xd8\xd0\xfa\x80\x11\xbe\x88\xca\xb0\xd2\x1a\x53\x12\xdf\xf1\x56\x95\x8b\x0a\xb5\xb2\xf1\x91\x7e\x60\xbe\x89\x8e\xde\x65\x40\x6e\xc4\xfd\x40\x89\x95\xb5\x19\xaf\x61\x54\x5c\x3a\xf7\xc5\xc6\xa0\x33\x94\xe4\xb4\x5d\x47\x4c\x42\x2e\x94\xb4\xf8\x88\x27\x64\x88\xbe\x6c\x5e\x26\x1d\x29\x70\x12\x47\x3a\xf1\x33\x00\x00\xff\xff\xa2\xd0\xb1\x86\x59\x02\x00\x00")

func gitignoreDrupalGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDrupalGitignore,
		"gitignore/Drupal.gitignore",
	)
}

func gitignoreDrupalGitignore() (*asset, error) {
	bytes, err := gitignoreDrupalGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Drupal.gitignore", size: 601, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreEpiserverGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xc6\x0a\xb8\x94\x95\x15\x5c\x03\x32\x83\x53\x8b\xca\x52\x8b\x14\xdc\x32\x73\x52\x8b\xb9\x70\xa8\xd4\xf2\xc9\x4c\x4e\xcd\x2b\x4e\xd5\x4b\xce\xcf\x4b\xcb\x4c\xe7\x02\x04\x00\x00\xff\xff\x67\x4c\x1e\xeb\x51\x00\x00\x00")

func gitignoreEpiserverGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEpiserverGitignore,
		"gitignore/EPiServer.gitignore",
	)
}

func gitignoreEpiserverGitignore() (*asset, error) {
	bytes, err := gitignoreEpiserverGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/EPiServer.gitignore", size: 81, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreEagleGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x50\x41\x8a\x23\x31\x0c\xbc\xfb\x15\x05\x9d\x53\xb3\x18\x76\x61\xd9\x63\x48\xc2\x1e\x72\x18\x98\x2f\x38\x6e\x75\xc7\x89\xdb\x32\xb2\x3d\x99\xfc\x7e\x90\x7b\x08\x73\x29\xcb\x54\x95\x54\xd2\x80\xf3\x92\x58\x08\x31\x94\x8a\x99\x05\xff\xdd\x12\xe9\x17\x1c\xde\x4f\x47\x44\xf7\xe4\x56\x51\x99\xa3\x31\x03\x8e\xce\xdf\x5b\xc6\x1c\x22\x15\x33\xda\x32\xec\xcd\x68\x2f\x1d\xe3\xb0\x57\x45\x77\x23\x0b\xdf\xc8\xd7\x2e\x34\x03\xce\x15\x9e\x53\x75\x21\x15\x38\x14\x92\xe0\x22\x52\x5b\x2f\x24\x70\x69\x82\xd0\x4c\x42\xc9\x53\x41\x65\xd4\x2b\x75\x23\x4a\x95\xe6\x6b\x13\x6d\xc1\x09\x4f\x6e\x02\xcf\x6b\x6e\x95\xc4\x9a\x41\xeb\x95\x52\xdd\x0c\x1c\x23\x3f\x42\x5a\x10\x43\x22\x84\x59\xe5\x78\x38\xa5\x19\x57\xf7\x41\x9b\xff\x67\x32\x84\xe4\x63\x9b\x68\xb2\x86\x34\xb6\xa5\x3c\xeb\x0e\x87\x56\x59\x58\xa7\xbc\x36\xcd\xc2\x66\xb4\x37\xbe\x28\x7f\x3a\xbc\xbd\x88\xdd\x6e\x67\x46\xeb\xd7\xac\x27\x78\xfe\x51\xfc\xfd\x57\x4f\xc3\x51\x6d\xd1\x6b\x5d\x37\x54\xbd\x17\xdf\xb1\x18\x33\xda\x49\x42\x47\x95\x2e\x39\x74\xc3\x37\x31\x6d\x68\x47\xfd\x86\x34\xb3\xbe\x94\x8b\xce\xef\xd9\x23\xfb\x7b\x41\x48\x55\x78\x6a\x9e\x26\x94\x90\x3c\xe1\x9f\xfd\xd4\x0c\xfe\x6e\xcc\x57\x00\x00\x00\xff\xff\x9d\x70\x7e\x8e\xdb\x01\x00\x00")

func gitignoreEagleGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEagleGitignore,
		"gitignore/Eagle.gitignore",
	)
}

func gitignoreEagleGitignore() (*asset, error) {
	bytes, err := gitignoreEagleGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Eagle.gitignore", size: 475, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreElispGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\xe1\xd2\xd2\x4b\xcd\x49\xe6\xe2\x52\x56\x08\x48\x4c\xce\x4e\x4c\xcf\xcc\x4b\xe7\xd2\x4b\x4e\x2c\xce\x06\x09\x39\x25\x26\x67\x97\x16\x28\xa4\x65\xe6\xa4\x16\x73\x69\xd5\x81\x84\x42\xf3\x52\xf2\x75\x4b\x8a\x52\x53\x15\x8a\x13\xcb\x52\x75\xa1\x52\x7a\x75\xa5\x30\x71\x2e\x40\x00\x00\x00\xff\xff\xb9\x17\xeb\x4f\x5c\x00\x00\x00")

func gitignoreElispGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreElispGitignore,
		"gitignore/Elisp.gitignore",
	)
}

func gitignoreElispGitignore() (*asset, error) {
	bytes, err := gitignoreElispGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Elisp.gitignore", size: 92, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreElixirGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x8f\x4f\x2a\xcd\xcc\x49\xe1\xd2\x4f\xce\x2f\x4b\x2d\xe2\xd2\x4f\x49\x2d\x28\xe6\x4a\x2d\xca\x89\x4f\x2e\x4a\x2c\xce\xd0\x4b\x29\xcd\x2d\xe0\xd2\xd2\x4b\xad\xe2\xd2\xd2\x4b\x4a\x4d\xcc\xe5\x02\x04\x00\x00\xff\xff\x2f\x0b\x50\x61\x30\x00\x00\x00")

func gitignoreElixirGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreElixirGitignore,
		"gitignore/Elixir.gitignore",
	)
}

func gitignoreElixirGitignore() (*asset, error) {
	bytes, err := gitignoreElixirGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Elixir.gitignore", size: 48, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreElmGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\xcd\xc9\xd5\x2d\x48\x4c\xce\x4e\x4c\x4f\x55\x48\x4f\xcd\x4b\x2d\x4a\x2c\x49\x4d\x51\x48\xcb\xcc\x49\x2d\xe6\x02\xc9\x15\x97\x94\xa6\xa5\x71\x41\xd4\x15\xa5\x16\xe4\x60\x28\x02\x09\xea\x96\xa4\xe6\x16\xe8\x6a\x71\x01\x02\x00\x00\xff\xff\x28\x92\x70\x13\x4f\x00\x00\x00")

func gitignoreElmGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreElmGitignore,
		"gitignore/Elm.gitignore",
	)
}

func gitignoreElmGitignore() (*asset, error) {
	bytes, err := gitignoreElmGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Elm.gitignore", size: 79, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreErlangGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x20\x0c\x05\xd0\xfd\x1f\x85\xc1\x5c\x22\x19\xab\x6e\x5d\x11\x90\x2f\x35\x95\x01\xcb\x71\xa4\x1e\xbf\x4b\xf7\x27\xbc\xe7\x19\x38\x68\x17\x92\x2c\x24\x69\xac\x03\x49\x4c\x03\x74\x2d\xdd\xeb\xf5\x96\xe3\x1e\x06\xb6\x73\xe6\x3f\x70\x6a\xe6\xb7\x0e\x53\x16\xf3\xf5\x61\x0f\x48\x5f\xb3\x3b\x83\x79\xdb\x5f\xe5\xf1\xdc\x76\x88\xb3\x55\xc7\x2f\x00\x00\xff\xff\x1e\x95\x9a\xfe\x66\x00\x00\x00")

func gitignoreErlangGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreErlangGitignore,
		"gitignore/Erlang.gitignore",
	)
}

func gitignoreErlangGitignore() (*asset, error) {
	bytes, err := gitignoreErlangGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Erlang.gitignore", size: 102, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreExpressionengineGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8c\xc1\x6a\x03\x31\x0c\x44\xef\xfa\x0a\x41\x6e\x39\xc4\x1f\xd1\x52\xe8\x39\x1f\xb0\x68\xbd\x5a\x5b\x60\x5b\xc6\xd2\xb6\xdd\x7e\x7d\x49\x4a\xd8\x16\x0a\x3d\x8d\x66\xf4\x66\x2e\xcf\xd7\xe9\xea\x3a\x18\xe0\x84\xaf\x95\x12\x1b\xc8\x5d\x02\xbd\x91\xd3\xb0\xf0\xf0\x91\xba\xc7\x4c\x47\x60\x55\x0a\xef\x87\xaf\x5c\x67\x1e\x53\xcf\xea\xfa\x83\x92\xd4\xc8\xb7\xc1\x13\xb9\x53\xcc\x95\x9b\x1f\xdf\x5e\x7f\xc7\x70\xc2\x17\x1d\x68\x1c\xb7\x21\xbe\xe3\xa2\xd8\xd4\xb1\x6f\x73\x11\xcb\xe8\x99\x71\xd5\x52\xf4\x5d\x5a\xc2\x55\x0a\x1b\xd8\x6e\xce\x35\xf0\x47\x1f\x6c\x26\xda\xb8\x25\x69\x1c\xa2\xb6\x55\x52\x58\xc8\x69\x26\xe3\x4b\xcf\xfd\x3f\xf6\x5b\xee\x24\x9c\xf0\x89\x62\xbe\xed\xcb\x27\x2f\x01\x3c\x6f\x75\xb6\x00\xd3\xe3\x38\xff\x31\x73\x6b\x84\x33\x7c\x05\x00\x00\xff\xff\xc2\xf2\xa3\x41\x56\x01\x00\x00")

func gitignoreExpressionengineGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreExpressionengineGitignore,
		"gitignore/ExpressionEngine.gitignore",
	)
}

func gitignoreExpressionengineGitignore() (*asset, error) {
	bytes, err := gitignoreExpressionengineGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ExpressionEngine.gitignore", size: 342, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreExtjsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\x51\x0a\xc3\x30\x0c\x03\xd0\x7f\xdf\x65\xf1\x99\x5c\xd5\xd0\x8c\xae\x0e\x96\x0b\x3b\xfe\x18\xf9\xc9\xf6\x23\xf4\x90\x9a\x25\x8e\x5e\x8e\x92\x2d\xa2\x58\x69\xa3\x81\x5c\xf4\xfc\x45\x5c\x7f\x1c\xb2\xdd\xfd\xdc\x55\x70\x1a\xd9\x31\x3f\x2b\x86\xf8\xbb\x54\x5e\xb1\x7b\x5e\x73\x5e\xfa\x90\x74\xc6\x9d\x70\x2a\x8d\xd4\xf6\xcd\x07\x0c\x87\xab\x7c\x02\x00\x00\xff\xff\xcd\x88\x28\xfb\xa1\x00\x00\x00")

func gitignoreExtjsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreExtjsGitignore,
		"gitignore/ExtJs.gitignore",
	)
}

func gitignoreExtjsGitignore() (*asset, error) {
	bytes, err := gitignoreExtjsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ExtJs.gitignore", size: 161, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreFancyGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x4a\x4a\xe6\xd2\xd2\x4b\xab\x4c\xe6\x02\x04\x00\x00\xff\xff\xf9\xc8\xaa\x14\x0c\x00\x00\x00")

func gitignoreFancyGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFancyGitignore,
		"gitignore/Fancy.gitignore",
	)
}

func gitignoreFancyGitignore() (*asset, error) {
	bytes, err := gitignoreFancyGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Fancy.gitignore", size: 12, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreFinaleGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8b\x31\xce\x83\x30\x0c\x46\x77\x9f\xe2\x13\x6c\x19\xb2\xfc\xeb\xaf\x8e\x5c\xa0\x27\x30\xc4\x14\xab\x24\x41\x31\x49\xcb\xed\xab\xa8\xea\xf2\x64\x3d\xbf\xcf\xf9\x99\x9f\xe4\x7c\x98\xc9\x79\x6e\x4a\xce\x1f\x61\xed\x34\x72\x3e\x6a\xf8\xb2\xfb\x78\xfc\xf5\x46\xfb\xf7\xc5\x8d\x46\xdc\x73\x14\x34\x29\xa6\x39\x19\xf2\x8a\x49\x13\xef\x82\x8d\x9b\x80\x31\xd7\x07\x38\x05\x14\x4e\x21\xc7\xfd\x82\x75\x2f\xef\xb3\x30\x96\x7c\xa8\xf4\x0d\x8d\x38\x37\x41\xac\xa6\x0b\x2c\xd7\xb2\x08\xd8\x30\xfc\x4f\xba\x4b\xe2\x28\xb7\xde\x5e\x3e\x56\x1b\xc8\xfd\x4e\xfa\x04\x00\x00\xff\xff\x62\x6c\xcb\x45\xb8\x00\x00\x00")

func gitignoreFinaleGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFinaleGitignore,
		"gitignore/Finale.gitignore",
	)
}

func gitignoreFinaleGitignore() (*asset, error) {
	bytes, err := gitignoreFinaleGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Finale.gitignore", size: 184, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreForcedotcomGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x0d\x80\x30\x0c\x03\xd0\x7b\xa6\x60\x82\xcc\x82\xd8\x20\x32\x6e\xf9\xb6\x28\xce\xfe\xe2\xf9\x97\xf3\x22\xca\x5c\xac\x3a\x47\x97\x29\x1e\xaa\xcd\x04\x5d\x38\xf8\x86\x6d\x6c\x4c\x0e\x70\x5f\xd6\xc0\x1d\x9d\xb2\x3f\x00\x00\xff\xff\x29\x8d\xb7\x96\x39\x00\x00\x00")

func gitignoreForcedotcomGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreForcedotcomGitignore,
		"gitignore/ForceDotCom.gitignore",
	)
}

func gitignoreForcedotcomGitignore() (*asset, error) {
	bytes, err := gitignoreForcedotcomGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ForceDotCom.gitignore", size: 57, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreFortranGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x3b\x6e\xc4\x30\x0c\x44\x7b\x9e\x42\x80\x3b\x15\xba\x44\x3e\x48\x17\x03\x39\x81\x3e\x4c\x4c\x83\xb2\x14\x5a\x02\xec\xdb\x07\x94\x91\xc5\xee\x16\x33\x53\x68\xe6\x41\x9c\xcc\x2c\x28\xf8\xdb\x69\xa7\x86\x3b\x58\x97\x00\x26\xf3\x52\x72\x25\xc6\x64\x3e\xc3\x8a\xb1\x99\x6f\xe2\xf1\xb8\x73\x01\xeb\x86\x0d\x85\x55\xdb\xb3\x60\xfc\x1f\x7c\xa0\x4f\x28\xda\xfd\x89\x0b\x58\x57\xe3\xf2\x00\x7c\x3d\x37\x9f\x29\x1a\xa6\x20\x5e\xe8\xa2\x2a\x2b\x9d\x4c\x41\x93\x59\x07\xef\x45\x9a\xf8\xcd\xe4\x92\x3a\xe3\xed\x03\xb9\x24\x1d\x68\xdc\x53\xbf\x9a\x6f\x4f\x50\xf6\x34\x1c\xac\x53\x29\x1c\x26\xf3\x76\x60\xec\xcd\x87\x8b\x86\x07\xea\x15\xbd\x69\xa9\x56\xf8\x0b\x00\x00\xff\xff\x66\x17\x81\x4f\x0e\x01\x00\x00")

func gitignoreFortranGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFortranGitignore,
		"gitignore/Fortran.gitignore",
	)
}

func gitignoreFortranGitignore() (*asset, error) {
	bytes, err := gitignoreFortranGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Fortran.gitignore", size: 270, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreFuelphpGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\xce\x1c\x21\x0c\x84\x7b\x9e\xc2\xd2\x16\x91\x22\xed\x92\xa4\x4c\x9b\xa7\x48\xf7\xfb\x07\x1f\x58\x3f\x60\x04\xde\x44\xbc\x7d\xc4\xdd\x71\x3a\x25\x57\x44\xdb\x2c\x1f\xf6\xcc\x30\x1b\x68\x24\x70\x92\xab\x74\x6a\x50\xd1\x7d\x60\x20\x48\xe2\x3e\xe0\xc2\x89\x00\x8b\x07\x2e\x5d\x31\x25\xf0\xdc\xc8\xa9\xb4\x61\x36\xf8\x21\x39\xb3\xc2\x90\xb3\x01\xd6\x9a\xd8\xa1\xb2\x94\x4f\xfd\x69\x37\xaa\xd6\xef\xd6\x06\xd2\x65\x70\x48\x0b\xd6\x8b\xb3\x5f\xbe\xee\xef\xd8\xd9\xed\x67\xc7\x40\x47\xf6\xdb\x1a\xd9\xe7\xfe\xae\x91\x6e\x3f\x53\xc8\x6c\xf0\x53\x4e\xc8\x38\xc0\x45\x91\x4e\xa0\x02\x1c\x8a\x34\x02\x84\xc4\xef\x0d\xdb\xf8\x4f\xdf\x6f\xfb\x6d\x9e\xa9\x4f\xd7\x67\x0f\xfb\x98\x9e\xd4\xd8\xcb\x49\xc9\xfe\xa2\xe2\xa5\x19\x73\x2b\x6a\xa2\x1a\x2b\x78\x71\x67\xa6\xa2\x66\x8a\x76\x3b\xaf\xc7\x3d\xe1\x2a\x4b\x23\x75\x5a\x85\x76\xf8\xcd\x1a\xe1\x4d\x38\x2d\xf4\x76\x98\x6d\x25\xbd\xcb\x1e\x4e\xf2\x4d\x70\xad\x59\xe1\xb4\x0e\x47\xd4\x9c\x66\xcc\x6b\xae\xc7\x04\x9e\x1a\xed\xbf\x98\x32\x72\x7a\xc1\xe5\x35\x6d\xf9\x05\xad\xd8\x3a\xb5\xeb\xeb\xfc\x28\x98\xd9\x61\x4a\x03\x02\x15\x6a\xa8\xe4\xaf\x6d\xf7\x7b\x51\x58\xab\x4d\x12\xba\xfd\x3c\xbf\x27\xe8\xd0\x45\xfa\x9b\x49\xb9\x70\xb0\xae\x8d\xaa\x47\x8d\xd5\xfc\x09\x00\x00\xff\xff\x75\x4f\xa1\xd3\x88\x02\x00\x00")

func gitignoreFuelphpGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFuelphpGitignore,
		"gitignore/FuelPHP.gitignore",
	)
}

func gitignoreFuelphpGitignore() (*asset, error) {
	bytes, err := gitignoreFuelphpGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/FuelPHP.gitignore", size: 648, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGwtGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x4e\x33\x31\x0c\x84\xef\x79\x0a\x4b\xbd\xfc\xff\x4a\x9b\x88\x03\x2f\x00\xa2\x88\x0b\xe2\x80\xd4\x63\xe5\x26\xde\x6c\x4a\x76\x13\x39\x46\x51\xdf\x1e\x25\x5b\x41\x11\x57\x8f\x67\x3e\x8f\x07\x6d\x23\x96\xa2\xd4\x0e\xde\xd0\x7e\xa0\x27\xd8\x87\x48\x05\x76\x6a\xd0\x67\x64\x35\xe8\x8a\xdc\x64\x5f\x05\x2c\xda\x99\x0a\xe0\xea\xc0\xa6\x25\x87\x48\x0e\x3e\xd7\x20\x6d\xbd\x22\x1b\x5f\xe5\x78\x62\x22\xa3\x7c\x95\xb1\x29\x8f\xcd\x61\x9a\xff\x94\x42\x24\xce\x11\x85\xc0\xd3\x4a\x8c\x42\x0e\x3a\xbd\xe3\x34\x66\x39\x7e\x0b\xdd\xb2\x24\xa6\x5b\xa6\xcc\x61\xf5\x05\x26\x4e\x0b\x38\xca\x31\x5d\xae\xdc\xc3\xd3\xc3\xf8\xf2\xba\x37\xdb\xd0\xfc\x9a\x5d\x09\x2d\x70\xbb\x19\x25\xa4\x15\x62\xf2\x45\x69\x5f\xa5\x0b\x68\x5b\x34\x4c\x89\x01\x23\x13\xba\xcb\x4f\xc1\xa9\xfd\xe3\x6f\xa1\xf6\x8f\x73\x9b\xc0\x6d\xec\xb6\x5c\x6b\x1d\x85\x4a\xcf\x4e\xd1\xc1\xf3\xe1\x1d\xfe\xdd\xe9\xfb\xff\x60\x99\x7a\x6f\x99\x43\x01\x17\xb8\x9f\x30\xca\x92\x8d\xfa\x0a\x00\x00\xff\xff\x85\xfb\x09\x41\x8b\x01\x00\x00")

func gitignoreGwtGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGwtGitignore,
		"gitignore/GWT.gitignore",
	)
}

func gitignoreGwtGitignore() (*asset, error) {
	bytes, err := gitignoreGwtGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/GWT.gitignore", size: 395, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGcovGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\x4f\x4e\x56\x48\xce\x2f\x4b\x2d\x4a\x4c\x4f\x55\x28\x49\x2d\x2e\xc9\xcc\x4b\x57\x28\xc9\xcf\xcf\x51\x48\xcb\xcc\x49\x2d\xe6\xe2\xd2\xd2\x4b\x4f\xce\xcb\x07\x53\x29\x89\x60\x2a\xbf\x8c\x0b\x10\x00\x00\xff\xff\x14\xe1\xe7\x19\x38\x00\x00\x00")

func gitignoreGcovGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGcovGitignore,
		"gitignore/Gcov.gitignore",
	)
}

func gitignoreGcovGitignore() (*asset, error) {
	bytes, err := gitignoreGcovGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Gcov.gitignore", size: 56, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGitbookGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x4e\xed\x30\x10\x44\x7b\x7f\xc5\x4a\x69\xde\xbb\xc2\x49\x7f\x4b\x40\xa2\xe3\x17\xae\x12\x7b\x92\x2c\x89\xbd\xc6\xbb\x2e\xf2\xf7\xc8\x88\x02\x89\xd2\x3e\x33\xa3\xb3\x03\xbd\x4b\x04\xd5\x76\x42\xef\x6e\x18\xe8\xad\xb6\x6c\xc4\xd9\x50\x13\x22\xcf\x06\x52\x93\x3a\x6f\xa0\x7f\xbb\x59\xb9\x4f\xd3\xd6\x23\x1f\x3a\x06\x49\x53\xa8\x98\x8d\xf3\xe6\xcb\xd9\x36\xce\x3a\xf4\x70\x7f\xdb\xac\x87\x5f\xf9\x84\xfe\x77\xe3\x77\xc3\xf5\xf9\x57\x14\xe4\x88\x1c\x2e\x8a\x5c\x11\x4c\xea\xd5\xff\x5f\x24\x25\xe4\xbe\x44\xb6\xb3\x92\x34\x23\x56\x2a\x15\x2b\x6a\x45\xa4\xe5\x22\x95\x04\x2a\x90\x72\xe2\x89\x14\xe8\xbd\xae\xa4\xf7\x69\x8a\x12\x74\xcc\x25\xfd\x68\x25\xd6\x30\xad\xf3\xe7\xa0\xbb\xb4\x33\x7a\xf6\x61\x47\x38\x7c\xba\x7c\x96\x88\x47\x92\xd8\x2f\xf6\xab\x9c\x11\xd5\x73\x36\xf1\x1b\x9b\xfb\x0d\x9d\x1b\xe8\x59\xe4\xa0\xa5\xf1\x19\xbb\x51\x69\xe6\x1e\x8b\xc8\xd1\x11\xfe\xb2\xdb\x88\xd2\x16\x77\x1b\x93\x2c\xec\x6e\x63\x89\xab\xfb\x0a\x00\x00\xff\xff\x6a\x7a\x89\x28\x61\x01\x00\x00")

func gitignoreGitbookGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGitbookGitignore,
		"gitignore/GitBook.gitignore",
	)
}

func gitignoreGitbookGitignore() (*asset, error) {
	bytes, err := gitignoreGitbookGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/GitBook.gitignore", size: 353, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\xc1\x4a\x03\x31\x14\x45\xf7\xf9\x8a\x0b\xdd\x0d\x6d\xb2\x10\x14\xba\x14\xbb\x10\x14\x45\xfc\x80\x66\x32\xaf\xc9\x93\x74\xde\x90\xf7\x62\xed\xdf\xcb\x54\x77\x87\x7b\x0f\x67\x83\x47\x9e\x63\x63\x52\x9c\xa4\x61\x69\x92\x5b\x3c\x2b\xe2\x3c\x61\xa9\x3d\xf3\xac\x6e\xf0\xf4\x43\x6e\xf0\x53\xad\x6e\xf0\x2a\x2b\x5e\x2b\x8f\xce\x6d\xf0\x49\x6a\x18\xd7\xc4\x75\x8b\xb1\x73\x9d\x70\x61\x2b\x38\x66\x81\xad\xdf\x2e\x1d\xdd\xe0\x57\x5c\xf5\xb7\x6e\x4b\x37\xc8\x09\x56\x08\x59\x90\xe4\x9b\x5a\xcc\x04\x13\xa9\x5b\xe8\x42\x89\x4f\x9c\x62\xad\x57\x5c\x0a\xcd\xe8\x4a\xff\xc9\x17\x36\x7a\x7e\x3a\xb8\xc1\x4b\xbf\xc5\xde\x9b\x7c\x51\xb2\x5d\x95\x14\x2b\x72\xe5\x89\x90\x62\x2a\xb4\xc5\xc7\x61\x8f\x62\xb6\xe8\x3e\x84\xcc\x56\xfa\xe8\x93\x9c\xc3\x6b\x54\xa3\x76\xe6\x79\xd2\x70\xf3\x03\xab\x76\xd2\xf0\x70\x77\xef\xfc\xdf\xe2\x7e\x03\x00\x00\xff\xff\x2d\x63\x02\xc3\x13\x01\x00\x00")

func gitignoreGoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGoGitignore,
		"gitignore/Go.gitignore",
	)
}

func gitignoreGoGitignore() (*asset, error) {
	bytes, err := gitignoreGoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Go.gitignore", size: 275, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGradleGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x4e\xc3\x30\x10\x86\x77\x3f\xc5\xa1\x2c\x30\x34\x56\x17\x54\xd8\x2a\x40\x55\x1e\x00\x31\x5f\x9d\x8b\x7b\x89\xeb\xb3\xce\x36\xa8\x6f\x8f\x4c\xd2\x85\xed\xa4\xff\xfb\xfe\xfb\x7b\xaf\x38\x06\x32\xf6\x5c\x39\x8c\xd6\x98\x0e\x06\x1f\x45\x09\x4e\x7f\x01\x9c\x3e\x07\x70\x12\x27\xf6\x66\x45\x77\x98\x52\x9f\xa9\x14\x8e\xbe\xe1\xc7\x6f\xe1\x11\xb8\x49\x1c\xfd\x5d\xfb\x51\x4c\x89\x14\x66\x54\x98\x38\x10\x3c\xf6\xf7\x33\x03\x2a\x41\xcd\x15\x43\xb8\xad\x22\x8d\x4f\xe6\x61\xab\xdf\xcc\x86\xb7\xfa\x37\x74\x17\x02\x99\x20\xa9\xcc\xe4\x8a\xd9\x16\x17\xcc\x4b\xc4\x2b\xb9\x96\x37\xb0\x83\x2f\xd1\x05\x50\xa5\xc6\x11\x2e\xa5\xa4\xfc\x6a\xed\x4d\x6a\x51\x74\x4b\x3f\x53\x39\x2b\x72\xcc\xbd\x93\xab\xe5\x9c\x2b\xd9\xe1\xfd\xe3\xb8\xdb\xef\x9f\x0f\x2f\x07\xd3\xc1\xda\x6b\xb7\xff\xf6\xdf\x9c\xa4\x92\x48\x0b\x53\x36\xbf\x01\x00\x00\xff\xff\xbb\x58\xb1\x0b\x34\x01\x00\x00")

func gitignoreGradleGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGradleGitignore,
		"gitignore/Gradle.gitignore",
	)
}

func gitignoreGradleGitignore() (*asset, error) {
	bytes, err := gitignoreGradleGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Gradle.gitignore", size: 308, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGrailsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x8e\xd5\x30\x0c\x85\xf7\x79\x0a\xeb\x76\x77\x45\x1b\x0d\x3c\x01\x68\xf8\x93\x10\x12\x62\xc1\xda\x6d\x7c\x53\x33\x69\x1d\xd9\x2e\x65\x78\x7a\xd4\x96\x4a\x5c\x69\x96\xf1\x39\xdf\xc9\xb1\x1b\xe8\x32\x3b\xe7\x59\x94\xe0\x26\x0a\x1f\x15\xb9\x18\x3c\x74\xaf\x01\xe7\x04\x0f\xdd\x9b\xd0\xc0\xdb\xe2\xa3\x2c\x79\x04\x1f\xd9\xc0\x46\x59\x4a\x82\x55\xf4\x69\x47\x26\x31\x87\x5f\xa4\xc6\x32\x1b\xc8\x0d\xf2\x9e\xf1\x0a\xd8\x81\x2d\x34\x60\x4b\xce\x64\x4e\x09\x7c\x44\x87\x67\x59\x60\x31\x02\x1f\x09\x2e\x87\x17\x78\x76\xca\x8a\x4e\xed\xca\x3e\x42\xdb\x66\xf6\x0b\x0c\x32\x4d\x38\xa7\xd0\x80\x0b\x64\x9a\x69\x73\x6c\xbc\xde\xd5\xe6\x42\x5d\x08\x0d\xac\xd4\x03\xd6\x5a\x78\x40\x67\x99\x77\xc1\x42\x5c\xa9\x6f\xb1\xd6\xf8\xe3\xfd\xbb\xf6\xf3\xd7\x0f\x71\x28\x68\x46\xb6\x11\x89\x6e\xb8\x14\x87\x4f\xdf\xbf\x7d\x81\x84\x8e\x3d\xda\x11\x68\xfb\x6a\x55\x25\x2d\xc3\x1e\x36\x49\xa2\x10\xb7\xc1\x63\xdf\x5d\x37\xf8\x28\x54\x5e\x82\xc3\xf5\xb1\xef\xaa\x4a\x25\x75\xfe\xf7\xb4\x41\xb9\xfa\x06\x16\xc9\x16\xa2\x39\x0e\x4f\xae\x38\x50\x57\x24\x87\xe8\x64\x1e\x95\xaa\xa8\x5b\x88\xbb\x27\x34\x5b\x83\x9f\x34\x38\x28\x15\x3a\xe3\x43\xbc\x76\x2b\xea\x2e\x97\x25\xf3\x7c\xa7\xda\x26\xff\xe1\x1a\xe2\x21\x76\xbf\xa7\xb2\x59\xa5\x24\xd2\x13\xe0\xd9\x1c\x4b\x81\x22\xc7\xad\xec\x74\xff\x77\xaf\x73\x10\x1a\xb8\x38\x4d\x55\x14\xf5\xf9\x02\xfd\xc2\x25\x9d\x3f\x39\x6a\x26\x0f\x7f\x03\x00\x00\xff\xff\xfc\x27\x5b\x79\x47\x02\x00\x00")

func gitignoreGrailsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGrailsGitignore,
		"gitignore/Grails.gitignore",
	)
}

func gitignoreGrailsGitignore() (*asset, error) {
	bytes, err := gitignoreGrailsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Grails.gitignore", size: 583, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreHaskellGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\x41\x8e\x83\x30\x14\x43\xf7\x3e\xca\x97\x30\xb7\x18\xcd\x01\x66\x3f\x0a\x3f\x81\xa4\x44\xf9\x11\x49\x29\xbd\x7d\x85\xa0\x9b\x67\x79\xf1\x6c\x9f\x5a\xc7\x89\x41\xa0\x6e\x72\x79\xf0\x61\x87\xd0\x20\x8c\x09\x42\xbd\xd9\x18\x21\xf4\xef\xf2\x6f\x77\xc6\x04\xc6\xaa\x60\x6c\xa1\xec\xe0\xa5\x37\x57\xfc\x64\xc7\x78\xad\xf1\xae\x54\x2b\x73\x5a\x20\xac\x9b\xcd\x10\xba\xe7\x71\x3e\x54\x08\xc3\x1e\x4a\xcf\xb6\x80\xad\x3b\x5d\x87\x97\x6d\xeb\x57\xaf\x9b\x3d\x82\x76\x66\x53\x97\xc1\xdf\xbf\x9f\x11\x9f\x00\x00\x00\xff\xff\x6f\xc6\xcd\x12\xb3\x00\x00\x00")

func gitignoreHaskellGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreHaskellGitignore,
		"gitignore/Haskell.gitignore",
	)
}

func gitignoreHaskellGitignore() (*asset, error) {
	bytes, err := gitignoreHaskellGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Haskell.gitignore", size: 179, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreIgorproGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x31\x0e\xc2\x30\x10\x44\xd1\xde\xa7\x18\x89\x2e\x45\x0e\x40\x47\xc1\x41\x8c\x77\x02\x2b\x2d\x6b\x2b\x59\x23\xe7\xf6\x28\x49\x33\x7a\xc5\xfc\x1b\x1e\xbf\xaa\x02\xf5\x62\x5d\xd4\xdf\x78\x8e\xc6\x55\xbf\xf4\xc0\xa2\xc6\xed\x8e\xf8\x70\x47\xc9\x8e\x17\x51\x56\xe6\xa0\x20\xbb\x80\xa2\x07\xad\x96\x6c\xb6\x23\x2a\x82\x5b\x1c\x77\x68\x5b\xae\x3a\x4d\x73\x1b\xed\xdc\x48\xd3\xdc\x4f\xf7\x11\xe9\x1f\x00\x00\xff\xff\x31\x87\x73\x89\x79\x00\x00\x00")

func gitignoreIgorproGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreIgorproGitignore,
		"gitignore/IGORPro.gitignore",
	)
}

func gitignoreIgorproGitignore() (*asset, error) {
	bytes, err := gitignoreIgorproGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/IGORPro.gitignore", size: 121, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreIdrisGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\xcb\x4c\x4a\xe6\xd2\xd2\xcb\xe7\x02\x04\x00\x00\xff\xff\x91\x9b\x77\x19\x0a\x00\x00\x00")

func gitignoreIdrisGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreIdrisGitignore,
		"gitignore/Idris.gitignore",
	)
}

func gitignoreIdrisGitignore() (*asset, error) {
	bytes, err := gitignoreIdrisGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Idris.gitignore", size: 10, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreJavaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x41\x4b\x04\x31\x0c\x05\xe0\x7b\x7f\x45\x60\x2f\x5a\x24\x05\x8f\x1e\x15\x3d\x2c\x2e\x78\xf0\xbe\xc4\x99\xec\xb4\x63\x3a\x29\x69\x77\x66\xd9\x5f\x2f\x1d\xf0\xf2\x20\x1f\x2f\xef\x00\x6f\x9a\x4b\x12\x1e\x61\x10\xaa\x15\x2e\x49\xd8\x79\xdc\x0f\xe7\x0e\xf0\xa9\xd3\xbf\x89\x4e\x5d\x5e\xe5\xca\xc7\xdd\x6a\x2f\xb6\x5b\xeb\x7a\xd2\x9f\x24\x0c\xdf\xaa\x52\xe1\xa2\x06\x47\x5a\x09\x1e\x8e\xcf\xa7\xf7\x47\x87\xb9\xcd\xd8\x72\x09\xbd\xf9\x45\xc3\x2f\x4d\x0c\x1f\x7d\x01\x0e\xce\xe3\x4c\xe6\x3c\x6e\x7b\xf2\x9e\xf7\x54\x9c\xc7\x46\x86\xd3\xdd\x79\x34\xb2\xfe\xb9\x26\x6b\x57\x12\xc8\x34\xc4\xb4\x30\x0c\x46\x35\x82\xe8\x54\x9f\xa0\x32\x43\x6c\xad\xbc\x84\xb0\x6d\x1b\xce\xb4\x12\x0e\x9a\x03\x2f\x61\xd4\x6d\x11\xa5\x31\x44\x96\x12\xd8\x4c\xed\x1c\xb5\xd5\xa2\x0d\x6f\x59\x5c\xac\x67\x36\x3b\x97\x34\x7a\xf7\x17\x00\x00\xff\xff\xa0\x34\x94\x0e\x10\x01\x00\x00")

func gitignoreJavaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJavaGitignore,
		"gitignore/Java.gitignore",
	)
}

func gitignoreJavaGitignore() (*asset, error) {
	bytes, err := gitignoreJavaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Java.gitignore", size: 272, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreJbossGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xbf\x0a\x83\x30\x10\xc7\xf1\x3d\x4f\x11\x70\xcb\xe0\xbd\x84\x6e\x85\x76\xed\x78\x35\xa7\xa8\x67\x13\x92\xf4\xdf\xdb\x97\x52\xce\x52\x4c\x70\xfe\x1e\x7e\xcc\x6f\xba\xb8\x18\x21\x52\xb8\x53\x00\x64\x06\x4b\x9e\xdd\x0b\x7c\x70\x13\x75\xa9\xa6\x67\x52\x7f\x37\x96\x7a\xbc\x71\xda\xbd\x5b\xc6\xeb\xb8\xe0\xfe\xf7\x3e\x26\xbb\x01\x4c\xcd\x6e\xd8\xa6\xb4\x78\x30\x06\xcc\xb6\x58\x4c\x58\x48\x0f\x17\xe6\x4c\x92\x5f\x2f\x70\x92\xf3\xe4\xfa\xee\x3c\x2b\xb9\x40\xcb\x1a\x05\x5a\x72\x9e\x5e\xa7\xcc\xd3\x92\x7f\xb4\xaa\xf4\x77\x76\xb2\xda\x63\x37\xe3\x40\xba\x1f\x99\xa2\xae\x94\x32\x75\xd3\x9e\x0e\xc7\x73\xdb\xa8\x77\x00\x00\x00\xff\xff\xdd\x36\x93\x3f\xfd\x01\x00\x00")

func gitignoreJbossGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJbossGitignore,
		"gitignore/Jboss.gitignore",
	)
}

func gitignoreJbossGitignore() (*asset, error) {
	bytes, err := gitignoreJbossGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Jboss.gitignore", size: 509, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreJekyllGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x2f\xce\x2c\x49\xd5\xe7\xd2\x2b\x4e\x2c\x2e\xd6\x4d\x4e\x4c\xce\x00\x71\xb2\x52\xb3\x2b\x73\x72\x74\x73\x53\x4b\x12\x53\x12\x4b\x12\xb9\x00\x01\x00\x00\xff\xff\xa0\x2d\x85\xce\x25\x00\x00\x00")

func gitignoreJekyllGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJekyllGitignore,
		"gitignore/Jekyll.gitignore",
	)
}

func gitignoreJekyllGitignore() (*asset, error) {
	bytes, err := gitignoreJekyllGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Jekyll.gitignore", size: 37, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreJoomlaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5c\xdd\x92\xa4\x2c\xd2\x3e\xef\x4b\x79\x23\xa6\xea\x8b\x6f\x62\x23\xf6\x78\x4f\xf6\x32\x2a\x28\xa5\x94\x69\x04\x17\xb0\xbb\x6b\xaf\x7e\x43\x01\xf9\x11\x84\xc4\xf7\x64\xa6\x2b\xf3\x79\x32\x41\xf9\x4d\x12\xef\xb7\x81\x28\x32\x30\x2e\xf0\xc7\xfd\x36\x2a\xd4\x75\x58\xca\x8f\x3b\xea\x27\xc2\x88\x54\x02\x29\x2e\xee\x1d\xea\x46\x7c\xff\xeb\x20\xe6\xd3\xcc\x19\x66\x4a\xae\x7f\x3e\x36\x65\x19\xf5\x07\xfd\x14\x41\x0a\x0d\xb2\x08\x7a\x22\xc6\xb0\x28\xe3\xea\x4a\x3f\x73\xa9\x08\x93\x0a\x51\x5a\xc4\xfe\xe1\x7c\xa2\x68\x99\x7b\xa4\xca\x86\x3b\xce\x14\x66\x6a\x24\x52\x71\xf1\xae\x28\xad\xc2\x03\x17\x04\x57\x54\x6c\xc4\xdd\x67\xc5\x23\xef\x38\x7b\x91\xa1\xaa\xa0\xa8\x53\xb5\x15\x2a\xe3\x66\xc4\x70\xf9\x61\xbe\x08\xeb\xb1\x28\xc2\xcc\xbb\xa9\x40\x52\xc4\x86\x05\x0d\x15\x0f\x90\xf2\xa1\xe2\xf1\x4d\xb8\x27\xa8\x02\xc5\x96\xb2\xc7\x09\x4b\x59\x55\xb4\x89\xf7\x0b\xad\xc0\x31\xfc\x2d\x5f\x18\xf7\x65\xe4\x4c\x97\x81\xb0\x32\x4e\xe0\x9e\x08\x5c\xd1\x0e\x24\x46\xa2\x1b\xcb\x7d\x19\x4f\x33\x45\xaa\xa2\x2e\x8b\x4c\x76\xe7\x11\xd3\xf9\x28\x25\xac\xa3\x4b\x9f\xb2\x6a\xdf\xff\x1d\xb3\x5f\xff\xfe\x97\xfe\xf7\x66\x87\x9e\x1b\x61\x04\x46\x90\x6f\x09\x22\x85\xfd\xfd\x0a\x15\xea\xd9\x1f\x96\xda\x89\x50\xaf\xde\xc0\xd9\xcc\x83\xfa\x5c\xe7\x07\x38\x01\xe2\x65\xe2\xfd\x43\x2a\xa4\xa4\x9e\xd6\x9a\x79\x10\x9f\x33\x1d\x1e\x68\x51\x23\x66\x8a\x74\x48\x11\xce\x1e\x1d\xe7\x9f\xa4\xfe\x65\xe6\x2d\x40\xcb\x61\x9a\xa2\x9d\x14\x2e\x71\x5b\x7d\xeb\x99\xe1\x0a\x15\xea\x19\xf7\x44\x71\x21\x7f\xfd\xa8\xde\x8c\xc0\x75\xa3\xcb\xca\xd5\x2e\xbd\xf9\x1b\xe4\xf9\xc8\x86\x96\xdd\x5a\xd0\x0f\xfd\x1a\xf7\x82\x6f\xcc\x60\x8d\x25\xa2\x36\x7a\xde\xa7\xc1\xeb\x06\x1a\xc8\xa0\xe1\x28\xe6\x35\x16\xf8\x1b\x3f\x29\x61\x9f\xd7\xb8\x50\xdf\xfb\x22\xec\xf1\xe2\xb4\xc7\x62\xff\x5d\xdf\x4d\x9c\x89\x19\x75\x9f\x68\xc0\x7f\xab\x8d\x06\x13\x8b\xa0\x97\x8a\xf0\x8d\x9f\xfb\x8f\xc6\x87\x19\x98\x80\xbe\x93\xff\x2c\xa4\xfb\x24\x1d\x67\x6d\xf3\xff\x89\x09\x68\x49\xf4\x82\x10\xde\x1b\x7c\x1e\xd8\xe7\x5b\x2a\xec\xd6\xfc\x1d\xef\x61\x55\x4f\xf1\x1b\xcb\xb0\x4d\xfb\xf5\x2d\xc8\xb0\xf4\xb3\x66\x5c\x91\x97\x99\xb2\xeb\x4d\xa8\x6f\xfe\x42\x9d\xe2\x62\x9d\xf3\x1f\x8a\xab\x19\x54\xee\x04\x1d\x5a\xf5\xd0\xc4\x7b\x79\x92\x4f\x5c\xbf\xe6\xcd\x5b\x80\x94\x43\xcd\xf4\x41\x24\x69\x20\xd4\x79\xb1\x8b\xd4\x9f\x89\xd6\xef\x1c\x40\x8b\x46\xc7\x80\x2e\x84\x4d\x0c\xa4\x89\x03\xde\xd8\xa0\x6e\x84\xed\x2b\x34\x03\xee\x07\xbc\x82\x8a\x68\x60\x8f\x3a\x90\xd2\xc4\x69\xd8\x1e\xbe\xc8\xd0\x42\x69\xd9\x88\x42\x96\xee\x3e\xa7\x71\xd3\xdb\xc4\x01\xfb\xda\xe2\x4a\x2d\x14\xa8\x27\xe0\x06\xc4\xa3\x40\x3d\xc1\x57\x10\x21\x0b\xea\x6f\x8f\x91\x35\xb2\xc0\xfe\xf8\x00\xec\x5f\x9a\x01\xf5\x33\x21\x42\x15\x87\xd3\x70\x4f\x50\x03\x03\xee\x87\x2d\x2d\x0c\xb8\x1f\x1d\x66\x6c\x23\x81\xbd\xe9\x58\x65\x13\x07\xea\x0b\xbe\x4f\x0b\x59\xe0\xe8\x96\x8e\x9a\x36\x71\xa0\xbe\x6c\xe4\xb5\x8d\x04\xf5\xa6\x57\xdd\x2d\x14\x70\xb4\xce\x46\x80\x1b\x59\x50\x7f\x5b\x1c\xb9\x81\x01\xf5\x03\xde\x82\x07\x24\xb0\x37\x81\xe6\x19\x38\x41\x58\x0e\xc4\x57\x2d\x8e\x92\xa7\xd9\x2e\xd6\x53\x78\x87\x28\x91\xf8\x36\x8f\x73\x75\x34\xb5\x5b\xa4\xe2\x13\x28\x00\x6b\x28\xd0\x78\xef\x3a\x42\xc0\x09\x50\x2f\x5b\x9b\xae\xef\xe3\x1e\x05\xec\x89\x0f\x03\xb0\x46\x86\xd2\xe0\x09\x18\x23\x87\x4f\xef\x2b\x6b\x9d\x0d\xe1\x04\xb0\x97\x85\x2a\xb2\x6a\xd7\x1d\x3d\x60\xbe\x4e\x71\xa1\xbe\x39\xa3\x84\xd5\xef\xb2\x3c\x0a\xd4\xd3\xcc\xe7\x85\xa2\xfa\xf1\xc4\xe7\x40\x7d\xed\x01\xa6\x46\x56\xcb\xc9\x0d\xf0\xc5\x35\xbe\x2f\xb9\x3c\xc1\x8d\xd2\x72\xa0\xbe\x14\x51\x14\xd6\x34\x34\x03\xec\x87\x73\xfa\x04\xb6\x0c\xcb\x81\xfa\x5a\x98\xc0\x08\x36\x46\x19\x0a\xd4\xd3\x17\x16\x92\x00\x5b\xa0\xe5\x5c\x3c\xc5\xc3\x3f\x68\x9a\x01\xaf\xee\xc4\xc4\xc5\x92\x0c\xeb\x06\xe9\xba\x81\x8b\xa5\x00\x2e\x1b\xf2\x16\x2e\x96\x83\xf6\x08\x16\x31\x4d\xf1\xc1\xa7\x9b\x68\x56\xdd\x88\x1e\x02\x9b\xbf\x2e\xb2\x5b\x4f\x57\xf1\xfa\x26\x3b\xca\xd1\xe7\x55\x7a\x6b\x09\x06\x2c\x47\x72\x81\xd9\xea\xb7\xa1\xf9\x45\xd4\x56\xcf\x94\xa3\x5e\xef\x7c\xaf\xd2\x5b\x4b\x30\xa3\x01\x3f\x05\x6e\x7c\xe9\x8e\x7d\xc5\x3f\x43\x5f\x64\xd8\x7a\xd0\xdf\x61\xa2\xb5\x24\x5f\x1c\x78\x4a\x16\x10\x1b\x33\x0b\x1e\x1d\xef\xf1\x44\x84\xe0\xb0\xb3\xc2\x04\xbd\xb5\x04\x8c\x03\xd6\x97\x07\x62\xab\x57\x45\xd8\x7b\xea\xda\x1c\x5b\xee\x95\x6c\x0e\x24\x14\xe9\x80\xdd\x2e\xc5\xbf\x52\x06\x32\xa1\xa1\xbd\x04\x9a\x7d\xc5\x7f\x5b\xdf\x4f\x5b\xb8\x52\x8e\x75\xf9\x36\x71\xd1\xfe\x28\x76\x03\xe0\x52\xfc\x28\xcc\x64\xe3\x12\xe4\x40\x6e\x3f\xa9\xdf\x4d\x5d\x3a\xac\x8f\xad\x34\x9e\xd7\x37\x66\x2c\x1d\xd9\xad\xfe\x5b\x32\x96\x62\xee\x05\xdf\xd0\x8c\xa5\x88\xda\xe8\xb9\x2d\xe1\xe8\x40\x6e\xf4\xde\x94\x3d\x14\x73\x1b\xf3\x24\x60\xe7\xc8\x07\x62\xa3\xd7\x1e\x3f\x97\xfa\x63\xd7\x03\xb1\xd1\xeb\x48\x86\x91\x92\x61\x04\xb6\xb0\x98\x7c\x31\x2b\xe6\x45\xa8\x02\x26\x27\xa5\x2d\xb4\x96\x83\x37\x3d\x79\xca\x07\xbe\x34\x3d\x39\xc3\xbc\x50\xdc\x46\xea\xfc\x1b\xb6\xa1\xf4\x68\x8d\x1e\xc1\x87\x46\x29\x6e\xb3\xef\x09\x4f\xcf\xb6\x96\xb5\x73\x5b\xb3\xad\xf0\xab\x95\x06\xf5\xb8\x48\x97\x1b\xdb\x09\xbc\x82\x2f\xf3\x9b\xca\xd0\xb0\x68\xf1\x79\x4d\x3e\x67\xc1\x5f\x04\xb8\x70\x0e\x88\xd0\x54\xae\x11\xa9\x11\xf0\x80\x3d\x0a\xc4\xd3\x59\x32\x17\xff\xc2\x42\x90\xf4\xdd\x12\x3e\xc8\x3b\x61\x3d\xfe\xb9\x8d\xea\x68\x62\x42\x8c\xbc\xb0\x54\x09\xa6\xbd\xd0\xe3\xce\xa7\xce\x31\xeb\xf4\x7e\x8e\xd0\xa7\x42\x05\xcc\x76\x9e\x53\xc4\xa4\x6e\x41\xf9\x90\x09\xb3\xa5\x80\x08\xcf\x3d\xce\xc1\xfa\xc4\xe2\x1c\x63\x8e\x1a\xce\x41\xfb\x5a\xf8\x1c\x56\x53\x26\x13\x94\x3f\x07\x6d\xf1\xf4\x02\x44\x07\xc2\xcf\x41\x3a\x84\x7d\x8e\x31\xb1\xe7\x72\xcd\x64\xee\xe6\xa5\xbb\x79\x45\x24\x49\x54\xdf\xe9\x75\x07\x3a\x43\xe8\xe1\x33\x75\x0d\x6b\xed\x0b\xdb\x79\xee\x7e\xcf\xf2\xa9\x0b\xd3\x51\xb2\xfd\x97\xbd\xb5\x99\xb9\x19\x9a\xbd\xbd\x58\xbc\x58\x99\xb9\x45\x9a\xbf\xe7\x98\xbf\xd9\x98\xbd\xa4\x18\xdf\xd3\xdb\x12\x8e\x52\x0a\x7b\x6b\x30\x7f\xb1\xef\xec\x2a\x5f\xf6\xae\x5d\xee\xce\x5c\x24\x37\x27\xff\x91\xc6\x1f\xb9\xb6\x78\x82\xbc\x7b\xef\xc3\x48\x46\x8c\xfa\x50\x22\xb7\xb3\x87\x1e\x29\xe4\x09\xf5\xa4\xe2\x7e\x27\x6c\xcf\xfc\x1b\x0b\xdc\x3f\x9e\xef\xdb\xcc\x86\x8f\xe0\xce\x9e\xc9\x5d\xdb\x62\x78\xeb\xef\x6c\x0e\x83\xbb\xb5\x97\x85\xf8\x39\x95\x67\x20\x97\x0e\x99\x45\xf9\x29\x7f\x59\x90\xcb\x70\x4f\x42\xec\x95\x16\x4a\x4e\x40\x94\x3c\x1f\x2f\xee\x2d\x46\x4e\x51\xe5\xaa\xed\xbb\xd8\xac\x1d\xd2\x33\xb4\x42\xbf\xb0\x50\x05\xb7\x5e\x2a\xdd\xb9\xcd\x78\x65\x91\x05\xce\xe3\x8c\xa4\xac\x03\xae\x9e\xfd\x85\xe1\x19\x76\x51\xaf\x7f\x56\x20\x25\x59\x5b\xf0\xec\x5f\x84\xcb\x57\xdc\x25\x03\x66\x0f\x06\xab\x9a\x49\x98\x85\x97\x3f\x3a\x45\x83\x0c\x4f\xe3\xeb\xa0\xe7\x35\xd9\xe1\x92\x4c\xa4\xd2\xb2\x85\x96\x2d\xc7\x69\xae\xd9\xa5\xd9\x13\xe3\xff\xfe\xae\xc2\x94\x5f\x4c\x14\x32\xc9\xda\x9b\x05\x57\x5c\xaa\xd3\x3a\x87\xb8\xb2\x6f\x3f\x5b\x2e\x0b\xf2\x12\xcf\xb2\x98\x30\xf2\x92\x87\xf9\xd9\x5e\x99\x51\x86\x62\x59\xd7\x01\xab\xfa\xf0\x09\x28\x48\xdb\xca\xb6\x09\x13\x22\x97\x8f\xf5\x49\x91\x2f\x5c\x68\x42\x07\x78\xb9\xd5\xed\x94\x38\x64\x09\x62\xc0\xfd\xbc\xc1\x78\x80\x0f\x3f\x1f\xac\x1a\x0d\xb0\xbf\xf6\x1a\x10\x16\x60\xbb\x6e\xd4\x3a\xc0\xcb\x1e\x82\x7b\x2d\x45\x54\x85\xbd\x75\xbd\xdd\x89\x65\x7a\x42\x90\x65\xbb\x7e\x72\x62\x09\x54\x31\xaa\xee\x09\x88\xe7\x90\x0a\x4b\x9c\xab\xd3\xd1\xc3\x03\x95\xad\x59\x45\x3d\xae\xc2\xa6\x4b\x19\x2c\x60\xca\xb6\x5c\x06\xd6\x39\xa4\x6c\x49\x20\xd6\xf3\xc9\x3f\xa9\xab\x83\x56\x58\xc6\x6b\xd7\xed\x1f\x44\xe1\x09\x86\x2d\xdb\x2e\x4e\x4e\x1e\xa8\xc2\xda\xba\xa7\xac\xc2\x54\xd8\x7a\xb3\x9e\x74\xfb\x11\x57\x05\xae\x6c\x73\x9b\x65\xeb\x86\xcd\x00\x5a\xb6\x5c\x31\x37\x07\xb0\x0a\x8b\x23\x97\x7e\x4a\x67\x0d\xb0\xc2\x6a\x71\x71\xe0\xa3\xca\x8b\x34\xa4\xf8\x44\xba\x3a\x50\xdd\x92\xef\xf1\xff\xff\x57\x89\xaa\xb3\xf7\x8f\x2a\xcc\xb9\xad\x2d\xe4\x17\x69\x82\xbb\x9d\xe9\x00\xe0\x2e\xf5\x37\xb8\x14\xbd\xf9\xa2\xec\x26\x58\xc3\xb4\x84\x92\xa7\x40\xf6\xf3\x4d\x56\xe8\x7d\x7b\xc7\x8a\x02\x6b\x3b\xa7\x9b\xa4\x59\x65\xf9\xa2\x8d\xb7\x0b\x5e\xfc\x15\x0a\xfc\x8d\x5d\xa8\xf1\x8a\xb7\xcb\x28\x1e\x50\xf7\x0e\x65\xf3\x38\xff\xc2\xac\x13\xef\x79\xdf\x8e\xfb\x3a\x24\xe5\x41\xa6\x37\x69\x07\xf1\xba\x1f\x0b\x85\xfb\xd6\x2b\x14\x7f\x61\xd6\xf3\x88\xdf\x51\x24\xe5\x84\xe6\xf8\x11\x90\x69\xe6\x42\xdd\x74\xc9\x0f\xca\xe4\x83\x34\x94\x08\x4b\x39\x5a\xb7\x2d\x9b\x54\x07\x68\xcc\xd3\x35\x3f\x92\x51\x25\xa7\x73\x51\x20\x27\x8b\xbf\x05\xe6\x34\x5e\x08\xc6\x0a\xf5\x61\xb5\x93\x98\xa4\x06\x27\xf8\xb3\x10\xf7\xc3\xc5\x96\xcc\x6f\x1b\x52\x32\x3f\xfd\x19\xd7\x89\x6d\xe3\xf5\x1c\x27\x13\x07\x43\x75\x36\xab\x20\x07\x4b\xd7\x3b\x75\x7a\x99\xd4\x6e\x13\x88\xd3\xb8\xf0\xa2\xfe\xed\xbf\x54\x3f\xde\x19\x6f\x1a\x36\x46\x4a\x1f\x7e\x46\xed\x0c\xf2\xce\x02\x5c\x80\x3d\xa9\x5e\x17\xcb\x59\xa5\x17\xbe\xf6\xf5\x5e\xb4\x2d\x10\xbb\x45\x67\xac\x72\x67\x05\xa9\xd3\x81\x40\xe6\x5a\xa7\x2f\xdd\x16\x79\xb1\x34\x6c\x37\xa9\xc3\x80\x54\xf8\xdf\x97\xf9\xcb\x9f\x83\xce\x5f\xbf\xc4\x4a\x17\xca\x3c\x04\xb2\x0f\x42\xbb\x2a\x88\x15\x7e\x1c\x24\xa9\x33\x91\x8c\x58\xe7\xaf\x07\x62\x9d\x9b\x81\x0f\x1a\xaf\x23\x1b\xb1\xdf\x3e\xed\xe0\x1e\x26\x07\xdf\x4d\xc6\xf6\xca\xca\x20\xb6\x5c\xea\x13\xbd\x1b\xbd\x33\x00\xda\xa3\xf9\x44\xad\x3f\xfd\xe4\x03\x6c\xd7\x0f\x06\x81\x5d\x69\xa2\xdf\x2e\xb3\x37\xa9\x3d\x56\xcb\xaa\x5c\x03\x8c\x35\x5b\xbe\x6e\x4a\x71\xac\xa2\xd5\xb8\x5c\xd7\x94\x76\x4f\x44\xcb\x29\x5d\x82\x68\x0a\xf1\xc5\x55\xd2\xac\x77\x34\x60\x55\x76\x88\x76\x99\x97\x29\x2d\xe3\x0c\xa7\xe4\x26\x75\x31\xa1\xfa\xf5\xa3\xfa\xfb\xb1\x82\xbe\xd6\x0c\x26\x39\xf5\xde\xf5\x52\xca\xe4\x03\xf2\x01\x36\x87\x2e\xd0\xdb\xa1\x3f\xf5\x96\x9d\xf2\xf8\xd2\xcc\x9b\x0f\x07\xdd\x58\xe9\xcd\x7e\x09\x95\x39\x77\x89\x34\xc1\x99\x48\xa4\xb3\xc7\x3b\x56\x1c\x7c\x21\xd2\x0a\xdd\x09\x61\x62\x5e\x3b\x82\xe2\x59\xed\x88\x48\xf5\x7c\x33\xa4\xa5\xab\x6f\x95\x89\xea\x7b\xaa\xa8\xfa\x46\x93\xac\xbe\xd1\xd9\x5d\x48\x42\x15\x3f\x19\x23\x4e\x16\x5d\x4f\xbc\xfb\xd9\x5d\x24\xdf\x92\x9f\x12\xf2\x60\x72\x8f\x74\x76\x6e\x59\x7b\xcc\x89\x5a\xa7\x14\xa5\x00\x3c\xe5\x51\xa7\xf4\x24\x14\xf3\xef\x39\x21\xf5\xbf\x62\x79\x50\xe9\xcc\x93\x84\x4a\xe2\x57\x4a\x6a\xe7\xa6\x48\x7e\xfc\x74\x4f\x02\x94\x7a\xe8\xc1\x37\x6f\x7c\xce\x3a\x3f\xdd\xc3\x4c\x91\x83\x3a\xd1\x35\x37\xf9\xb1\x57\x6e\x62\x93\x86\x71\x90\xa7\xca\xe5\xcb\xdc\xd1\xef\x16\x9e\x5f\xf9\x4e\xb4\x47\xce\x43\xb1\x5b\xc5\x79\x47\xcf\xbe\xcd\x69\xd6\x07\x92\xec\x45\x86\x45\xe8\xfc\xfd\x6d\x31\xee\x1d\x23\x9b\x70\xf4\xb6\x23\xfb\xeb\xa6\x7e\xd4\xc7\x5d\xf0\x27\x57\x72\xfd\xfb\xd6\x13\xa9\x3e\xfe\x17\x00\x00\xff\xff\x32\xbc\x65\x4e\xb6\x58\x00\x00")

func gitignoreJoomlaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJoomlaGitignore,
		"gitignore/Joomla.gitignore",
	)
}

func gitignoreJoomlaGitignore() (*asset, error) {
	bytes, err := gitignoreJoomlaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Joomla.gitignore", size: 22710, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreJuliaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\xcb\xca\xd1\x4b\xce\x2f\xe3\x02\x33\xb4\x10\xcc\xdc\xd4\x5c\xae\x94\xd4\x82\x62\x7d\x10\xa1\x97\x95\xc3\x05\x08\x00\x00\xff\xff\x73\x83\x7e\x53\x2a\x00\x00\x00")

func gitignoreJuliaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJuliaGitignore,
		"gitignore/Julia.gitignore",
	)
}

func gitignoreJuliaGitignore() (*asset, error) {
	bytes, err := gitignoreJuliaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Julia.gitignore", size: 42, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreKicadGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3f\x4f\xc3\x30\x10\x05\xf0\xfd\x3e\xc5\x49\x5d\xc0\x52\x9c\xcc\xdd\x68\x55\x16\x04\x74\x60\xaf\x1c\xfb\x9a\x5a\x8d\xff\xc8\x77\xa9\xcb\xc2\x67\x47\x0e\x82\x89\xe5\x0d\xa7\xf7\x7b\xba\x0d\x3e\xa7\x82\xc7\xfd\x8e\xd1\x11\xfb\x29\x92\xc3\x85\x7d\x9c\xf0\xc5\xef\x8d\xdb\xe2\x45\x24\x6f\xfb\xbe\xd6\xaa\xaf\xde\x1a\xd7\x65\x3b\xea\x54\xa6\x1e\x60\x83\x1f\x14\x72\x2a\xa6\x7c\xe2\xd9\xcf\xc4\xa0\xf4\x30\x0c\xa0\xf4\x68\xae\x2d\x6d\xcb\x55\x9d\xb2\x1d\xbb\xf5\xfa\x05\x27\xb3\x48\x62\x73\xa3\x4e\x81\xd2\x12\x72\x5b\x7a\x23\x99\x3d\xcb\xcf\x0e\x3e\xd0\x3d\xa7\x22\xe4\xf0\x5c\x52\xc0\x03\xb1\xbd\x50\x30\x8f\xa0\x74\x24\x69\xfd\xa7\x45\x52\x49\x8b\x50\xf9\x9f\x1c\xed\x18\xa9\x36\xe0\x38\x82\xd2\x4c\xdc\xd8\xe1\xb7\xb4\x7b\x7f\xfd\xfb\xf9\x1e\x66\x50\xda\xf2\x0d\xbe\x03\x00\x00\xff\xff\x18\x05\x31\xfa\x0e\x01\x00\x00")

func gitignoreKicadGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKicadGitignore,
		"gitignore/KiCad.gitignore",
	)
}

func gitignoreKicadGitignore() (*asset, error) {
	bytes, err := gitignoreKicadGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/KiCad.gitignore", size: 270, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreKohanaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\x4f\x4e\x4c\xce\x48\xd5\xd7\xe2\x42\x16\xcb\xc9\x4f\x2f\xd6\xd7\xe2\x02\x04\x00\x00\xff\xff\x96\xfe\x7e\x2e\x27\x00\x00\x00")

func gitignoreKohanaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKohanaGitignore,
		"gitignore/Kohana.gitignore",
	)
}

func gitignoreKohanaGitignore() (*asset, error) {
	bytes, err := gitignoreKohanaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Kohana.gitignore", size: 39, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLicense = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x5d\x6f\xe4\xb6\x92\x7d\xe7\xaf\x28\xf8\x25\x36\xa0\xb4\x33\xbb\x41\x80\x49\x16\x0b\x04\x4e\x06\x58\x20\x7b\x11\x24\x73\x91\xe7\x6a\xaa\xba\x55\x63\x8a\xd4\x14\xa9\xee\xe9\xfb\xeb\x2f\xaa\x48\xa9\xe5\xd8\x63\x4c\x6e\x9e\xec\x96\x44\xb2\xbe\xce\xa9\x53\x7c\x78\xf8\x06\xde\xec\xbe\x81\x7f\x46\x3e\x91\x64\x0c\xce\xfd\x5e\xb0\xd0\x48\xb1\x40\x3a\xc0\xaf\xb3\x4c\x29\x93\x73\xef\x07\x82\x80\xe7\xac\x0f\xc7\x94\x0b\x7c\x98\x85\x73\xcf\xbe\x70\x8a\x19\xca\x20\x69\x3e\x0e\x69\x2e\x50\x06\x82\x73\x92\xd0\x03\xce\x25\x8d\x58\xd8\x63\x08\x17\xf0\x29\x1e\x48\x1c\x7d\xf2\x61\xce\x7c\x22\x78\x48\xd3\x45\xf8\x38\x14\xc0\xd8\xc3\x6f\x14\xb0\x50\x0f\xbf\xe9\x93\x0c\xb7\x3d\x1d\x38\x52\x0f\x7b\x0a\xe9\x7c\x07\xf3\x94\xa2\x6d\xed\x85\xb0\x24\xd1\x35\x2e\xcf\xfb\x4c\x1f\x67\xb3\xf5\x1c\x49\x6e\xf3\x1d\xdc\x12\xfa\xc1\x76\xc4\x10\x3a\xc0\x08\x37\xf6\xee\xe6\x4e\x4d\xc7\x08\x49\xf8\xc8\x11\x83\x1a\xf9\x08\xe9\xe0\x70\x2e\x43\x92\x3c\xf0\xa4\xcb\xee\x75\x6f\xe8\xb1\xe0\x1e\x33\xd5\xed\x3a\x40\xb8\xf9\x23\xc9\xe3\xcd\xdd\xce\xb9\x07\x92\x82\x1c\xeb\x91\x19\xce\x9c\x07\x28\x09\x26\x92\x11\x23\xc5\x12\x2e\x20\x14\x38\x7e\x9c\xed\xcd\x90\x32\x81\x54\xaf\x4a\x02\x04\xdd\x08\x0e\x49\xd4\x1d\x37\xd5\x00\xab\x6d\x3e\xc5\x22\xbc\x9f\x0b\xc7\x63\xfd\xd2\xa7\x71\xd4\xe8\xea\x4b\x75\x9b\x4f\xd4\x81\x9f\x43\x99\x05\x83\xf9\x98\x3d\x53\x2c\x7c\x60\xef\xd4\x9d\x0c\xb7\x37\x0f\x75\xd1\xcd\x1d\x94\x01\x6b\x3a\xa6\x79\x1f\xd8\x83\xc7\x68\x96\xe1\x3e\x5c\x6c\xf5\x99\x8b\xa5\xec\x40\x28\x7a\x88\x66\x40\x9c\x0f\xc8\xa3\x1d\xca\xf1\x20\x1c\x8f\xb5\x1a\xf6\x33\x87\xde\xf2\xd0\xc1\x98\x7a\x3e\x5c\x3a\xe0\xe8\x93\x4c\x49\xb0\x10\x68\x44\xca\x40\x62\x71\xcd\x1d\x08\xcd\x99\x9c\x1e\x23\xd4\x73\xae\xae\x11\x60\x86\x83\x10\xa9\x05\x19\xa6\x94\x33\xef\x83\x2d\xc6\x78\xd1\xa8\x8c\x70\x1e\xb0\xe4\x44\x27\xb2\x24\x5b\xa4\x30\x5e\x96\x48\x65\x3b\x35\xcc\xbd\x46\x69\x71\x20\xf0\xc8\x05\xb5\x14\x2d\x66\x24\x9e\x31\xc0\xb2\x62\x07\xef\x07\xd2\x18\xd7\x84\x8d\x78\x71\x6b\xac\x49\x23\xad\x31\x6a\x61\xb3\x4c\x4a\x1a\x93\xbe\x19\x08\xb8\x27\x0c\x56\x39\x66\x76\x8b\x3e\x99\x65\x9a\xbf\xc3\x2c\xe6\xf4\x24\xa9\x9f\x0d\x0c\x5f\x94\xad\x25\x48\x5a\x05\x09\x8e\xc8\xd1\x09\x4d\x73\xf3\x21\x09\x1c\x75\x07\x12\x58\x23\xa7\xcf\x5b\xd1\xb0\xd4\x1a\xe2\x08\x13\x4a\x59\xc0\x67\xf6\xce\xd9\x6c\x73\x74\x38\x24\x29\x96\x45\xcb\x4a\xde\x39\xf7\xae\x2e\xaf\x5f\x68\x9d\xd7\x7c\x2d\x61\x32\x13\xc7\x54\xf8\x64\x56\xe4\xee\x49\x8d\x68\x7a\xe8\xd3\x44\xbe\xda\xe8\x34\x24\x7d\xcf\xfa\x3f\x06\xad\xdd\xcc\x3d\xc9\x6a\xbf\x4f\xe3\x44\x31\xdb\xef\xae\x16\x21\x49\x4e\x11\x30\xe7\xe4\x19\xad\xc8\x95\x7d\x74\x7f\x40\x67\x0e\xdd\xea\x77\x37\x3f\x1e\x0e\x2c\xa3\x22\xb6\x5b\x92\x43\x9f\x8a\x96\xa0\x15\xf4\x40\xba\x7f\xd6\xdc\x64\xc3\xb3\x66\x55\xfd\x5c\xf9\xc4\xbd\xc0\x27\x5c\xd9\x43\x8f\xe9\xe0\x94\xc2\x1c\x0b\x0a\x87\x0b\x50\x20\xdf\x90\x39\x4d\xe1\x62\x36\xb5\x53\xf5\x63\xdb\xab\xe2\x27\x5c\x60\x53\xc7\xcb\x07\x30\xc7\x9e\x04\x58\xf7\x20\x19\x73\x57\x3d\x7a\x8c\xe9\x1c\xa8\x3f\x1a\xb2\x07\xce\x6a\xf3\x40\xe2\x5e\x25\xbd\x8d\x91\x4b\x81\xc1\x48\x18\x35\x56\xfa\x9b\x63\xa1\xd8\x53\x0f\x81\x8e\x18\x34\xc7\xe4\x8d\xa6\xd5\x68\xe3\xc7\x2b\xd7\xec\x9c\x7b\xb3\x7b\x95\x63\x77\xf0\x63\x3d\x6a\xc4\x9e\x00\x4f\xc8\x01\x15\x8b\xd5\x21\xdd\x72\xc4\x0b\xec\xc9\x4d\x92\x0a\x79\x5d\xb8\x57\x1a\xdf\xee\x28\x6d\xc7\x24\x10\x89\x8f\xc3\x3e\x29\x61\x2c\x74\xa7\x64\xb4\xf9\xda\x3d\x3d\xff\xe6\xee\x75\xfb\x1a\xce\xa9\x83\xbd\xd6\x9f\x10\xc4\xd4\xa0\x4e\xbd\x2b\xa9\x96\xd5\x21\x85\x90\xce\x1c\x8f\xdf\x3b\x07\xc0\x3b\x7b\x58\xb7\x2c\x09\x84\x2a\x30\xa9\x03\xec\x71\x2a\xdd\x26\x85\x9d\x96\xa4\x32\x8e\x3d\x9c\x02\x5e\x3a\x63\x8f\x39\xb2\xc7\x42\x9d\x83\x9a\x04\xc1\x98\xd5\xae\x46\xdd\x3f\xd8\x39\xbc\x83\x31\x29\xae\x9b\xab\x42\xda\x13\x6a\x88\x8a\x95\x68\xeb\x32\xb5\xbb\x68\x67\x6a\xa0\x6b\x87\x5a\xb7\x6a\x7b\xf1\xae\x95\x18\x97\x4a\xcc\x93\xf0\x09\xfd\x65\xd9\x7c\xaa\x1d\x67\xed\x0b\x15\x4a\x5f\x65\xe0\x11\x8f\x06\x87\xc0\x8f\x14\x29\x67\x07\xd0\xd3\xc4\x96\x2c\xe5\xd4\x8d\xc5\xa7\xdd\xba\x5d\xcd\xa7\x55\x95\x52\x4f\x2e\x30\xc7\x03\x72\x43\x6d\x31\x50\xeb\x72\xa1\x23\x4a\xbf\x69\x5b\x1a\x93\x3c\xef\x3f\x68\xd9\x35\x90\x5c\xa9\x37\x37\x42\xc2\xa3\xe0\x34\xc0\xb7\xb7\x78\xd7\xd5\xf6\x6d\x06\xbc\x78\x7e\x03\xb7\xa0\xaf\x44\xd1\x73\xce\x34\x72\x6c\xbc\xd1\xd8\xac\xf6\x12\x2d\x74\xed\xcb\xc0\x51\x53\x73\x75\xed\xc4\xbb\x6b\xc3\x5e\x4a\x2f\xcf\x2a\x03\x72\xc3\x04\x0a\x67\x3d\xaf\xd6\xf6\x4f\x2c\x7a\xfe\x89\xe0\xed\x77\xf7\x6f\xef\x7f\x7e\xd0\xad\x95\xcd\x01\x7e\x9e\x25\x4d\x84\x11\x7e\x45\x09\x8c\xd6\xf9\xd4\x82\xfa\x01\x3c\xa4\x39\x7a\xb6\x86\xf0\xe6\x0d\xfc\x3f\x8a\x1f\xe0\xcd\xdb\xb7\xdf\x41\x53\x27\x15\x98\xb0\xba\x58\xdb\xc1\x62\x5c\xa3\xd4\x6a\x84\x12\x6a\xf5\x13\x03\xf0\x38\x05\x6b\xb3\x95\x40\x95\x97\x29\x1d\x34\xdc\xd7\x66\xa7\x0b\xd4\xa0\xbe\xe2\x2d\xcf\xde\x53\xce\x49\x40\x95\x5b\x3b\xc9\xbc\xee\x17\xf7\xee\x7e\x30\xd8\x59\x88\x78\xd7\xe8\x3e\xf3\xc8\x01\xa5\x03\xfa\x38\xf3\x09\x83\xa9\x27\x4d\xbd\x08\xe5\x29\xc5\x7e\x03\xe0\x97\x64\x9d\x03\x50\x5f\x7a\x75\x59\x29\x93\xbd\xb1\x46\xc0\xb3\x75\x33\xed\x5b\x97\xea\xe7\x2b\x1e\xe6\xc5\xc5\x9d\x73\xff\xb5\x83\x3f\x50\xe5\xe7\x0e\xde\xd7\x9a\xaa\xcd\x2f\x97\x85\xf7\x55\x5a\x71\xa9\x04\x54\xd9\x40\x99\x80\x63\x95\x4c\x78\xd2\xa6\x6a\xfe\x77\xee\xa9\x45\x1d\x2c\xcd\x44\xc9\x97\xf6\x17\x48\x27\x92\x12\x2e\x1d\x1c\xe6\xa0\x7f\x36\xaa\xad\x03\x16\xa1\x53\xf2\x8b\x3e\x72\x73\xf4\x1a\x8f\xea\x41\xb8\xc0\x59\xcd\xd4\x24\xee\x31\xf6\x6b\x87\xcc\xb3\x88\x66\x45\xb2\x4a\x4e\xcd\xc2\x72\xe8\x57\xf9\xf5\xa6\x64\x41\x6a\xfd\x90\x7a\x68\xc2\x4b\x9f\x7a\x9c\xb5\x23\x6b\x93\x6d\xc8\x38\x0f\x64\xe9\x8b\xe9\xec\xb4\xb9\x58\x97\x9d\x63\xfd\xf7\xf6\x5a\x25\xf4\x89\x73\x85\x76\x86\x33\x85\x60\x82\x6b\x36\xcd\xf2\xd2\xfe\xae\xee\x7f\xd7\x3d\x69\x3e\xb7\x7c\x67\xf4\x11\x82\x36\x35\xe1\x92\x84\x29\xd7\xfc\x9f\x59\x29\xf9\x96\xf9\x6e\xd1\x23\x30\xe2\x27\x1e\xe7\xd1\xf5\x73\x13\x00\x93\xa4\x13\xf7\x95\x0d\x3f\x57\x23\x5b\xa3\x9b\x81\x85\x47\x72\x96\x73\xad\xe7\x7c\x67\xc7\x34\x53\xe2\x05\xbc\x05\xda\xaa\xb5\x2d\x18\xa9\xe7\x79\xdc\xca\x44\x88\xf3\xb8\x37\x3d\xe0\x7c\x9a\x78\x81\xdc\x2d\x9f\xee\xd6\x4f\x16\xcd\x7d\x15\x9a\xaf\x6b\x4a\x77\xd5\x94\xda\x46\xb4\x82\x2a\x9b\x24\x69\x5a\xb1\x96\xf8\x2a\xa4\xaa\x8e\xa9\x45\xad\x5d\x6e\x2d\xc2\x11\x1f\x29\x3b\x0b\xb3\xbd\x5c\x23\xb8\xa7\x48\x07\xb6\x5e\x6e\xf3\xcb\x48\xcd\x8b\xad\x7e\xc7\x02\x01\xe5\xd8\xc4\xa7\x41\xc5\xf5\x54\x84\x97\x69\x6d\x53\x77\xaa\x12\x73\x2b\xcf\xc6\x13\xb9\x15\x7d\x93\x11\x95\x7e\xb1\x54\xce\xa8\xf6\xb8\x3c\x68\xce\x15\x5d\x7b\xda\x32\x7d\xc5\x45\xad\x44\xa1\xec\x39\x67\xfb\xdf\x63\xf4\x14\xc2\x22\xf3\x14\xa7\x0b\x77\x27\x71\x1a\xec\x4a\x3a\xc6\x8b\x1a\x2f\x25\x9d\x62\xc5\x50\x0b\x4f\x37\xef\x39\xcb\x3c\x55\x8a\xf9\x38\x33\x15\xa0\xf8\x21\x5d\x16\xaf\x56\x29\xd6\x5a\xeb\x12\x8d\x6c\xf0\xa7\x71\xaa\x98\xda\x5f\xb6\xfe\xd3\xa7\x49\x28\x67\x78\x69\x9a\xdd\x39\xf7\xdf\x3b\xf8\xb5\x6e\xf3\x0b\x7b\x8a\x99\xe0\x1d\x86\xb0\x47\xff\xb8\x83\xdf\x87\x34\x87\xca\x5e\x26\xaf\x17\x13\xae\x19\xd3\x57\x42\xa8\x72\x76\x4f\xee\xc3\xdc\x1f\x17\x4d\x66\xd1\x3d\x61\x60\xa3\x68\x8e\x55\xa2\x69\xa7\x69\xa4\xff\x27\x7a\x2a\x03\xc5\xcd\xee\x2d\xfe\x7b\x02\xb5\x9e\xe4\x44\x4b\xa2\x17\x8c\x3d\xa7\xc4\x82\x8f\x9a\x4a\x8e\xda\xa5\xbd\x4f\x73\x2c\xee\x4b\x03\x01\xff\x17\x57\x15\xff\x5c\x6c\xaf\x56\x71\x86\x9c\xa0\xf9\xf9\x67\x46\x3d\x0a\xc6\x2a\xa0\xeb\xe4\x6d\x1e\x53\xbf\xea\x7d\x90\x74\xc1\x50\x2e\x5f\xeb\xfc\xd4\xb9\xa8\x39\x57\x49\x75\x20\xd1\x38\x74\xa0\x4f\xb2\x25\x43\x07\x86\xf5\xd1\x7a\x51\xb0\xe5\x65\x7a\xce\xcb\x10\x5a\x06\xd5\x82\x4f\x0a\xd3\x4c\x2f\x32\xf0\xcb\x12\xd3\xfd\x4d\xd2\x83\x85\xf4\xdc\xdf\x20\x3d\x78\x4e\x7a\xee\x3f\x22\x3d\xf8\x1c\xe9\xb9\xbf\x4a\x7a\xf0\x79\xd2\x73\xaf\x90\x5e\x83\x93\xb2\xde\xfb\x81\x56\x74\xad\x75\xdd\x13\x8d\xd4\xc3\x15\x17\x98\x5d\x03\x58\xaf\x1a\xdb\x46\x42\xcc\x35\x80\x4f\x51\xbd\x1d\xcb\x3e\x87\x52\xb7\x1c\xf8\x0c\xa6\xf0\x17\x60\xfa\x4c\x45\x18\x45\xea\x31\xac\x4a\xa6\xae\x54\xad\xfe\x74\xb1\x0a\x70\x58\x19\xd4\xb5\xef\xb0\x0d\x8b\x42\x23\xb2\x91\x40\xf3\xb7\x99\xda\xb5\xd1\xae\x1e\xe2\x71\x53\xbd\x0d\x62\x0e\xed\x77\xfe\xf3\xfc\x7b\xe6\xc6\xd5\x5a\xb9\x6b\xe9\x1b\xe9\x6e\x67\xce\x76\x32\xc7\xe3\x97\x4f\x9f\x49\x6a\xb1\x63\xce\x24\x75\xf8\x7f\x26\x54\xdc\x4b\x42\xa5\x4e\xbf\xaa\x24\x37\x33\x42\x9d\xba\x39\x02\xb1\x75\x03\x73\xb2\x6a\x37\xb9\x40\x49\x5f\xcc\x57\xce\x7d\xbb\x83\x5f\x36\x13\x87\x9a\xf0\x13\x67\x33\xa8\x5e\x72\x00\xe0\x0e\xfe\x91\x94\x63\x7a\x1a\xb1\xfa\x32\xa1\x51\x5a\x53\xb5\x03\x85\xa7\x85\xa5\xb3\xa5\x69\xbb\x7e\xd5\x76\xd4\xd7\x59\xa7\x49\x3b\x7d\xd3\x78\xc6\x4a\xc6\xba\xda\xd9\xc2\xbd\xf0\x9d\x75\x27\xce\xd0\x27\x3f\xab\xdd\x66\xcb\x7e\xd3\xfc\xd3\xe1\xa0\x1a\xf1\x3a\xe1\xe7\xaf\xb9\x5d\xba\xa8\x2c\x80\x58\xc7\x55\xca\x57\x91\x9c\x04\xce\x28\x4a\xb0\x4c\x3a\xdb\xd9\x0d\xe6\x05\x1e\x59\x23\x9f\xa2\x27\x89\xcb\x14\x55\x63\xdc\xa2\xd7\x99\xdc\x66\xb5\x3a\x17\x2c\x73\x49\x72\x79\x62\xf6\xd3\xc9\xe2\x05\xf4\x5f\x8f\xb5\x72\xe5\xa2\xb4\xac\x7c\x30\x60\x2c\xb8\xe7\xc0\xaa\xf2\x0f\x5c\xda\xd4\x69\x78\xab\x10\xf1\x73\xc0\xf5\x56\xa9\x72\xf9\xf6\x22\xb1\x5e\x7a\x0d\x04\xb8\xcf\x14\x3d\x2d\x17\x8f\xc6\x71\xea\xa3\x95\x48\x4f\x1a\x56\x25\x32\xef\x67\x41\x7f\x59\x97\xb5\x08\xe9\xcf\xcd\x0e\x24\x62\x0a\x67\x91\xc9\x49\x0c\x83\xa0\xe2\xc2\xab\xe8\xaf\x8d\xc5\xc8\xfd\x95\x21\xa3\x5d\x47\xbe\xd4\xac\x2d\x9f\x7e\x93\xcf\xbe\xd5\x5d\x86\x3a\x38\x65\xae\x61\xb1\x58\xf8\x40\xb8\xbd\x0a\x59\xee\xe1\x5a\x5b\xd4\x90\x19\x9a\x47\xbc\xb4\x8b\xa7\x0d\x56\xa0\x91\x97\x0e\xbd\xcb\x28\xf8\xba\x42\x85\x4a\x84\xcb\xbd\xc0\x97\xe2\x7c\x07\xef\xea\xfd\xe5\x75\x50\x6a\x21\xfb\xac\x63\x69\xbf\x5c\x45\x58\xe3\x21\xd5\x96\x8a\x62\x9f\xa2\xa6\x25\x77\x6b\x20\xab\x97\xeb\x35\xe3\x7a\x51\xf2\x71\x66\xa1\x6b\xef\x6a\x93\xfd\x6a\x92\x86\xb9\xdf\x84\xd9\x72\x91\x0b\xc6\xbe\x0d\x4c\x7e\xbd\x5b\x6b\x8c\xf8\xd0\x6e\x5b\xd7\x3b\x5c\xce\x46\x8b\xa8\x83\x38\x4a\x69\xb1\xdd\x60\xd3\x36\x1a\xd0\x30\xd7\xcf\x95\xc8\xd3\x3e\xf0\x11\x3f\xc3\x61\xac\xae\xd8\x2d\x9b\xbc\x60\xf0\xbb\x24\x30\x26\x21\xad\xf3\x24\x63\x13\xc0\x53\x20\xe5\xb9\x4c\xe4\xfe\x67\x28\x65\xfa\xfe\xfe\x7e\xb9\x17\x6e\x17\xfb\xbb\x24\xc7\xfb\x2a\x67\xfb\xa4\x1c\x7d\xff\x2f\x92\x74\xff\x66\xf7\xcd\xfd\xff\xba\x7f\x07\x00\x00\xff\xff\x7f\x9e\xed\xca\x9b\x19\x00\x00")

func gitignoreLicenseBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLicense,
		"gitignore/LICENSE",
	)
}

func gitignoreLicense() (*asset, error) {
	bytes, err := gitignoreLicenseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LICENSE", size: 6555, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLabviewGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\xb1\x0a\x02\x31\x10\x44\xfb\xfd\x8a\x85\x6b\x34\xc5\x7e\x85\x76\xb1\xb2\xb0\xde\x24\x0b\xae\x2c\x97\x23\x1b\xf5\xfc\x7b\x49\xe0\x9a\x61\x78\x30\xf3\x16\x8c\x9a\x1a\x37\x15\x87\x40\xf6\x31\x4d\xdb\x28\x96\x00\x16\xbc\x3f\xb9\x49\xc1\x9a\x5e\x92\xbb\xe3\x49\xd7\x4c\xf8\xd0\xb5\xd4\xaf\xe3\x25\x46\x3f\x43\xa0\x62\x06\x81\xbc\xce\xa0\x30\xc8\xcf\x74\xee\xaf\xbb\xe4\x77\xe7\x64\xf3\x5d\x76\x19\xf0\x26\x9d\x0b\x77\x86\x40\x6c\xca\x7e\x98\x37\x87\x7f\x00\x00\x00\xff\xff\x58\x5e\x95\x08\x8e\x00\x00\x00")

func gitignoreLabviewGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLabviewGitignore,
		"gitignore/LabVIEW.gitignore",
	)
}

func gitignoreLabviewGitignore() (*asset, error) {
	bytes, err := gitignoreLabviewGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LabVIEW.gitignore", size: 142, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLaravelGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\x41\x6a\x03\x31\x0c\x45\xf7\x3a\x85\xa0\xd0\x45\xa0\xf6\xa6\xdd\xf4\x04\x59\x64\x11\x7a\x81\xa2\xb1\xd5\x99\xe9\xd8\x96\xb0\xe5\x81\xb9\x7d\x69\xc0\x49\x76\xef\x81\xf4\xfe\xce\x25\x4a\xf5\x50\x24\xf2\x77\x96\xd8\x13\x37\x0f\x45\xf3\x5b\xe4\xa9\xcf\x2e\xc9\x0c\xf0\x82\x17\xaa\xb4\x73\xc2\x77\x6c\xca\x61\xfd\x59\x03\x4c\x22\xd6\xac\x92\xfa\x20\x59\xd7\xc4\xd1\xe9\xa2\x40\xaa\xbe\x99\x54\x9a\xd9\x3f\x7f\x7e\xe0\x2b\x5e\x7a\xe6\xf2\x28\x68\x9f\xd2\x1a\xc6\xf5\xd0\x45\x0c\x46\xe0\xe4\x36\x3e\xc0\x71\xd9\xdd\xe9\x56\xbf\xe1\x00\x38\x4b\xe6\x66\x4c\xd1\x1d\x94\xd3\x93\xfe\x36\x29\xff\xe3\x5f\x12\x36\x36\xe6\x8a\xd7\xf3\x15\x8d\xda\x86\xb5\x97\xc2\x15\xa9\x44\x8c\xac\x49\x8e\xcc\xc5\x50\x29\x6c\x34\xb3\xc3\xc5\x4c\xdb\xa7\xf7\xf3\x6a\x4b\x9f\x5c\x90\xec\xeb\x88\xb4\x07\x82\xbb\xa3\x87\xbf\x00\x00\x00\xff\xff\xb5\x19\x12\x6a\x44\x01\x00\x00")

func gitignoreLaravelGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLaravelGitignore,
		"gitignore/Laravel.gitignore",
	)
}

func gitignoreLaravelGitignore() (*asset, error) {
	bytes, err := gitignoreLaravelGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Laravel.gitignore", size: 324, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLeiningenGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x51\x0e\x02\x31\x08\x05\xff\x39\xca\x26\x0b\x67\xaa\x15\x77\x51\xda\x12\xa0\x89\xde\xde\xb8\x69\xfc\x7a\x99\xc9\x1b\x1b\x0d\xdf\x4d\x61\x2d\x96\xa8\xb0\xe1\xb3\x38\x6c\x58\xb5\x44\x00\xa9\xdc\x08\xe8\x02\x0e\x02\xca\xe2\x07\xe7\x4f\x9d\x5c\x5f\x63\x66\x10\xa0\xb2\xf4\xfd\xce\x16\x7b\xcc\xb6\xd0\xd9\x74\x3f\x25\x72\xf8\x67\x29\xd3\x79\x48\xff\x07\x8f\x22\x3a\x9d\x03\xb0\x5f\x67\x1b\x9e\xf0\x0d\x00\x00\xff\xff\x5a\x92\x69\x1b\x93\x00\x00\x00")

func gitignoreLeiningenGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLeiningenGitignore,
		"gitignore/Leiningen.gitignore",
	)
}

func gitignoreLeiningenGitignore() (*asset, error) {
	bytes, err := gitignoreLeiningenGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Leiningen.gitignore", size: 147, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLemonstandGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x41\x6e\x85\x30\x0c\x44\xf7\x9c\xc2\x55\x17\x95\x58\x94\x23\x7d\xe5\xc7\x06\xac\x1a\x3b\x8a\x8d\xda\x7f\xfb\x2a\x50\x2a\xb2\x9a\x37\x93\x8c\xac\x79\x9a\xc5\x67\x59\xcb\xc0\x8a\xf4\xf3\x47\x1e\x49\xe4\xe0\x29\x9b\xce\xbc\x4c\xe3\xf0\x76\xe1\x29\xff\xaf\x51\x4d\x84\xaa\x4f\xe3\x30\xb1\x72\x34\x15\x5b\x0e\x5f\xd6\x52\x2d\x61\xc3\xa0\xad\x34\xdd\x8b\x58\x42\xc2\xf3\xfb\x71\x88\xea\x63\x66\xa1\xa3\xb1\x19\xee\x0d\x9f\x29\x7f\x91\x62\x17\x89\x2d\x77\x9f\xb7\xae\x91\xad\xd2\xdd\x3b\xb9\xb3\x69\x17\xad\x56\x3a\xff\xf2\xa0\xed\x9e\xec\x7e\x2e\x79\x87\x84\x08\x6d\x1d\x69\x3c\xc6\x36\x16\x78\x86\x97\xed\x80\xa6\x1f\x01\xdf\x49\x03\xa8\x26\x27\xc8\xc2\xa4\x01\x79\x4d\xba\x90\x43\xd8\xd5\x1b\x7e\x03\x00\x00\xff\xff\x01\x92\x39\x8f\x5c\x01\x00\x00")

func gitignoreLemonstandGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLemonstandGitignore,
		"gitignore/LemonStand.gitignore",
	)
}

func gitignoreLemonstandGitignore() (*asset, error) {
	bytes, err := gitignoreLemonstandGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LemonStand.gitignore", size: 348, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLilypondGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x48\x49\xe3\xd2\xd2\x2b\x28\xe6\xd2\xd2\xcb\xcd\x4c\xc9\x84\x50\x5c\x5a\x7a\x39\xf9\xe9\x5c\x5a\x75\x5c\x80\x00\x00\x00\xff\xff\x80\x9a\xc4\xa4\x21\x00\x00\x00")

func gitignoreLilypondGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLilypondGitignore,
		"gitignore/Lilypond.gitignore",
	)
}

func gitignoreLilypondGitignore() (*asset, error) {
	bytes, err := gitignoreLilypondGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lilypond.gitignore", size: 33, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLithiumGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xc9\x4c\x2a\x4a\x2c\xca\x4c\x2d\xd6\xd7\xe2\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x2d\xd6\x2f\xc9\x2d\xd0\xd7\xe2\x02\x04\x00\x00\xff\xff\x1a\xab\xaa\xaa\x1c\x00\x00\x00")

func gitignoreLithiumGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLithiumGitignore,
		"gitignore/Lithium.gitignore",
	)
}

func gitignoreLithiumGitignore() (*asset, error) {
	bytes, err := gitignoreLithiumGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lithium.gitignore", size: 28, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreLuaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8f\x41\x4b\x04\x31\x0c\x85\xef\xf9\x15\x81\xb9\x68\x0f\x39\xc9\xb0\x77\x15\x3c\x0c\x28\x78\xf0\x28\x6d\x9a\xd9\xc9\x6e\xdd\x0e\xed\x14\xc7\xfd\xf5\x92\x8a\x7b\x68\x78\x84\x2f\xef\xbd\x0e\xf8\x98\xbf\x56\x4d\x12\x71\x6a\x1e\x6b\x6e\x85\xa5\x42\x6a\x9e\x29\xb7\x0d\x60\xc0\xd4\x7c\xc9\x7c\xae\x18\x9a\xa6\x88\xb3\x26\xa9\xe0\xa8\x16\x26\xdb\x83\xa3\xab\xae\xe0\x68\xf3\x85\x8e\x57\xbb\x78\x0d\x27\xe1\xed\x46\x66\x7b\x26\xce\x5d\x85\x13\x38\x92\x34\x1b\xf9\x56\x84\xff\xf3\x5f\xc4\x47\x29\xc6\x1d\x79\x01\x47\x2b\x2f\x86\x4c\x1a\x8a\x2f\xda\x9d\x92\x06\x70\xe4\x4d\xf5\x61\x7e\x51\x66\xf3\xdb\x57\x83\xdf\x17\x5f\x24\x62\xee\x05\x2a\xde\xe9\x85\x09\x3f\xf4\x12\xf3\x77\xc5\xa7\x69\xaa\xf7\x76\x91\x92\xf5\xcf\x7d\x90\xb3\xcd\x8f\x39\xc3\x80\xcf\xbb\x70\xdb\x7c\xf8\x2b\x2e\xbb\x58\xe1\xb6\x59\xe8\x6a\x7f\x54\x77\x18\xc1\xd1\x7e\x18\x3f\xc7\x07\x70\xb4\xc8\x0e\xf0\x1b\x00\x00\xff\xff\x02\x2b\x5e\x62\x44\x01\x00\x00")

func gitignoreLuaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLuaGitignore,
		"gitignore/Lua.gitignore",
	)
}

func gitignoreLuaGitignore() (*asset, error) {
	bytes, err := gitignoreLuaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lua.gitignore", size: 324, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreMagentoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x4f\x41\x6e\x84\x30\x0c\xbc\xe7\x15\xa9\x72\x43\x6a\xfc\x89\xaa\xb7\x3e\xc2\x35\x26\xa4\x38\x71\x44\x42\x4b\x7f\x5f\x81\x10\xdd\x03\x8b\x2f\xb6\xc7\x33\x63\x8d\x7b\x7d\x5a\xce\x38\xfb\x81\x81\x73\x53\xfb\xc6\x03\x2e\xd2\xec\x7b\x14\xae\xd6\x5a\xeb\xcc\xad\xd2\x00\x96\x02\xdc\x08\x44\x09\xc5\xaf\x49\x0c\x24\xee\x23\x42\x67\x5e\x8e\xc9\x8f\x0d\x89\xb8\xd6\x13\xa1\xa5\x36\x4d\x3c\x5f\x9c\xfa\x51\x40\x34\xa8\xff\x2a\xe1\x1f\xd4\x9f\x2c\x8a\x3d\x7e\x0a\x5f\x68\xd6\x24\xa4\x39\x33\xb5\xc3\x19\x74\xf2\x21\x0e\x57\x04\x9d\x63\x88\x19\xe5\x86\x52\x7f\x6b\xe3\xd3\x03\xbe\x71\xde\xc3\x6c\xfd\xf1\xf7\xb6\x17\xa4\x09\x03\x43\xb7\x27\xff\x0b\x00\x00\xff\xff\x9d\x79\x4d\x27\x65\x01\x00\x00")

func gitignoreMagentoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMagentoGitignore,
		"gitignore/Magento.gitignore",
	)
}

func gitignoreMagentoGitignore() (*asset, error) {
	bytes, err := gitignoreMagentoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Magento.gitignore", size: 357, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreMavenGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\x41\x4e\x04\x21\x10\x85\xe1\x3d\xa7\x28\xe3\x46\x17\x4d\x9f\x41\xf7\x7a\x87\x9a\xe6\x49\x4a\xa1\x20\x05\xb4\x33\xb7\x37\xa3\x38\xe9\xcc\xee\xf1\x27\x1f\xd5\xd9\x22\xfa\xea\x6a\xc9\xfe\x9c\x93\xef\x1c\x6f\xdb\x90\xc0\x0d\xaf\xbc\x7d\x8d\x7a\xab\x3b\xac\x49\xd1\x76\x97\x15\xe7\xee\xa6\xf0\xd5\x4a\x85\x75\x41\x73\x01\x15\x1a\xa0\xdb\x65\x31\x84\xb1\x21\x2c\x93\xb8\xd3\x90\x14\xde\x47\x3e\xc1\x8e\xc2\xe7\x5d\xd7\x2e\x59\x34\x1e\xb3\x7b\xa4\x97\xbd\x48\x20\x89\x5a\x4c\x34\xd2\x1b\xef\x50\xfa\x36\xae\x15\x46\x9f\x6c\xf4\x21\x09\xf4\xe4\xff\x67\x23\x36\xd0\x68\x83\x53\xba\xfc\x39\x84\x67\xf7\xb0\xfe\x9e\x98\x70\xcd\xd7\x6f\x96\xf9\xba\x5a\xf7\x13\x00\x00\xff\xff\x70\xf0\xa7\xf5\x15\x01\x00\x00")

func gitignoreMavenGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMavenGitignore,
		"gitignore/Maven.gitignore",
	)
}

func gitignoreMavenGitignore() (*asset, error) {
	bytes, err := gitignoreMavenGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Maven.gitignore", size: 277, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreMercuryGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x41\x0a\x03\x21\x10\x44\xd1\x7d\x1d\xa5\x16\x95\x93\xe4\x0c\xc1\x99\x6e\x88\xd0\x46\x68\x15\xe2\xed\x83\x90\xdd\xe7\xc1\x7f\x7a\xde\x2b\xf7\x03\xff\x50\xeb\xb6\xc2\x07\xa8\xf6\x06\xe5\x99\xa0\xea\xa7\x4e\x50\x16\x71\xe8\xeb\xa0\x0a\xa8\xd1\x0f\xee\xa8\x17\xa8\xcb\x4b\x3b\x9b\x81\xba\x5f\x56\xa6\xe3\x17\x00\x00\xff\xff\x41\x17\x46\xe8\x5d\x00\x00\x00")

func gitignoreMercuryGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMercuryGitignore,
		"gitignore/Mercury.gitignore",
	)
}

func gitignoreMercuryGitignore() (*asset, error) {
	bytes, err := gitignoreMercuryGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Mercury.gitignore", size: 93, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreMetaprogrammingsystemGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xbf\x6a\xf3\x40\x10\xc4\xfb\x7b\x8a\x05\x17\x1f\x58\x58\x82\x0f\xd2\xa4\x4e\x48\x1a\x83\xc1\xea\xc3\x6a\x6f\x65\x9d\x72\x7f\xc4\xed\x9e\x15\xbd\x7d\x88\x6c\x13\xc7\xdd\xce\x14\xbf\x9d\x99\x39\xe5\x4f\x99\x90\xb8\xfe\x0a\xde\x8c\x25\x3a\x3d\x87\x19\x95\x06\xce\xdb\x7a\xca\x69\xe2\xac\x8e\xc5\x74\xc5\x79\x7b\x6f\x98\x0d\x9c\x38\x72\x46\x65\x0b\x23\x9e\x11\xc8\xa3\x08\x0b\x60\xbc\x1a\x92\x4a\x26\x86\xde\x79\x16\xb3\x01\x80\x80\xb1\xa0\xf7\x0b\xa0\xb5\x80\x71\x01\x2a\xa2\x29\x00\x66\x75\x3d\x92\x0a\xe8\x80\x0a\x84\xf1\x9f\x42\xc7\x77\x0f\xfa\x9c\x02\xe8\xc0\x10\x92\x65\x7f\xa1\x0d\xaa\xd3\x73\xd3\x50\x8a\xbd\x2f\x1c\x89\xeb\x91\xb5\xcb\xe8\xa2\xd4\x94\x42\x63\x9d\x4c\x1e\x97\x66\x7f\x38\xbe\xfc\x7f\x6a\xde\xd3\xdc\xa6\x6a\xb7\xab\xf6\x87\x63\x85\xd1\x56\x6f\x4e\xcd\x35\xf3\xc7\x89\xa3\xb9\xc4\x7d\x38\x6b\x42\x1a\x1e\xeb\x2a\x8b\x02\x25\xcb\x6b\xd7\x55\x65\x96\xe2\x55\xcc\x8f\x58\x11\xb7\xe3\x06\x68\x5f\x8f\xed\x6e\xfb\x3b\xf3\x9f\x75\xbf\x03\x00\x00\xff\xff\xb9\x6e\x6a\xb3\x87\x01\x00\x00")

func gitignoreMetaprogrammingsystemGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMetaprogrammingsystemGitignore,
		"gitignore/MetaProgrammingSystem.gitignore",
	)
}

func gitignoreMetaprogrammingsystemGitignore() (*asset, error) {
	bytes, err := gitignoreMetaprogrammingsystemGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/MetaProgrammingSystem.gitignore", size: 391, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreNanocGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\xb1\x4e\xc4\x30\x10\x44\x7b\x7f\xc5\x48\x57\x70\x69\xe2\x9e\x16\x44\x85\xa8\xe8\xd1\xca\x5e\x27\x46\xb6\xd7\x5a\xaf\x41\xf9\x7b\x14\x72\xdd\xcc\xd3\xd3\xbb\xe1\x4d\x14\x5d\xe5\x9b\x83\x0d\xcc\x91\xdb\x86\x0f\x6a\x12\x70\xdf\xcd\xfa\xb3\xf7\xed\x7c\xeb\xef\xf0\x8b\x73\x37\xbc\x72\xa2\x59\x0c\x45\x02\x59\x96\x86\x24\x0a\x99\xd6\xa7\xe1\xde\x98\xe3\x80\x09\x2a\x59\xd8\x1f\xf8\x2b\x66\x7d\x1a\xf8\xa1\x32\x19\x49\x66\x8b\xc8\x0d\x57\xf5\xa0\x5a\x16\x77\x79\xfe\xcc\x7f\x72\xed\xa2\xa4\x07\x52\x2e\x8c\x98\x95\x83\x89\x1e\xce\x6a\xff\x17\x5e\x94\xc6\x8e\x77\xd9\x5c\x38\xd7\x5a\x64\x73\x7f\x01\x00\x00\xff\xff\x6a\x05\x98\x26\xc5\x00\x00\x00")

func gitignoreNanocGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNanocGitignore,
		"gitignore/Nanoc.gitignore",
	)
}

func gitignoreNanocGitignore() (*asset, error) {
	bytes, err := gitignoreNanocGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Nanoc.gitignore", size: 197, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreNimGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcb\xcc\x4d\x4e\x4c\xce\x48\xd5\xe7\x02\x04\x00\x00\xff\xff\x6e\x5e\xa9\x72\x0a\x00\x00\x00")

func gitignoreNimGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNimGitignore,
		"gitignore/Nim.gitignore",
	)
}

func gitignoreNimGitignore() (*asset, error) {
	bytes, err := gitignoreNimGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Nim.gitignore", size: 10, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreNodeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x93\x41\x6f\xdb\x3e\x0c\xc5\xef\xfa\x14\x04\x72\xe8\xbf\x01\x62\xe3\x7f\xed\x71\xed\x30\x6c\x28\xb0\xa1\xdb\x65\xa7\x40\x96\x18\x85\x89\x4c\x09\x22\xed\xc2\xfb\xf4\x03\xed\xb6\xe8\xd0\x4b\xa0\x27\xfe\xf8\xf4\x44\xc5\x3b\x78\x2c\x49\x5c\xb6\x9f\x7d\x97\x4b\x72\x5c\xc7\x43\xc4\x61\x4a\xa6\xf6\x6e\xf1\x8d\x3f\x68\x6c\xad\xb4\x4d\xbb\x1d\x3c\x4d\xac\x34\x22\x44\xaf\xde\x55\x8a\xe6\x54\x29\xba\x7d\x27\x88\x71\x13\x5d\x2e\xe1\x6a\xf0\x03\x35\x0c\x5a\xda\x02\xa7\xd2\x80\x58\xb4\x4d\x23\xb2\x62\x84\x4c\x83\x40\x42\xc6\xe6\x4d\x0e\x0b\x5c\x24\x94\x19\x9b\x4f\xd8\x7f\xfb\x79\x6f\x4b\x97\x69\x38\x84\x32\x9b\xd5\xfd\x4b\x0d\xe2\x9b\xe7\x24\x5b\xa3\x96\x92\x05\x32\x5d\x11\x48\xd4\xf3\x30\x65\xf7\x6a\x65\xad\xbc\x04\x50\x14\x85\xb7\xcd\x8e\x97\x70\x2c\x93\xd6\x49\x0d\xf8\xd2\x26\x56\x20\x56\x6c\x23\x46\xf2\x8a\x20\x5a\xd6\xd3\xfe\x3b\xab\xd6\xbb\xbe\x4f\x86\x5c\xa4\x0b\x65\xec\x43\x43\xaf\xc4\xe9\x50\xf3\x94\x88\x65\x67\xb0\x69\xf5\x72\x3d\x9c\x28\xa3\xdc\xba\x6e\xed\x30\xf7\x4f\xe5\x19\x1b\x44\xac\xc8\x11\x39\x2c\xef\x6e\xb0\xba\xcb\x5d\xdf\x0f\xc6\x74\x54\xfa\x5b\xb7\x2e\x8f\xa1\x8c\xb5\x30\xb2\xca\x7a\x83\x12\xf1\xf0\xec\x4f\x10\x0a\x9f\x28\x4d\xcd\x2b\x15\x76\xeb\x9c\x0f\xcf\x12\x1a\x55\xdd\x86\x34\x56\xca\x36\x15\x62\xdf\x16\xf0\x31\x16\x96\xb7\x4b\x98\xcd\x45\xba\xd2\x52\xef\x2b\xf5\x5b\xb5\x3b\xeb\x98\x6f\xdd\x30\x51\x8e\xfd\x13\x66\xf4\xb2\x4e\xed\xe1\x63\x60\x42\x71\xe6\x71\x1c\x4b\x9c\x32\x4a\xef\x2e\x52\xc7\x63\xf5\xe1\xea\x93\x49\xb7\x83\x5f\x4b\xc5\x2d\x10\xcc\xff\x43\xc4\x90\xfd\x96\x16\xd6\xc1\x38\x5d\x2a\x71\xda\xd8\xef\xd5\x0a\x3e\x03\xd7\x11\x82\x0f\xe7\x77\xaf\xeb\x3a\xae\xe3\x3f\x10\x4a\x26\xd6\x8d\x73\xdd\xa6\x36\xf1\x9e\x7a\xfa\xfc\xe3\x11\xce\x24\x2f\x1e\x96\xb6\x61\xcd\xc7\xd7\x2d\x63\xd7\x87\x87\x72\x82\x1b\x3b\xd8\xe2\xdf\xb8\x7d\xa7\xe9\x8f\x55\x7f\xfb\xc6\xf0\x95\x15\x53\x23\x5d\xd6\xd4\xae\x5b\x3f\x04\x7a\xdd\x34\x2c\x16\x45\x9e\x01\x79\xa6\x56\xd8\xfe\xd4\x30\xfb\x46\x7e\xc8\x28\x2f\x4d\xc8\xb3\x73\x7f\x03\x00\x00\xff\xff\xc1\xa4\xd3\x02\x74\x03\x00\x00")

func gitignoreNodeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNodeGitignore,
		"gitignore/Node.gitignore",
	)
}

func gitignoreNodeGitignore() (*asset, error) {
	bytes, err := gitignoreNodeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Node.gitignore", size: 884, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreOcamlGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x31\x0e\xc2\x30\x0c\x45\x77\x9f\x22\x12\x5b\x86\x70\x24\xf4\xdb\x98\xc8\x22\x8d\x51\xec\x02\xbd\x3d\x6a\xc2\xc4\xf2\xfc\x64\x3f\x39\x26\xb4\xa6\x4e\x31\xad\x9b\x0e\x62\x50\x28\xa6\xd3\xe6\xee\x33\x69\x73\x80\xe8\x12\x74\xc5\x56\x97\x5d\x6a\x0e\x6f\xed\x0f\x69\x25\x64\xe9\xbc\xba\xf6\x83\x6e\xe3\x70\xfd\xeb\x1c\xbd\xb0\x9f\x4f\x96\xc3\x99\x62\x6a\x70\x79\xf1\xa8\x60\x62\xa1\x70\xe3\x0e\xe7\x1c\xee\x52\xd9\xc8\xd8\xf7\x67\xca\x70\xfc\xb4\x6a\xa1\x6f\x00\x00\x00\xff\xff\xec\xe3\xab\x33\xb2\x00\x00\x00")

func gitignoreOcamlGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOcamlGitignore,
		"gitignore/OCaml.gitignore",
	)
}

func gitignoreOcamlGitignore() (*asset, error) {
	bytes, err := gitignoreOcamlGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OCaml.gitignore", size: 178, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreObjectiveCGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x54\x5d\x6b\xec\x36\x10\x7d\xd7\xaf\x98\x62\x68\x61\x89\x6d\x6e\x0a\x85\xe6\xad\xcd\xa5\x6d\x1e\x4a\x02\x81\x7e\x3c\x15\x59\x1a\xdb\x93\xda\x1a\xa3\x19\xed\x6e\xfa\xeb\x8b\xe4\xac\xbd\x7b\xb9\x2f\xc6\x3a\xf3\x75\x66\xce\x48\x15\xfc\xe5\xd8\xa3\xa9\x4c\x05\x03\x29\x0d\x81\x23\x82\xe3\xa0\x91\xba\xa4\x1c\xe5\x01\x22\xce\x38\x77\x18\x41\x19\xd2\xe2\xad\x22\xfc\x3a\x71\x67\xa7\xb6\xc4\x36\x5b\xdc\x1d\x3c\x77\x6f\xe8\x94\x8e\x58\x3f\xee\x30\x7c\x0b\xaf\x27\xea\x75\x47\x8c\xa9\x2a\xf8\x39\xd1\xe4\x61\xc0\x80\xd1\x2a\x7a\xd3\xe5\x73\x6b\x3e\x63\xa4\x23\xfa\xcf\x56\x6d\x5b\xfc\xfe\xb0\x91\x38\x09\x08\xaa\x52\x18\xc4\x1c\x9a\xa5\x3b\x27\xc1\x68\xbe\xf1\xd8\xdb\x34\xe9\x06\x1c\x9a\x99\x3d\x7e\x3a\x7e\xbf\x9b\x2e\xc0\x6a\xba\xff\xd2\x74\x5f\x4c\x0b\x46\x59\x56\xe6\xd7\x0e\xb7\xf0\xd9\xe5\x1a\x7e\x23\xf6\xac\xe3\x47\xc9\x23\xfa\xda\x0a\x79\x34\x87\xe6\xec\xdc\x88\xee\x5f\x4e\x5a\x0e\xe2\xe6\x6e\x4a\xb8\x44\x0a\xba\x46\x75\x6f\xf5\x63\x5b\x06\x02\x39\x39\xf5\xe4\xcc\xa1\x19\x67\xbb\x98\x43\x43\x8b\x35\x87\xc6\xbf\xfe\xfd\x7b\xf3\x1f\x2d\x1f\xbf\xc6\x54\xf0\xc8\x8e\xed\x0b\x7b\x29\x52\xfd\x89\x10\xd1\xf1\x3c\x63\xf0\x60\x07\x4b\x41\x14\xac\xf7\x14\x06\xd0\x11\x21\x3b\x82\xa7\x88\x4e\x39\xbe\x67\xe1\xde\x39\x45\xd8\x15\x68\xe0\x37\x3e\xe1\x11\xa3\xa9\xb2\x09\x64\xe4\x34\x79\x78\x4b\x7e\x40\xe8\x39\x16\x7f\xc1\xa9\xbf\x2b\xf9\x96\xc8\x02\x36\xf8\xbc\x19\x02\x36\x22\xcc\x18\x94\x38\xa0\x07\xab\x0f\xa6\x82\x51\x75\x91\x87\xb6\x1d\x12\x79\x94\xc6\x65\xba\x0b\x7b\x69\x38\x0e\x6d\x12\x0a\x1f\xdf\x7a\xb7\x8c\x3a\x4f\xd5\x5a\xb8\xa6\xba\x4c\xad\xd6\x11\xeb\x6c\xac\x37\xf2\x35\x05\xe5\x5a\x38\x45\x87\x75\x59\x4c\x9e\xca\x0c\x72\x8f\x6d\x19\x8d\x8d\x3a\xda\x61\x5d\xe2\x9f\xbc\x07\x1d\x49\x60\xa2\x80\x40\x7d\xe9\xee\x64\x83\xe6\x21\xd8\x23\x93\x87\x52\x29\x4f\x8a\x02\xac\x79\x21\xef\x31\xf4\x91\xe7\x2d\x19\x78\x5c\x30\x78\x0c\x8e\x50\x9a\xab\x2a\xed\xe3\x87\xbc\x62\xcc\x86\x95\x5d\xce\x5c\x7a\x2b\x3a\xd9\xb0\x72\x79\x52\x20\xd9\x85\x42\x9f\x39\x04\x56\x10\xcd\xd7\x22\x0f\x56\x5c\x44\x0c\x32\xb2\x4a\xa6\x93\xa1\x81\x14\x22\x2e\xdc\xc0\x53\x10\x45\xeb\xef\x20\x09\x6e\x99\x73\x8e\x88\xf5\xe5\xde\xe4\x10\x53\xdd\xe4\x39\x8d\x18\xb2\xb4\xd9\xf4\x5e\xc4\x0a\x88\x1e\x7d\xee\xe2\x17\x8e\x30\xe7\xe2\x14\x7a\x8e\xb3\xcd\x1a\x82\xed\x38\x69\xa9\x7d\xcd\x55\x50\xd3\x02\x47\x12\xba\x11\xd8\xb3\x93\xe6\x42\xa6\x51\xe6\x49\xda\x0e\x45\xeb\x25\x5a\xa7\xe4\x50\xda\x5b\xb1\xda\xea\x0b\xf1\xcc\x25\xba\xcd\x6d\x46\x6d\xce\xf3\xb4\x63\x2f\x11\x8f\x84\xa7\xb2\x1d\x3b\x7a\xd5\xdf\x0e\x2a\x8a\xfe\xc3\x49\x97\xa4\xeb\x15\xf1\x08\x4f\xa1\xbc\x40\x1c\xd6\x6d\xe8\x15\x23\x04\x3c\xad\x0a\x6f\x46\x28\xbc\x73\xcb\x11\xbf\x13\xb0\xfb\x33\x04\x3d\x4f\x1e\x23\xb4\xf4\xfc\xba\xb9\xbf\x44\xce\x7f\xd7\x6b\x4e\x3a\xa6\xae\x71\x3c\xb7\x6f\x3c\x86\xc0\x9f\x7e\xfc\xe1\xbe\xa5\x4b\x40\xcf\xf1\x5c\xde\x55\xf3\x95\x34\xad\xf9\x3f\x00\x00\xff\xff\x57\xe4\x34\x35\x76\x05\x00\x00")

func gitignoreObjectiveCGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreObjectiveCGitignore,
		"gitignore/Objective-C.gitignore",
	)
}

func gitignoreObjectiveCGitignore() (*asset, error) {
	bytes, err := gitignoreObjectiveCGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Objective-C.gitignore", size: 1398, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreOpaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc9\x4d\x0a\xc4\x20\x0c\x06\xd0\xfd\x77\x94\x80\xb9\x92\xe8\x18\xc4\xd1\x36\xc1\x1f\xf0\xf8\xa5\x75\xf3\x36\xcf\xc7\x55\x5a\x82\x9f\x3d\xfc\xea\x00\xd4\x82\x4b\x12\x57\x76\xff\x01\x10\xab\xd9\xe7\x3e\x72\xec\x5a\xe5\x06\x71\x5a\xd7\x3b\xc1\xca\xd1\xcd\x3d\x41\x2c\x5b\x40\xdc\x34\xe3\x09\x00\x00\xff\xff\xbd\x9b\x99\xa3\x5a\x00\x00\x00")

func gitignoreOpaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOpaGitignore,
		"gitignore/Opa.gitignore",
	)
}

func gitignoreOpaGitignore() (*asset, error) {
	bytes, err := gitignoreOpaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Opa.gitignore", size: 90, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreOpencartGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\x4d\x8e\xc3\x30\x08\x85\xf7\x9c\x22\xa3\xd9\x65\x61\x9f\x65\x8e\x80\x80\xd8\xd6\x18\x93\x14\x2b\x6d\x6f\x5f\x35\x3f\x55\xdb\x1d\xdf\xc7\x83\x17\x72\x47\x22\x71\x87\x48\xd6\xa6\x92\xc2\x9c\x67\x40\xd6\xd2\xde\x05\xfc\x94\xc6\x72\x0b\xb9\x6b\x05\x60\xbb\xb6\x6a\xc8\x11\x8a\x62\x92\xc8\xd8\xf1\x9c\x09\x29\x4b\x04\xbf\x7b\x17\xfd\xa2\x6a\xc9\x23\x9c\xe4\xdd\x2e\xcf\x0b\x80\xdf\x61\xfd\x53\xe3\xa1\x5a\x1a\xa6\x52\xc5\x61\x5d\xd4\x78\xcf\x8f\xaf\xf5\xf6\xec\x23\xb0\x2e\x7b\xc1\x78\x30\x65\xa1\x7f\xe1\xb0\xd9\xc3\xa9\xb1\x1f\xe2\x11\x00\x00\xff\xff\xb9\x0c\x54\x85\xed\x00\x00\x00")

func gitignoreOpencartGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOpencartGitignore,
		"gitignore/OpenCart.gitignore",
	)
}

func gitignoreOpencartGitignore() (*asset, error) {
	bytes, err := gitignoreOpencartGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OpenCart.gitignore", size: 237, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreOracleformsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\x51\x70\xcb\x2f\xca\x55\xf0\xcd\x4f\x29\xcd\x49\x2d\xe6\xd2\xd2\x4b\xcb\xad\xe0\xe2\x42\x92\xf6\x4d\xcd\x2b\x45\x92\xce\x45\x93\x0e\x28\x4a\xd5\xf5\xc9\xcc\xcb\x4e\x4d\x51\xf0\xc9\x4c\x2a\x4a\x2c\xca\x04\x2b\x2b\xc8\xa9\xe0\x02\x04\x00\x00\xff\xff\x62\x79\x5b\x10\x64\x00\x00\x00")

func gitignoreOracleformsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOracleformsGitignore,
		"gitignore/OracleForms.gitignore",
	)
}

func gitignoreOracleformsGitignore() (*asset, error) {
	bytes, err := gitignoreOracleformsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OracleForms.gitignore", size: 100, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePackerGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x4e\x4c\xce\x48\x55\xc8\x4f\xca\x4a\x4d\x2e\x29\xe6\x2a\x48\x4c\xce\x4e\x2d\x8a\x4f\x06\x09\xea\x73\x71\x29\x2b\xb8\xe5\x17\x29\x24\x95\x66\xe6\x94\x28\x24\xe5\x57\xa4\x16\x73\x69\xe9\x25\xe5\x57\x70\x01\x02\x00\x00\xff\xff\xa6\x6d\xe6\x7b\x37\x00\x00\x00")

func gitignorePackerGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePackerGitignore,
		"gitignore/Packer.gitignore",
	)
}

func gitignorePackerGitignore() (*asset, error) {
	bytes, err := gitignorePackerGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Packer.gitignore", size: 55, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePerlGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\x6b\xc3\x30\x10\x85\xf7\xf7\x2b\x52\xb2\x79\xb8\xdb\xb5\xa5\x6d\x0a\x19\x1c\x0a\x4d\x87\x74\x11\x52\x2c\x17\x35\x67\xcb\x58\xe7\x50\xfb\xd7\x17\xdb\x81\x66\x90\x78\x8f\x4f\xfa\x78\x4f\xcf\x43\x94\x8a\x41\xe2\xb2\xda\x4b\xba\x85\xde\x66\x75\x9a\xc1\xe5\xfe\xb4\xa3\xb1\x91\x7b\xfa\xc9\xa9\x05\x97\xe7\xa5\x14\x28\x28\xa1\xa0\xae\x21\xad\x46\x14\xe4\x33\xb0\xdd\xbc\x86\x5b\x10\x63\x5e\x66\x0d\x56\x59\xe5\xf9\x81\x1c\xcf\xa7\xf7\x3e\xd5\x68\x47\xed\xfa\x54\x53\x1a\x74\xa1\x71\x52\x63\xbe\xa2\x88\x03\x93\x5f\x27\x61\xbb\x29\x53\x35\x48\x30\x66\x19\x09\x7b\x07\x6b\x5b\x6e\xf2\x4e\x1f\x1f\x1e\xda\xac\x4e\x04\xb1\xbd\x2c\x82\xfd\xaf\x7e\x46\x95\x6c\x4c\xe9\xae\x61\x3e\x3d\xd8\x4b\xf4\x0c\xb6\x61\x68\x1a\x06\x17\xf4\x3d\x81\x67\x56\x47\x09\xff\x89\x92\x54\xe0\x72\x77\x3c\xbc\xed\x3f\x4e\xe4\xdd\x15\xdc\x35\x56\x93\x9d\x05\xf3\xbf\x29\x76\xf8\x0b\x00\x00\xff\xff\xa4\xda\xd9\x91\x41\x01\x00\x00")

func gitignorePerlGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePerlGitignore,
		"gitignore/Perl.gitignore",
	)
}

func gitignorePerlGitignore() (*asset, error) {
	bytes, err := gitignorePerlGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Perl.gitignore", size: 321, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePhalconGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x4f\x4e\x4c\xce\x48\xd5\xe7\xd2\x4f\xce\xcf\x4b\xcb\x4c\xd7\x4f\x49\x2d\x4b\xcd\xc9\x2f\xc8\x4d\xcd\x2b\xd1\xe7\x02\x04\x00\x00\xff\xff\xb8\x16\x9e\x85\x1d\x00\x00\x00")

func gitignorePhalconGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePhalconGitignore,
		"gitignore/Phalcon.gitignore",
	)
}

func gitignorePhalconGitignore() (*asset, error) {
	bytes, err := gitignorePhalconGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Phalcon.gitignore", size: 29, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePlayframeworkGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc8\x31\x0e\xc2\x30\x0c\x05\xd0\xfd\x9f\x22\xa8\x1b\x12\xf1\x39\xd8\xb8\x42\x9b\x58\xc1\xe0\x36\x91\xed\x82\x7a\x7b\xa6\x8a\xe9\x49\x6f\x4a\xf7\xb6\x75\xe3\xf4\xd0\xf9\xb8\xa4\x6f\xb7\xb7\x6c\x2d\x55\x31\x2e\xd1\xed\x48\x13\x16\xd9\x08\x54\x17\x64\x2e\x2a\xc3\x19\xa4\xb2\x10\x48\x7b\x73\x02\xad\xbd\xee\xca\x0e\x1a\xd6\x5f\x5c\xe2\xf4\x1f\x31\x5b\xe3\xc0\x69\xac\x83\x10\xec\x71\x33\xf6\x5d\x03\xce\xf6\x61\xcb\x43\x2a\xae\x99\x57\x05\x55\xf1\x20\xe4\x32\x97\x27\xe3\x17\x00\x00\xff\xff\xd9\x53\xc9\xbb\xa4\x00\x00\x00")

func gitignorePlayframeworkGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePlayframeworkGitignore,
		"gitignore/PlayFramework.gitignore",
	)
}

func gitignorePlayframeworkGitignore() (*asset, error) {
	bytes, err := gitignorePlayframeworkGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/PlayFramework.gitignore", size: 164, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePloneGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8a\x5b\x0a\xc3\x20\x10\x45\xff\xef\x52\x06\x9c\x59\x45\x1b\xfa\xd3\xae\xc1\xc4\x07\x52\xe3\x48\xb4\x29\xdd\x7d\x11\xf3\x73\x39\x9c\x7b\x88\xeb\x6f\xc3\x58\x05\x71\xdf\x2b\x81\x78\x1f\xec\x63\x04\xf1\x6d\x59\x26\x9b\x54\x82\x4e\x61\x1e\xcf\xfb\x0b\x4c\xbc\x85\x88\x35\x15\xc1\xfa\x49\xd9\x09\x9c\x3f\x7d\xd6\x6a\x7c\x8c\x4d\xe0\xf4\x5b\xb2\x5a\xd7\x04\x53\x04\xfb\xf6\xd7\x57\xed\xd1\x47\x92\x5a\x17\x9c\xf6\x10\xfc\x03\x00\x00\xff\xff\x14\xe9\xdb\xf1\x89\x00\x00\x00")

func gitignorePloneGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePloneGitignore,
		"gitignore/Plone.gitignore",
	)
}

func gitignorePloneGitignore() (*asset, error) {
	bytes, err := gitignorePloneGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Plone.gitignore", size: 137, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePrestashopGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x8e\xdb\x30\x0c\x45\xf7\x3a\x05\x8b\x2c\x0a\x18\xa9\x75\x88\xb9\xc0\x00\x29\xba\x67\x24\xda\x26\x2a\x89\x82\x48\x65\x9c\xdb\x17\x63\x27\x68\x8a\x1a\xb3\x11\xa4\xf7\xf9\x21\xf2\xf3\x04\xef\x8d\x6f\x68\x04\x13\x27\x52\x77\x82\x9f\x0b\xc1\x24\x29\xc9\x07\x97\x79\xa7\x10\xa4\x18\x72\x81\xbb\xf4\x06\x11\x0d\xaf\xa8\x04\xa1\x51\xa4\x62\x8c\x49\x01\x4b\x04\xb1\x85\x1a\x54\x6a\x2a\x05\xd3\x56\x37\x3a\x17\xa4\x4c\x3c\x7b\x25\x33\x2e\xb3\x8e\xc3\x58\x97\xea\xdc\x09\xde\x30\x2c\x74\x06\xa3\x5c\x37\xfb\x4c\x85\x1a\x1a\xc5\x2f\x5b\xc1\x46\x2f\x95\xd7\x3b\xbc\x37\x52\xc3\xcb\x22\x75\x74\x0e\x63\xe6\xf2\x23\xd2\xcd\x63\x37\xe9\x75\x6e\x18\xc9\x3b\x1f\x3e\xff\xf2\xee\xdb\xe3\xc2\x25\xd2\xba\xf5\xf1\x24\xdb\x39\xe9\x81\x52\x7b\xe3\x89\xa9\x1d\x4a\xba\x1c\x60\xc5\x12\xaf\xb2\x1e\x29\x19\x9b\xdd\x0f\x04\x0b\x35\x4e\x2f\xfc\x11\xda\x9a\x93\x1f\xc6\x35\x27\xe7\x93\xcc\x7e\x70\x83\xb2\x51\xc6\xba\x31\x5b\x28\x93\xfa\xe1\x39\x5d\x96\xd8\xd3\x0e\x36\xfb\xee\x74\x27\xb8\xb0\xd1\xb6\x43\x2a\xf6\x7f\xac\x92\x22\xb5\xbf\x3b\xae\x4d\x62\x0f\x06\x9c\x71\x26\x3d\xc3\x8d\x9b\x75\x4c\x4f\xae\x67\x78\xbb\xfc\xfa\xae\x67\x20\x0b\xff\x24\x7e\xc5\xf0\xbb\x57\xf5\x2f\x88\xd6\x2a\xcd\x5e\x09\xe7\x9d\x44\xf9\x28\x49\x30\x7a\xe7\x39\x7f\x4e\xd6\xeb\xfe\xfc\x13\x00\x00\xff\xff\x36\xe5\x38\xd9\x91\x02\x00\x00")

func gitignorePrestashopGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePrestashopGitignore,
		"gitignore/Prestashop.gitignore",
	)
}

func gitignorePrestashopGitignore() (*asset, error) {
	bytes, err := gitignorePrestashopGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Prestashop.gitignore", size: 657, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreProcessingGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x73\x09\x8e\x0f\x2e\xc9\x2f\x4a\xe5\x4a\x2c\x28\xc8\x49\x2d\x01\x53\x99\xc9\x89\x25\x99\xf9\x79\x7a\x39\x99\x79\xa5\x15\xc6\x46\x98\x62\x66\x26\x28\x62\xe5\x99\x79\x29\xf9\xe5\xc5\x68\x2a\xa1\xa2\x68\x6a\x73\x13\x93\xf3\x8b\x2b\xb8\x00\x01\x00\x00\xff\xff\x0f\xd4\xed\x78\x78\x00\x00\x00")

func gitignoreProcessingGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreProcessingGitignore,
		"gitignore/Processing.gitignore",
	)
}

func gitignoreProcessingGitignore() (*asset, error) {
	bytes, err := gitignoreProcessingGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Processing.gitignore", size: 120, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePurescriptGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\xc1\x09\x80\x30\x0c\x05\xd0\x7b\xa6\x28\xf4\xee\x14\x82\x63\x14\x6d\xbe\x50\x68\x93\xd0\xa4\xb8\xbe\x27\x3d\x3f\x5e\x4e\x3b\x0c\xc2\x90\xda\xe0\xb4\x99\xd7\x56\x86\xf2\xea\x70\xba\xf4\xc1\x2c\x55\x87\xa9\x40\xc2\x49\x94\xf1\x2b\xe5\x74\x40\x30\xcf\x00\xa7\xbb\xf5\xaf\x93\xae\xb0\x15\xf4\x06\x00\x00\xff\xff\xd6\xf0\xa9\x6c\x5b\x00\x00\x00")

func gitignorePurescriptGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePurescriptGitignore,
		"gitignore/PureScript.gitignore",
	)
}

func gitignorePurescriptGitignore() (*asset, error) {
	bytes, err := gitignorePurescriptGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/PureScript.gitignore", size: 91, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignorePythonGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x41\xcf\x23\x35\x0c\xbd\xfb\x57\x58\x2a\xa7\x6a\x9b\x5c\x10\x07\x8e\xcb\x07\x12\x68\x59\xad\x80\xe5\x82\x50\x95\x49\xdc\x99\x6c\x33\x71\x14\xbb\xf3\x35\xfc\x7a\x94\x4c\xcb\xae\xd0\x5e\x52\xc7\xef\xd5\x79\xf6\x3c\x1f\xf0\x6d\x53\x3a\x79\x5e\x4b\x4c\x14\xd0\x22\x17\x8d\x6b\xfc\x67\xc4\x2f\xef\xde\xe1\x25\x26\x12\x38\x9f\x4b\xf3\xce\x2f\x74\x3e\x5b\x38\x9a\xd2\xfe\xf2\x1c\xfe\x86\xe3\x37\xa5\x19\x9f\x9c\x08\xc0\x01\x7f\x40\xba\x2b\x65\x89\x9c\x05\x8e\x46\xb8\x27\x5f\xa2\x68\x8d\xd3\x4d\x23\x67\xb4\x58\x9c\xbf\xba\x39\xe6\x19\xcc\x87\xa6\x0b\x67\xa0\xbc\x59\x98\x6e\x31\x05\x0b\x81\x36\x4a\x5c\x4e\x34\xcf\x62\x21\x44\x51\x0b\x81\x5f\x73\x62\x17\xc4\xc2\x9e\x36\xfb\x4f\x8a\xd3\x38\xbe\xfb\xd6\x42\x71\x55\xc5\x82\xec\xff\xd8\x5c\xb5\xf0\xba\x10\x25\xe9\x62\x69\x9e\x4f\x31\x5f\xd8\x82\x89\x59\xd4\xa5\x44\xc1\xf8\xcb\xbc\x43\x5d\xe3\x87\xf6\xf3\x03\xa8\x70\x40\xfc\x28\x37\x97\x52\x43\x5d\x48\x68\x1f\x00\xba\x4a\xf8\x5a\xa3\x2a\x65\x9c\x1a\x3a\x2c\x43\x3d\x8a\xaf\xb1\x28\x5e\x2a\xaf\xe8\x50\x69\x2d\xc9\x29\xf5\x2a\x13\x5d\xb8\xd2\x97\xb5\x71\x74\x29\xbd\x2e\xd2\x9d\xde\xa0\x30\x3a\x41\x65\x8c\xf9\x13\x79\xc5\xe0\x94\x2c\xeb\x42\x15\xbb\x60\xc1\x98\x3b\xa8\x06\x8e\x66\x75\x39\x5e\x48\xb4\x0f\xb6\x90\xef\xb2\x3f\x17\x4e\x3c\x0b\x94\x58\x4e\x89\x67\xa3\x77\x1d\x71\xa0\x44\x4a\x27\x5d\xa2\x9c\x42\xac\xe4\x95\x6b\x1b\x28\x1c\xf0\x63\x8e\x8a\x4a\xa2\x68\xd1\xf3\x46\xd5\xcd\x84\x95\x0a\x57\x15\x58\x74\x4d\x9e\x37\x0b\x46\xf9\x6e\xc1\x3c\x09\x9f\x23\x73\x04\x33\xfc\x00\x99\x85\x7a\x1d\x31\xf7\x35\xc1\x7f\x78\xbf\x1c\xdf\x8c\x2b\x98\xa5\x95\xde\x95\x44\xb1\xfd\xed\x3f\xaa\xcb\x92\x9c\x3e\x7c\xb2\x72\x77\x14\x0f\x59\x2f\x9f\x5c\x9e\x19\x45\x6f\x97\xcb\xf7\x70\x34\x89\x67\x48\xec\x5d\x3a\x0b\xa9\xc6\x3c\x8b\x29\xad\x13\x7f\x4a\x4e\xae\x4f\xde\xf8\xac\xd9\x93\x05\xf3\x4a\x93\x13\x21\x95\xd3\x2e\x0f\x0e\xf8\xbb\xaf\xae\xb4\x27\xd7\xc8\xb8\x0e\xa0\x2c\x31\xdf\x31\xb0\xbf\xad\x94\x75\x08\x82\xc0\x5e\xec\xf9\xe1\xc7\xe1\x8d\xb7\x3d\xa6\x0a\xea\xea\x4c\x3a\x92\xbf\xdc\x4a\x53\xaa\xf8\x9e\x95\x26\xe6\x2b\x98\x58\x5a\x9e\xce\x7e\x21\x7f\x2d\x1c\xb3\x8e\x85\x28\x8d\xf2\x06\x66\xb7\xca\x69\xa3\xda\x57\xa3\x03\x9e\x12\xd5\x86\x13\x39\x45\xf1\x0b\x85\x5b\xda\x8d\x06\x3b\xd2\x81\xd3\x13\x18\x52\xdd\x4c\xbf\x3a\x5d\xb0\xb8\x2a\x14\x1e\x5b\x79\x34\xd2\x67\xbd\x77\x13\x58\xc7\x6b\xfd\x80\x03\x6e\xb1\xea\xcd\xa5\x91\xda\xfa\xb9\x8d\x45\xfb\xf1\xfd\x9f\x76\xef\xbd\x05\xaa\x58\x2a\x0f\xe7\x3d\xa7\x0b\x46\x06\xf0\xc8\x77\xe6\x6f\x5c\xe8\x2b\xbc\xca\x85\xbe\x60\xad\xd7\x3e\xb8\xff\xcd\xd2\x4a\x54\x82\x7f\x03\x00\x00\xff\xff\x35\x55\xa7\xdd\x64\x04\x00\x00")

func gitignorePythonGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePythonGitignore,
		"gitignore/Python.gitignore",
	)
}

func gitignorePythonGitignore() (*asset, error) {
	bytes, err := gitignorePythonGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Python.gitignore", size: 1124, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreQooxdooGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x4e\x4c\xce\x48\xe5\x02\x93\xba\x29\xf9\xe5\x79\x39\xf9\x89\x29\xc5\x5c\x99\x79\xc5\x05\xa9\xc9\x25\xf9\x45\x5c\x89\x05\x99\x5c\xc5\xf9\xa5\x45\xc9\xa9\xfa\x70\x41\xbd\x8c\x92\xdc\x1c\x2e\x40\x00\x00\x00\xff\xff\xf4\x8a\x69\x1e\x3a\x00\x00\x00")

func gitignoreQooxdooGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreQooxdooGitignore,
		"gitignore/Qooxdoo.gitignore",
	)
}

func gitignoreQooxdooGitignore() (*asset, error) {
	bytes, err := gitignoreQooxdooGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Qooxdoo.gitignore", size: 58, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreQtGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x41\x4e\xc4\x30\x0c\x45\xf7\x3e\x45\xa4\xd9\x79\x34\xe6\x10\xdd\xc2\x62\x4e\x30\x72\x52\xa3\x86\x49\x48\x1b\xbb\x08\x6e\x8f\xdc\xd2\x11\xb0\xc8\xd7\xf7\xfb\xb1\x6c\x9f\xc2\x70\x3e\x87\x16\xdf\x24\x99\x06\x7e\x1f\x43\xc9\x51\x01\x90\xb4\x34\x40\xda\xc4\x1f\x7b\xb1\x4b\xf6\xd4\xd9\x58\x8a\xeb\x57\xc9\x11\xe0\x14\xae\x76\x11\x05\x78\xa2\xa5\xf2\x5d\x28\x71\x9a\xe4\x51\xa9\xb1\x4e\x80\x34\xf7\x46\xab\x4a\xff\x65\x09\x01\x69\x89\x7a\xf0\xc3\x6e\xbc\xb6\x04\xb5\xa5\x1b\x52\x9a\x67\x58\xfa\xe1\xd6\x7c\x43\x9a\xe0\x85\xef\xf2\x9a\x8b\x20\x60\x5c\x73\x19\x2f\xb8\x6f\x32\x74\x61\x6b\xdd\x0f\xe1\xd5\x9a\xf2\x87\xfc\x04\xb6\x27\xe1\x5a\x7d\xf9\xa5\x96\xb9\x37\xbf\xfe\x31\xfd\x2f\x21\xfc\xd7\x37\xf8\x48\xd8\xf4\x39\xab\x29\xd9\xe7\xfe\x13\x01\xbe\x03\x00\x00\xff\xff\x8a\x2a\x2f\x01\x4e\x01\x00\x00")

func gitignoreQtGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreQtGitignore,
		"gitignore/Qt.gitignore",
	)
}

func gitignoreQtGitignore() (*asset, error) {
	bytes, err := gitignoreQtGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Qt.gitignore", size: 334, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcf\x4b\x3b\x31\x10\xc5\xef\xf9\x2b\x06\x7a\x5b\xbe\x4d\xbe\xe8\x45\xbc\x89\x2d\x78\x11\x61\xeb\x5d\xa6\xc9\xec\x26\xee\x8f\x84\xc9\xa4\xb6\xfe\xf5\x92\xad\x2d\x7a\xf1\x94\xf7\xde\x7c\x78\x19\x98\x15\x3c\x85\x2c\x91\x4f\xd0\x85\x91\xb2\xd2\xad\x3f\x7b\xa5\x5b\x4c\x49\x5f\x9c\x5a\xc1\x8e\x72\x0e\x71\x86\x0d\x0a\x5e\xe9\x6a\xea\x70\x7b\xc4\x29\x8d\x04\x36\x3a\x82\x30\x43\x42\x3b\x60\x4f\xb0\x2f\x61\x74\x90\x38\x5a\xca\x59\x35\xeb\xed\x51\xb7\x95\x7f\x29\x92\x8a\x9c\x6b\xa0\xe3\x38\x41\x0b\x8f\xcf\x9b\x33\xaf\x4c\xa3\x05\x59\xf7\x9f\x7f\xa1\xd6\x93\x1d\x2a\xda\x2e\xca\x54\xb6\xdd\x49\x71\x21\x5e\xd7\x4b\x1c\xdf\x75\xc9\xc4\xcb\x34\x71\x74\xc5\x92\x83\x43\xe8\x67\x12\xa1\xac\xae\xca\x34\xda\xcb\x34\xfe\x0a\x92\xeb\x96\x05\x1e\x8a\xf8\x1b\x90\x38\xd0\xfc\x0f\x32\x11\x78\x91\x94\xef\x8d\xe9\x83\xf8\xb2\xd7\x36\x4e\xc6\xa3\x1b\xe9\x64\xbc\x08\x1b\xa6\x91\x30\x53\x36\x82\xbd\x39\xfc\xd7\xb7\x4a\xd7\x7c\x1d\xb1\x88\xaf\x8d\xc3\x1c\x84\x01\x67\x07\x2d\x4c\xc8\x83\x8b\x1f\x33\x38\xea\xb0\x8c\x02\x16\xad\x27\x70\x81\xc9\x4a\xe4\x40\x59\x99\xe6\x6d\x09\x8d\x32\xdf\xaf\x5a\xc1\x2b\x4d\x29\x32\x5e\x2e\x07\x96\x09\x85\x1c\xec\x4f\x3f\x4a\x55\xa3\x8b\x74\x77\x7a\x72\xaa\xd1\xf5\xd7\xaa\xbe\x02\x00\x00\xff\xff\x3b\xbc\x24\xe6\xf4\x01\x00\x00")

func gitignoreRGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRGitignore,
		"gitignore/R.gitignore",
	)
}

func gitignoreRGitignore() (*asset, error) {
	bytes, err := gitignoreRGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/R.gitignore", size: 500, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x57\xcd\x6e\xdc\x38\x12\xbe\xf3\x29\x0a\xc8\x61\xe3\x46\x4b\x3d\xb3\x3f\x17\xdf\x76\x8d\x38\x31\x30\xbb\x1b\xcc\x64\x30\x87\x46\x03\xa6\xa8\x92\xc4\x69\x8a\xa5\xf0\xc7\x4a\xdf\xf2\x1a\x79\xbd\x3c\xc9\xa0\x48\xaa\x5b\x6d\xd8\x40\x4e\x76\x53\x64\xfd\x7c\xf5\xd5\xc7\xe2\x1b\xf8\x37\x28\x32\x06\x55\xd0\x64\x81\x3a\x78\xac\x7b\x1d\x74\x6f\xc9\xe1\x23\x04\x1c\x27\x23\x03\x7a\x21\x3e\x0d\xda\x83\xf6\xf0\x5e\x87\x0f\xb1\xf9\xfe\xf5\x9b\x7f\x76\x70\xbf\x3e\x79\xd8\x8f\xd2\x1e\xa0\xd3\x06\x2f\x46\x6a\xf1\x07\x42\xf4\x08\x81\x6d\x19\xed\x03\x04\x82\x89\xa6\xc8\x9f\x21\x0c\xf8\xb2\x77\x50\x03\x91\x47\xe7\x41\x3e\x49\x6d\x64\x63\x50\x68\x9b\xf6\xe7\x68\x6a\x45\x23\x68\x1b\xd0\x75\x52\x21\xcc\x03\x5a\x50\x0e\x65\xd0\xb6\x07\x8b\x33\x38\x9c\xc8\xeb\x40\x4e\xa3\x07\x69\xdb\x14\x98\xaf\x85\xb8\x27\x07\x23\x39\x04\x6d\x3b\x72\xa3\x4c\xc9\xc8\x86\x62\x80\x81\xe6\xeb\x70\xd2\x19\x98\xc9\x1d\xb7\xc9\x06\x6f\x08\x54\x12\xc2\x71\x2b\x38\xa0\x8e\x8c\xa1\x99\xfd\x3a\xf4\x14\x9d\x62\x87\x0e\x41\x42\xcf\x01\xc1\x64\x38\xc2\x40\xe0\x83\x74\xe1\x56\x88\x0a\x3e\x0d\x08\xfb\x07\x76\xc2\xc7\xee\x93\x17\x35\xc8\x29\xa0\x3b\xec\x97\x7f\x18\x61\xb6\xbf\xff\xe8\x88\xb3\x3e\xec\x27\x47\xbd\x0e\x07\x68\x88\x8e\xf5\x2b\x66\xa4\x0b\x5a\x19\x3c\xec\x07\x34\xd3\x01\x68\x0d\x1a\x7c\x40\x33\x81\xd7\x01\xcf\xa7\xcf\xc9\xbe\xfd\xd7\x4d\xa9\xe0\x28\x6d\x94\x06\x26\xd9\x63\x2d\x44\x5a\xbb\x85\x21\x84\xe9\x76\xb7\xeb\x75\xa8\xbc\x1a\x19\xfd\x5d\x4b\xca\xef\xce\xe7\x45\x76\x98\x77\xfa\xdb\xdd\x8e\x7f\x32\x96\x43\x2e\xd6\xae\x04\xe6\x77\xba\x04\x5c\x25\x74\xc5\x39\xdf\x17\x9d\x70\xaa\x3b\xb4\xbb\xf7\x3a\x54\xff\x91\x5e\x2b\x5f\xfd\x8a\x8a\x5c\xcb\x06\xee\x06\x69\x7b\xf4\x55\xa0\x2a\x0c\x58\xfd\xba\x94\xfc\xf4\x66\x01\xa5\xba\xcf\x3e\x0a\x72\xaf\xba\x10\xe2\xcd\x1b\xb8\x27\xd3\xa2\x03\x1f\x5c\x54\x21\x3a\xe4\x0e\xc0\xc2\x81\x42\x3e\x47\x14\xa0\xd5\x0e\x15\xbb\x49\x65\xee\xc8\xbd\xd2\x41\x10\x06\x19\x78\x8f\x98\x1c\xfd\x89\x2a\x80\x9f\x50\xe9\x4e\xab\x2d\xf8\xa8\x06\x90\x1e\x8c\xb4\x7d\x94\x3d\x02\x39\xe8\x9c\x1c\x91\xc9\x76\xde\xb7\x6e\xa4\xf7\x86\x1a\x69\xe0\x2d\x4d\xe8\x32\xcd\xfd\xc9\x07\x1c\xf9\x24\xb6\x9c\xf6\xf9\xd8\xcd\x2a\x06\x3f\x50\x34\x2d\xf4\xc4\xdd\x42\x9c\x84\xd8\x3f\x66\x5b\xbb\xc7\xc3\xdb\x7a\x97\xff\xbf\xb9\x64\x55\x27\x30\xee\xc8\x06\xa7\x9b\x98\x3c\xf5\x51\xb7\x68\xb4\x65\x55\xf8\x03\xbf\x7f\xfd\xd6\x82\xa1\x27\x84\x13\x45\x26\x36\x97\x1a\xa2\x07\x3d\x4e\x8e\x97\x53\xb3\x97\x9c\x6b\xf8\x74\xd9\x70\x44\x9c\xf2\xd7\x8b\x90\x88\x41\xf7\x03\x7c\x8e\xd2\xe8\x70\xda\xc2\x8c\xe0\xf0\x73\x44\x56\x0a\x86\x4f\x9d\xe3\x20\xeb\x41\xb6\x03\xba\xd4\x4c\xd7\x9d\x77\x09\xb0\xe6\xfe\xda\x6c\x3e\x3a\x7a\xd2\x2d\x37\xa1\xd1\xf6\xb8\x1c\x90\xd3\x64\xb4\xca\x2d\x4f\x6e\x09\x31\x29\xdb\x40\x23\x32\xe5\x37\x9b\x1a\x7e\xb7\x06\xbd\x07\x9d\xbe\x08\x00\xfc\x12\x1c\x8e\x68\x4e\x45\xb9\xdc\x96\xad\x39\x4c\x07\x25\x77\xae\x55\x59\xcc\x46\xa9\x6d\x90\xda\xb2\x72\xb5\x64\xbf\x7f\xfd\x16\xe0\x68\x69\x2e\x02\x43\x8e\xb5\x43\x40\xda\xbb\x94\x7e\x7b\x29\xfc\xb6\x54\x72\xcb\x91\x6e\x57\x21\x32\xd2\x2e\x39\xea\x4b\x16\x4c\x2f\x7a\x96\x2c\xa7\xca\xcb\xd0\x92\x8a\x23\xda\x90\x32\xdd\x6c\xc0\xc7\x69\x22\x97\x4a\xc9\x9e\x8b\x9d\x13\xc5\xef\x5f\xbf\x39\x8e\xfa\xa8\x6d\x5f\x0b\x80\xbb\xe8\x1c\xda\xb0\x05\x25\x2d\x59\xad\xa4\xb9\xb6\x05\xfc\x9f\x26\xbb\x58\xca\xcd\xd1\x20\xff\xce\xfc\x6f\xf9\xc6\x68\xd0\x07\x36\xf7\xd0\x3d\x3b\xae\x7d\xc6\xe4\xac\xea\x49\x17\x73\x74\xeb\x1c\xb7\xd0\xe6\x8a\xb1\xa5\x44\x33\x25\x2d\xe3\x46\x80\x5f\x26\x23\xb5\x85\x99\xd9\xf1\x5a\x0c\xa5\x31\x0b\x3e\xef\xce\x47\x4e\xcf\x93\x2e\xe5\xcb\x75\x7f\xf7\x84\x16\x74\x07\x3a\x80\x47\x1c\x3d\x78\x34\x5d\x85\x8c\x2d\x63\x32\x19\x94\xb9\x7a\xf2\xc8\xcc\xf2\x68\x03\x72\xe5\xc9\x41\x98\x29\x91\x0c\x8d\x61\xa2\x17\x4f\xe7\x92\x91\x03\xd9\xb6\x3a\x61\x50\x3a\x72\x90\xd3\x84\x36\xa1\x94\x19\x88\xa9\x7d\xa5\x31\xa7\xd4\x2f\x5d\x34\x6c\x31\xc9\x66\xbe\x2d\xd9\x68\x6e\x9e\xe7\x3c\x80\x0d\x3e\xa1\x3b\x91\xc5\x8d\x00\x98\x07\x4a\x77\x96\x87\x59\x87\x61\x4d\xfc\x04\x38\xaa\xc1\x92\xa1\xfe\xb4\x05\x27\x99\xc7\xdc\x68\x16\xfe\x8c\x05\x69\x72\x39\xf4\x80\x72\x5c\x08\x96\x32\xe7\x5e\xf4\xba\x4d\x07\x10\xbc\xa2\x09\xf9\x8e\x5a\xe5\xc9\x20\x3e\x5c\xad\xac\xa4\x8c\x40\x0a\x00\x85\x8e\x1b\xe4\x65\xe1\x4b\x7d\x65\xb9\x34\x08\x3e\x3a\x5c\xb3\x55\x7b\x18\x65\xbb\xf4\x3e\x57\x61\x99\x15\x58\x81\x93\x56\xbc\x62\x73\x9d\x65\x11\x82\xab\xb3\x89\x59\x4b\xe3\x05\x22\x93\x3a\xef\xb9\xce\x5e\x43\x41\xd6\x9c\x60\xa4\x56\x77\x27\xd8\x90\xbd\x58\xdc\xc0\x84\x0e\xa6\x68\xcc\xa2\x63\x0c\x4a\x1a\xa5\xb8\xaa\x45\x03\xf9\xbb\x80\x65\x47\x19\x50\x10\xdb\x46\xaa\x23\x74\xa4\xa2\xc7\x96\xef\x6e\x79\xc1\x6f\x51\x02\x4e\xf6\x5c\xc2\x5a\x88\x07\x0b\x3d\x5a\x74\xd2\x6c\xb3\x04\xf1\x6c\x53\x3a\x26\x75\xd1\x45\x7e\xa3\x6d\xd1\xf9\xc0\xce\x5e\x97\x81\x3c\xd4\x24\x2b\x46\x1f\x59\xf4\x66\x16\x3a\x63\xa0\x49\xe0\x4b\xa5\x70\x5a\x9a\x75\x25\xce\xf0\x39\x6a\x75\x34\x29\xa4\x0e\xe4\x05\x62\x2e\x1c\xf9\x60\x4e\x49\x8c\x7d\x60\xce\x2c\x97\xaa\x0f\xd2\x18\x6c\xa1\xe1\x8f\xd3\xc2\x75\x07\x4f\xe8\x7c\x1e\x32\x85\xa7\x11\xc1\x53\x17\x66\x6e\xea\xb7\x58\xf7\x35\x48\xf8\xf8\xe1\xe3\xa5\xc4\x37\x99\x36\x3a\xfc\xcd\x43\xe3\x74\x08\x06\x13\xa2\x93\xa3\x46\x36\xe6\x04\x96\x52\x42\xe2\xdc\x57\x4c\x05\x09\x5e\x8f\x93\x41\x78\x34\xfe\x31\xf1\x36\x19\xb0\x14\x60\x22\xef\x75\x51\x27\x15\x1d\x67\x21\xc1\x8f\xd2\x18\xf0\xc8\x09\x88\xe8\x91\x0d\xb9\x68\xd0\x17\xd6\x5e\xf1\x6a\xd4\xfd\x10\x92\xad\x26\x4d\x82\x44\x3c\x81\x86\xc2\xd5\xab\x0b\xb0\x16\xa2\x90\x4a\x1a\x4f\xd7\x45\x92\x81\x2f\x44\x25\xb3\x6a\x26\xf4\x52\xa7\x27\x9a\xe6\xef\xfc\x1b\xf0\x8b\xf6\x01\xdb\x5a\xfc\x3f\x3a\x90\x7a\x64\xd0\xd7\xb1\x5f\xcf\xed\x1c\xe9\x86\x6b\x02\x8a\xc6\x91\x69\xc6\xb3\x6d\xc6\x66\x73\x99\x1d\xb6\x82\xe3\x0f\xb4\xea\x47\x0e\x86\x92\xc3\x14\xc5\xc2\xc9\x05\xaf\x84\xe2\xbc\x4c\xef\x90\x8f\x0b\x6d\x95\x89\x2d\x66\xca\x5c\x6e\xbd\x73\xa7\x15\x2b\xdb\x72\xe1\x16\xd4\x94\xe4\x31\x7b\xb5\x24\x67\x64\x2e\xbc\x30\x9e\x30\x07\x3a\x43\xb3\x10\x1f\x96\x5b\x99\x27\xf5\x99\x83\xee\xfb\xe5\x06\xe9\xa9\xdc\xc2\x93\x23\x1e\x14\x57\xe2\x9f\x65\xe1\x32\xb4\xdc\x0a\xf1\x73\x0d\xfb\x7b\x9e\xc5\xd6\xeb\x87\x7d\x47\xee\x78\xe0\xed\x29\x19\xa9\x14\x45\x1b\x6a\xf1\xf7\x1a\xf6\x77\x3c\xed\x33\xd8\x8d\x93\x56\x0d\x87\x7d\xf9\x5b\x6a\xbe\xee\xb7\xf4\x72\xe1\x02\x67\x6c\x6b\xf1\x8f\x1a\xfe\xcb\x20\xaf\x94\xd3\x9f\xbd\xb0\xcf\x5a\xfc\xb3\x86\xfd\x6f\x7c\x48\x5e\xa9\x0b\xbf\x0a\x0e\xd0\x39\x1a\x2f\x9b\x13\x02\xd9\x3b\x1b\xe1\xe5\xc7\x51\xfa\x80\xee\xb1\x2c\xd7\x42\xfc\xee\x97\x4b\x7c\xc6\xa6\x6a\x24\x2b\xce\xe5\x41\xb5\x54\x7d\x89\x45\x7b\xe8\x34\xcb\x1c\x51\x7e\x0a\xcd\xda\x98\x2c\x2c\x27\x8a\x82\xfb\x37\x06\xe2\xd7\x94\x4a\x37\x18\x87\xb1\xd8\x5f\x58\x52\x5a\x72\x9c\xf2\x20\x42\x7c\x81\x3e\x4f\x87\x1d\xf0\xab\x23\xe1\xfc\x03\x8f\x09\xde\x57\xc9\x8a\x5f\x7b\x3b\xb1\x20\xfe\x03\xe7\x96\xb7\x62\x25\x6d\x5b\xb5\x68\x30\xfd\xc8\xe7\xd1\x57\x7c\x71\x6a\x5b\x31\xa2\xd5\xf9\x25\x79\xe2\x77\xc4\x8f\x18\x8f\x0c\x6d\xc5\x69\x55\x8b\xc2\xef\x12\x6b\x7f\xd1\x0a\xad\x47\x21\xf6\x77\x77\x3f\x55\x3f\xd7\x3f\xf1\x00\xfe\xcb\xc3\xdd\xbb\xff\xfd\xf6\xee\xa6\x16\x7f\x05\x00\x00\xff\xff\x99\xf3\xef\x56\x9b\x0f\x00\x00")

func gitignoreReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreReadmeMd,
		"gitignore/README.md",
	)
}

func gitignoreReadmeMd() (*asset, error) {
	bytes, err := gitignoreReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/README.md", size: 3995, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRosGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6b\x03\x21\x14\x84\xef\xef\x57\x08\xb9\x09\xd5\xdf\x10\x42\x1a\x42\xdb\x14\x42\xef\xc1\x7d\xbe\x15\xbb\xae\x1a\x9f\xdb\x66\x2f\xfd\xed\x65\x9b\x4d\x93\xa6\x17\x99\x19\xe6\xd3\xc1\x66\xf0\xc1\x6a\x68\x7c\xd4\x10\x7c\xa3\xa1\x67\x77\x70\x14\x35\x70\xf9\x38\x8b\x9e\x9d\x96\x4b\xac\x3e\x45\xd5\xb3\xbb\xf5\x8f\x44\xb6\x31\xd8\xdd\xe7\x9b\x64\xc2\x7d\xb6\x27\x1e\x42\xbd\xa6\xff\xd9\xbf\xd4\x5d\xff\x20\x55\x1e\x01\x16\x62\x43\x91\x8a\xa9\x64\x45\x33\x0a\x3b\x46\xd3\x7b\x14\x85\x30\xc5\xd6\xbb\xa1\x10\x48\x85\xad\x43\xd0\xd8\x3a\x8d\x39\xeb\xb3\xba\xe0\x5b\x17\x53\x21\xe1\x7e\x6f\xb1\x09\x19\xa4\xb2\xe9\x04\x52\x7d\xfa\xce\xdb\x84\x53\x91\x30\xf8\xcc\x24\xb8\x0e\x6d\x0b\x2a\x97\xf4\x4e\x58\x41\xe1\x45\xc1\x42\x1c\xb1\x90\xa9\xa9\xcc\xa5\xd5\x8b\xe9\xe8\xd9\x73\x65\x55\x4f\x55\x0d\x4c\x05\xa6\x7f\x9c\xc7\x4b\x95\xd1\x4e\xe7\x88\x70\xac\x33\xfa\x20\x41\xce\x4d\x9d\x83\x89\xd1\x47\x37\x0d\xbe\x71\x3f\x0b\xaf\x96\x0b\x02\xc8\xaf\xe9\xfd\x75\x6f\x90\x41\x2d\xe4\x64\x56\xa6\x76\x3e\x0a\x1c\xb8\xa6\x5e\xb4\x3e\x10\xc3\x6a\xf9\xf6\xb4\xdd\x1d\xb6\x9b\xdd\xeb\x7e\x0d\xdf\x01\x00\x00\xff\xff\x17\x57\xfe\x91\xed\x01\x00\x00")

func gitignoreRosGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRosGitignore,
		"gitignore/ROS.gitignore",
	)
}

func gitignoreRosGitignore() (*asset, error) {
	bytes, err := gitignoreRosGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ROS.gitignore", size: 493, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRailsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x3d\x6f\x1b\x39\x10\xed\xf9\x2b\x06\x50\x27\x58\xe4\x19\xd7\x19\x57\xdd\x5d\x10\x04\x29\x04\x04\xe9\x0d\x2e\x77\xb4\x4b\x8b\xe4\x30\x33\xc3\x55\x36\xbf\x3e\xe0\x4a\x56\xec\x34\xe9\xc8\xf9\x78\x6f\xde\x7b\x7b\xcb\x43\x30\xc1\xd7\x75\xf0\xec\x0f\x7b\x3b\x6b\x4e\xc6\xb2\x54\x0c\xc6\x25\x9a\x8c\xd3\x5c\x8d\x1b\x07\xb7\xb7\xf2\x2d\x45\xc5\xbf\xdf\xff\x0e\x2f\xd4\xb8\xf8\x64\x5c\x6d\x43\x8a\xc1\xc9\x2a\x8a\xd9\xb8\x40\x0b\xb2\x9f\xd0\x19\xd7\xd1\x36\x9c\xbd\x25\x8e\x93\x61\xe4\x56\xac\x7e\x57\x53\x63\x38\x27\x3c\x60\xf6\x31\xbd\xb2\x9b\x1d\x7c\x3d\xfe\x7f\x84\xff\x28\x67\x2c\x0a\xd4\x14\x74\x8e\x02\xdc\x12\x42\x3c\xc1\x4a\x0d\x3c\x23\x1c\x3f\xc3\x25\xea\x0c\x82\x81\x51\x05\x06\x8c\x65\x82\x56\x13\xf9\x11\x47\x50\x02\x9d\x11\x18\x2b\x99\x40\xe5\x14\x27\x17\x4b\xd4\xe8\x53\xfc\x81\x2c\xee\xba\xf6\xac\x74\xc6\x62\x79\xe8\xbc\xc7\x92\x56\x88\x25\xa4\x36\xde\x99\x66\xbf\x20\x54\xa6\xb1\x05\x8d\x54\xee\x6c\xb1\x5c\xaf\x3a\xc5\x84\x0f\x70\x99\x63\x98\x21\x0a\x14\x82\x44\x65\x42\x06\x0f\x5f\x7c\x4c\x02\x23\x9e\x7c\x4b\x6a\x76\x70\xbb\xe2\x86\x60\xd7\xab\xd8\x91\x14\xcb\xf2\x47\xd5\x58\x96\xc8\x54\xb6\xe6\xe2\x39\xfa\x21\xa1\x40\xf0\x05\x06\x84\x40\x39\x47\x55\x1c\x8d\xed\x58\x66\xb7\x83\x0f\x6f\xe6\x0b\x71\xee\xb2\x7d\x57\xf0\x64\x9c\x1d\x5a\x19\x13\x1a\xb7\x60\x19\x89\xdd\xed\x6b\x76\xdd\x31\x41\x90\x99\x5a\x1a\xc1\xa7\xb4\x81\xcf\x18\xce\x38\x6e\x8a\xe9\x8e\x85\x9b\xbb\x6f\xae\x7a\x32\x3b\xf8\x88\xb9\xfb\x61\x13\x85\xf3\x03\x58\x6e\xc3\x7a\x58\x90\x25\x52\x79\xfd\x4e\x98\x05\xb5\x73\xb5\x92\x50\x04\xa4\xd5\x4a\xac\x3d\x3b\x5e\x32\xfc\x03\x8f\xf6\xf1\xd1\xfe\x05\xc4\x30\x52\xaf\x0a\x65\xd4\xb9\xbf\x4e\xbe\x84\xf5\x01\xe2\x54\x88\x71\xb3\xe7\xc9\x58\x5e\x32\x87\x8e\x17\x4f\xd0\xa4\x8f\x0d\x74\x41\x3e\xf0\xe6\xfe\x6d\xf6\x16\xc2\xb5\xf5\x1c\x28\x57\x2a\x58\x54\xa0\x7a\x9d\xaf\x55\xfb\x22\x54\xb6\x38\xe5\x6e\x8c\x17\x41\x15\xf7\xfb\x96\xd9\xdb\xad\xc4\xc1\xfc\x5a\xed\x27\x7c\xba\xb2\x55\xba\xbc\xcb\x4b\x50\xbb\x3e\x31\xb6\xd2\xe5\x1a\xd0\xeb\xe8\xbf\x2b\x0e\x6d\xda\x02\xf4\x65\x84\x39\x8a\x12\xaf\xdb\x19\xd6\xd8\x61\xeb\x3e\xdf\xaa\xe6\x67\x00\x00\x00\xff\xff\xd0\x85\xcd\x75\xaf\x03\x00\x00")

func gitignoreRailsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRailsGitignore,
		"gitignore/Rails.gitignore",
	)
}

func gitignoreRailsGitignore() (*asset, error) {
	bytes, err := gitignoreRailsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Rails.gitignore", size: 943, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRhodesrhomobileGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xca\xc8\xcf\xc9\x4f\xd7\xd5\xe2\x2a\xce\xcc\xd5\xd5\xe2\x4a\xca\xcc\xd3\xcf\xc9\x4c\x2a\x06\x33\x82\x32\xf2\x9d\x4a\xf3\x52\x72\x52\xc1\xbc\x92\xdc\x02\x08\x9d\x58\x94\x9e\x5a\x02\x66\x6a\xe9\x25\x16\xc4\x73\x69\xe9\xe5\x73\x69\xe9\x65\x25\x16\x71\x01\x02\x00\x00\xff\xff\xbe\x88\x70\x1c\x4d\x00\x00\x00")

func gitignoreRhodesrhomobileGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRhodesrhomobileGitignore,
		"gitignore/RhodesRhomobile.gitignore",
	)
}

func gitignoreRhodesrhomobileGitignore() (*asset, error) {
	bytes, err := gitignoreRhodesrhomobileGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/RhodesRhomobile.gitignore", size: 77, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRubyGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x3d\x8f\xe4\x36\x0c\xed\xf5\x2b\x08\xb8\x49\x16\x6b\x29\xdb\x4e\xd2\xe5\xbb\x08\x72\xc8\x22\x48\xb9\x90\x25\x8e\xcc\xac\x44\x1a\x94\xe4\xbd\xc9\xaf\x0f\x64\x4f\xf6\x2e\xcd\x35\x04\x3f\x2c\xf2\xf1\xf1\xf9\xc1\x26\x2c\xe6\xc1\xea\x12\x8c\xb3\x41\xf8\x4a\xc9\xb8\x20\x3b\xaa\x4f\xe8\x8c\xfb\x95\x6b\xf3\x39\x63\xfc\x89\x32\x56\xe3\xb6\xd7\xe4\x8c\xab\x1b\x06\xa7\xb8\x89\xb6\xfa\x5f\x88\x1f\x7d\xd9\x32\x56\xdb\x3e\x36\xe3\x1a\xd6\xe6\x5a\xd9\xdc\xdd\xdd\x51\x2b\x09\xbf\xdc\x53\xc3\x9a\x09\xfe\xac\x18\x61\xb9\x41\x94\x86\xbc\x43\xa6\x45\xbd\xde\xa0\x09\x64\xf1\x11\x90\x77\x52\xe1\x82\xdc\x60\xf7\x4a\x7e\x19\xfd\xcd\x04\x16\x79\x37\x66\x9a\xe0\x79\xc3\x40\x57\x0a\xe3\xc9\x1f\x7d\xb9\xfd\x26\x8d\x84\x2f\xc6\x46\xdf\x1e\x8c\x55\xdc\xf2\xcb\x4a\xb5\x89\xde\xcc\xd2\x29\x47\x67\x1e\xec\xa2\x14\x13\xd6\xbe\x0d\xfc\x67\x7a\xa6\x0f\xab\x30\xfe\xfe\xec\xfe\x17\x3f\x53\xe9\xd9\x37\x51\xf7\x85\x69\xf0\x55\xaf\x08\x72\x85\xef\x25\x88\xff\x20\xb1\x7e\x7d\x31\x93\x99\xe0\x2f\x04\xc5\x20\xa5\x20\x47\xf0\xc9\x13\xd7\x06\x3e\x46\xe2\x04\x6d\x45\x18\x9f\x42\x24\xc5\x30\xf0\x8d\xa6\x37\xe9\x0a\x36\x51\xa3\xc4\xa2\x68\xe1\x17\x79\xc3\x1d\xd5\x4c\xa3\x04\x75\x95\x9e\x23\xfc\xdd\x63\x42\xb8\x8a\x1e\xdf\x57\xcc\xd7\xc7\xa3\xdf\xa6\x52\xc1\x73\x84\x20\x5c\xc1\x2b\xc2\x60\x8e\x84\x31\x82\x6f\x17\x33\xc1\xda\xda\x56\x2f\xce\xa5\x4e\x11\xab\x0d\x03\xf0\x26\xb1\x5a\xd1\xe4\x7a\x25\xbe\xdb\xf9\x53\x65\x6d\x25\x4f\xe7\xe0\x99\xe6\xb0\x62\x78\x9d\xdb\x8a\xf3\x28\xce\xef\xe0\x67\xe2\x26\x73\x95\xae\x01\xe7\x20\xdc\x54\xf2\xc1\xc1\x8e\x1c\x45\xdd\x58\xf5\xe4\xf0\x07\x09\x7d\xc0\xf2\x07\x75\xc1\x87\x15\x0f\xcc\x09\x19\xd5\x37\x8c\x70\x1d\x4a\xbb\x18\x67\x6f\x5e\xa3\x04\x67\xdc\xcb\xbb\x77\xda\x33\x18\xdd\x7e\xfc\x4c\x21\x2c\x5a\x7c\xa6\x7f\xfc\x29\x01\x67\x97\xce\x31\x0f\x11\xdf\x41\x9c\xb1\x71\x99\x96\xbb\xaf\xae\x78\x3e\x94\x38\xd8\xf4\xef\x02\x14\x85\x84\xe5\xf1\x20\xbd\x50\x5a\x1b\xbc\x79\x6e\xe3\x42\xe7\x61\x06\xdd\x15\x4f\xa4\x50\x89\xc3\x91\x81\x20\x11\x81\xaa\x99\x80\xb8\x21\x47\x8c\xe3\x89\x76\x06\x62\x28\x3d\x37\xda\x32\x7e\xae\xea\xfa\x2d\x48\x5b\x51\xdf\xa8\xe2\x23\x1c\xe4\x8e\x46\x05\x88\xc7\xb9\x7e\xc6\x32\x46\xd8\x2c\xe1\x75\xa8\x5e\xfb\x72\x9b\xef\x7f\xd2\x7b\x9c\xb0\x54\x6c\x63\x87\xce\x19\x6b\x85\xbb\xb0\x87\xca\x74\x2f\xf0\x1d\x3c\xd9\xa7\x27\xfb\xcd\x58\x2a\xca\xc8\x56\x29\xd8\xd6\xe1\x5d\x3d\x87\xdb\xe3\xa7\xa5\xa8\x5e\x8c\xd5\xbd\x68\x30\xff\x06\x00\x00\xff\xff\x84\x6f\xb9\x8f\x1a\x04\x00\x00")

func gitignoreRubyGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRubyGitignore,
		"gitignore/Ruby.gitignore",
	)
}

func gitignoreRubyGitignore() (*asset, error) {
	bytes, err := gitignoreRubyGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ruby.gitignore", size: 1050, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreRustGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xd0\xb1\x4e\x03\x31\x0c\x06\xe0\x3d\x4f\xf1\x4b\xb7\x55\xf4\xb2\xb3\x32\x30\xb1\x20\x5e\xc0\x97\x73\x72\x56\x93\xb8\x72\x7c\x05\xde\x1e\x5d\x41\xa2\xa3\x07\xff\xfe\xfc\x4f\x78\xe5\xce\x46\xce\x2b\x96\x6f\xbc\x90\x15\x0d\x13\x3e\xa5\x56\x6c\x74\x63\x24\x6d\x57\xa9\xbc\x22\x4b\xe5\x01\xea\x2b\xf8\x8b\xd3\xee\xb4\x54\x1e\x21\x3a\x59\x61\x8f\x21\x4c\x78\xe7\xa6\x37\xfe\xcd\x98\xab\xa6\x0b\xb2\x69\x43\x11\x97\xd2\xd5\x18\x92\x91\x8c\xc9\xa5\x17\x50\x7f\xc8\x79\x42\xe5\xe3\x98\x38\xb2\x1a\xaa\x2c\x46\x26\x3c\xc2\x84\xb7\xfb\x62\xcf\x6a\x8d\x5c\xb4\x63\x63\x63\x6c\xee\xd7\xe7\x18\x57\x4d\x73\x3a\xf0\x63\x16\x8d\x65\x97\x95\xe7\xcd\x5b\x9d\xd2\x61\x70\x6d\xf5\x7c\x1b\xe7\xfb\x70\x78\xc2\x3f\xed\xf0\x7e\x6c\x3c\x18\x64\x8c\x85\xd2\x65\xbf\xfe\xbd\x58\x1e\x0b\xb1\x7d\x78\x6e\x1e\x4e\xa7\x78\x9a\x6d\xcc\xcb\x25\xfc\x04\x00\x00\xff\xff\x5b\x01\xad\x7e\x33\x01\x00\x00")

func gitignoreRustGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRustGitignore,
		"gitignore/Rust.gitignore",
	)
}

func gitignoreRustGitignore() (*asset, error) {
	bytes, err := gitignoreRustGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Rust.gitignore", size: 307, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSconsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\xcb\x2f\x52\x28\x28\xca\xcf\x4a\x4d\x2e\x29\x56\x28\xc9\x48\x2c\x51\x28\x2d\x4e\x55\x08\x76\xce\xcf\x2b\x06\xcb\x25\x95\x66\xe6\xa4\x64\xe6\xa5\x5b\x29\x64\x94\x94\x14\x58\xe9\xeb\x43\xa9\xf2\xf2\x72\xbd\xe2\xe4\xfc\xbc\x62\xbd\xfc\xa2\x74\x7d\x2e\x08\x3b\x33\x3d\x4f\x2f\x25\x29\x27\xb3\x24\x95\x0b\x10\x00\x00\xff\xff\x17\x75\xc9\x6e\x5a\x00\x00\x00")

func gitignoreSconsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSconsGitignore,
		"gitignore/SCons.gitignore",
	)
}

func gitignoreSconsGitignore() (*asset, error) {
	bytes, err := gitignoreSconsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SCons.gitignore", size: 90, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSassGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x4e\x2c\x2e\xd6\x4d\x4e\x4c\xce\x48\xd5\xe7\xd2\xd2\x4b\x2e\x2e\xd6\xcb\x4d\x2c\xe0\x02\x04\x00\x00\xff\xff\x30\x6e\x9e\x4b\x17\x00\x00\x00")

func gitignoreSassGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSassGitignore,
		"gitignore/Sass.gitignore",
	)
}

func gitignoreSassGitignore() (*asset, error) {
	bytes, err := gitignoreSassGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Sass.gitignore", size: 23, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreScalaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x4b\xce\x49\x2c\x2e\xe6\xd2\xd2\xcb\xc9\x4f\xe7\x02\x04\x00\x00\xff\xff\x48\x18\x02\xd3\x0e\x00\x00\x00")

func gitignoreScalaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreScalaGitignore,
		"gitignore/Scala.gitignore",
	)
}

func gitignoreScalaGitignore() (*asset, error) {
	bytes, err := gitignoreScalaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Scala.gitignore", size: 14, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSchemeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2e\xae\xe3\x02\x91\xca\x5a\x5c\x7a\xca\x20\x06\x17\x88\x9b\x9c\x5b\x07\xa1\x60\xc2\xc9\xb9\x5c\x80\x00\x00\x00\xff\xff\xb3\xa8\x51\x7a\x2c\x00\x00\x00")

func gitignoreSchemeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSchemeGitignore,
		"gitignore/Scheme.gitignore",
	)
}

func gitignoreSchemeGitignore() (*asset, error) {
	bytes, err := gitignoreSchemeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Scheme.gitignore", size: 44, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreScrivenerGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xc9\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\xc3\xd8\x4b\x20\x2a\x1a\xc4\x04\x39\x9f\xc5\x59\x0e\xe7\x28\x3f\x46\x8c\x8f\x28\x52\xd0\xbe\xc7\x57\x6b\x0a\xde\xec\xdc\x75\x50\xcd\x19\xa8\x6f\x2d\xff\xbc\x55\xf1\xec\x0b\xa1\x75\xc8\x41\xbf\xfa\x28\x96\x26\x74\x50\x0b\xf1\x05\x97\x10\xf0\x1e\x02\x92\x43\xc5\x91\xaf\xc2\xf7\x34\xf1\x5b\x84\x73\xe1\x87\xce\x69\xe7\x13\x9c\x46\xbd\x19\x66\xf9\x06\x00\x00\xff\xff\x3a\x06\x4f\xe1\x8c\x00\x00\x00")

func gitignoreScrivenerGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreScrivenerGitignore,
		"gitignore/Scrivener.gitignore",
	)
}

func gitignoreScrivenerGitignore() (*asset, error) {
	bytes, err := gitignoreScrivenerGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Scrivener.gitignore", size: 140, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSdccGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x76\x71\x76\x56\x28\x2e\x29\x4d\x4b\xe3\xd2\xd2\xcb\xc9\xcb\x06\x91\xc5\x25\x5c\x5a\x7a\xb9\x89\x05\x20\x32\x35\x97\x4b\x4b\xaf\x28\x35\x07\x44\x82\xc5\x8b\x2b\x73\xb9\x00\x01\x00\x00\xff\xff\x8f\x5b\x05\xc4\x37\x00\x00\x00")

func gitignoreSdccGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSdccGitignore,
		"gitignore/Sdcc.gitignore",
	)
}

func gitignoreSdccGitignore() (*asset, error) {
	bytes, err := gitignoreSdccGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Sdcc.gitignore", size: 55, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSeamgenGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\xdb\x30\x0c\x3d\x57\x5f\x41\xc0\x97\x0e\xa8\x23\xac\x68\xd3\xa0\xa7\x02\xc3\x80\xed\xb4\x43\x87\xdd\x59\x8b\x8e\xb5\xca\xa2\x46\x52\x49\xf7\xf7\x83\xe2\xa6\xc8\xb0\x74\xbe\xd1\x14\x1f\xdf\x7b\x7c\xfe\x89\xd9\xd4\x04\x8b\x0f\x68\xe8\x4e\x6a\x9b\x8b\xf3\x43\x42\x55\x52\xef\x7c\x88\x6a\xde\x79\x7a\x29\x89\x03\x85\x1e\x65\x98\xe2\xee\xd0\x32\x52\xeb\x9f\x6a\x4c\xe1\x58\x70\xb5\x52\xed\x58\x09\x15\x96\x43\x85\xb2\x25\xf3\xce\x68\x2e\x7d\x6b\xe5\x6d\x3f\x54\x35\x9e\xb5\x46\xa3\xd5\xcb\x9c\x9c\xeb\xe0\x09\x95\x02\x70\x86\xc9\xac\xdc\x7b\xaf\x86\xc3\x33\xef\x48\xc6\xc4\xfb\xd5\xc0\xb3\x47\xbf\xd9\xac\x6f\x37\xb7\x1b\x7f\x73\x7d\x7d\x73\xb7\x86\xaf\x80\x33\x08\xcd\xbc\x8b\x79\x0b\x31\xa7\x98\x09\x06\x9e\x67\xca\xa6\xce\x75\x6f\x42\x00\x2e\x2e\xe0\xaf\x0f\x53\x82\x43\x17\xc6\x98\x48\x5d\xb7\x48\x85\xf3\xdf\xc0\xd9\x30\x66\x85\x2d\x65\x12\x34\x0a\xb0\x47\x59\x46\x61\x64\x81\x40\x25\xf1\xef\xb6\xd7\x75\x67\xdc\x3a\x6e\x6f\x43\x0d\x8b\xb2\x1d\xa1\x22\x67\x08\x55\x9a\x80\x05\x04\x2e\x59\xe0\x15\xe2\x83\xeb\x4e\x7d\xfe\x87\x57\xeb\x35\xc1\x25\xa6\x05\xe9\x12\xb3\xc1\x62\xf8\x81\xd7\x23\xe1\xfc\x06\xf2\x7a\x9f\xb3\x20\x42\x5a\x93\xe9\xf1\xe9\xeb\xf1\xde\x79\xda\x7a\xa7\xfc\x47\x96\x2b\xa0\xd5\x76\x75\x05\x5f\x6a\x50\xce\x0d\x66\xb9\xfa\x59\x3b\x67\xdc\x51\x86\x85\x0e\x8c\x9c\x02\x89\xeb\xfe\x13\x8f\x8b\x13\xdb\x27\xca\x20\x35\xe7\x66\xd8\x22\x1f\x95\x14\x6a\x0e\x24\xf0\x79\x48\xb1\x28\xb5\x38\x7d\x9f\x30\x3f\x2b\x18\xc3\xc3\x0f\xce\x9f\x00\x73\x80\x87\x67\xc1\xd1\xf0\x40\x18\x6c\xa2\x28\x30\x51\x2a\x63\x4d\x80\x59\xf7\x24\xda\xf2\x87\x20\x94\x0e\xcb\x7e\x55\xd2\x26\xd0\x75\xed\xff\x63\x0b\xe4\xb7\x93\x40\xde\xbb\xee\xfd\xb0\x1e\x67\xd5\xdf\x7c\xbc\x5b\xaf\x37\x77\xae\x03\xbf\x9f\xd0\xfa\xa8\xbd\x4d\xd4\x0b\x2d\x49\x6d\x41\x51\xae\x32\x50\xdf\xa2\x21\x9c\xfa\xb8\xcd\x2c\xd4\x17\x34\x23\xc9\xfd\xc8\xd2\x2b\xe1\xdc\x17\xe1\x9f\x34\x98\xba\x3f\x01\x00\x00\xff\xff\x86\xfc\xd0\xee\xc1\x03\x00\x00")

func gitignoreSeamgenGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSeamgenGitignore,
		"gitignore/SeamGen.gitignore",
	)
}

func gitignoreSeamgenGitignore() (*asset, error) {
	bytes, err := gitignoreSeamgenGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SeamGen.gitignore", size: 961, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSketchupGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\xce\x4e\xe2\x02\x04\x00\x00\xff\xff\x1e\xdd\x12\xe3\x06\x00\x00\x00")

func gitignoreSketchupGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSketchupGitignore,
		"gitignore/SketchUp.gitignore",
	)
}

func gitignoreSketchupGitignore() (*asset, error) {
	bytes, err := gitignoreSketchupGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SketchUp.gitignore", size: 6, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSmalltalkGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8c\x3f\xce\xc3\x20\x0c\x47\x77\x9f\xc2\x52\xb6\x48\xc9\x77\x89\x6f\xad\x54\x29\x27\x70\x90\x6b\x10\x26\xa4\x05\x86\xf6\xf4\x15\x7f\x3a\x74\xe8\x84\x1e\xbf\xf7\x3c\xa1\xb1\x74\x08\x27\xbc\x39\x65\x98\xd7\x81\x00\x13\xa6\x67\xca\x1c\xd0\x05\x92\xba\xf4\x17\x26\xbc\x5a\x7a\x44\xdc\x02\xa9\x66\x52\x8f\xff\xbc\x17\x41\x8d\xd2\x6f\xb4\xb9\xfd\xad\x1a\xa5\x06\xdb\xbd\x30\xf9\xdf\x45\xdf\xbf\x92\x4b\x3c\xb2\x33\xac\x1a\xf1\x24\xe3\x49\x18\x0d\x19\xcb\xf0\x37\x70\xe9\x58\x55\xce\xd4\xcc\x45\x5c\xb6\x65\xff\x88\x9d\x86\x37\x60\x5e\x5f\xee\x84\x77\x00\x00\x00\xff\xff\xa1\x03\xda\xe5\xf5\x00\x00\x00")

func gitignoreSmalltalkGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSmalltalkGitignore,
		"gitignore/Smalltalk.gitignore",
	)
}

func gitignoreSmalltalkGitignore() (*asset, error) {
	bytes, err := gitignoreSmalltalkGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Smalltalk.gitignore", size: 245, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreStellaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xc1\x6a\xc3\x30\x0c\xc6\xf1\xbb\x9e\xe2\x83\x5c\xb6\x42\xb3\x50\x58\xda\x6b\xe8\xae\x3b\xf5\x09\xe4\x58\x1b\x2a\x8e\x65\x2c\xfb\xfd\x47\x4a\x0e\xbb\x09\x7d\xf0\xe3\x3f\x60\x69\x5c\x15\x97\x79\x9a\xf0\xf6\x68\x92\x12\xbf\xc3\x7b\x29\x56\x1b\x7e\xac\x62\xeb\xa9\x69\x49\x02\x76\x97\x2d\x24\xa9\x4e\x03\xce\xf8\x5a\x1e\xdf\xaf\xe3\x7e\x9f\x3f\x89\x06\x2c\xc7\x1e\x11\x34\x73\x55\x71\x70\x8e\xb0\xf0\x94\xb5\x21\x6a\x95\xb5\xd9\xfe\x26\x0b\xcf\x0f\xe2\xd1\x7a\xa3\xd3\x18\x34\xd3\x69\xe4\xcb\xfc\x32\x62\x84\x66\x78\x91\x55\x39\x1d\x6d\xd7\xdb\x34\x9d\x03\xfb\x7f\x79\x2f\xfb\x35\x8b\xd8\x84\xbd\x57\xd9\x89\xeb\x8d\xfe\x02\x00\x00\xff\xff\xe2\x54\x99\xdf\xcf\x00\x00\x00")

func gitignoreStellaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreStellaGitignore,
		"gitignore/Stella.gitignore",
	)
}

func gitignoreStellaGitignore() (*asset, error) {
	bytes, err := gitignoreStellaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Stella.gitignore", size: 207, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSugarcrmGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcb\x8e\xdb\x3a\x0c\x86\xf7\x7e\x0a\x1e\x78\x71\x80\x2c\xec\x87\x18\xb4\x40\x81\x76\xd3\x0b\xba\x1c\xc8\x12\x65\x11\x91\x45\x81\x94\x92\xc9\xdb\x17\x92\x3d\x49\xa6\xe8\x8e\xfa\x78\xff\xa9\x71\x84\x1f\x75\x35\xf2\xf2\xfd\xdb\x30\xc2\x97\x35\xb1\x20\xd8\xaa\x85\x37\x98\x42\x31\xd6\xa2\x2a\x68\xa9\xde\x4f\xc3\x7c\x27\x8f\xd8\x12\x10\xac\xb1\x01\xc1\x91\xa0\x2d\x2c\x37\xb0\xbc\xe5\x88\x05\xe3\x6d\x1a\x46\xf8\x19\x48\xe1\x4a\x31\xc2\x22\x68\xce\x7b\x46\x15\xc1\x54\x60\xc1\x60\x2e\xc4\x55\x26\xf8\x1d\xc8\x06\xb8\x1a\x05\xf6\x05\x13\x44\x34\x8e\xd2\x0a\x85\x87\xb1\xe7\x6c\xa4\x55\x11\xd8\xf7\x97\x60\x66\xa5\xde\xce\x28\x2c\xc6\x9e\x6b\x6e\x30\x1a\x8b\x1b\xa6\xd2\x3a\x7f\x66\x01\x87\x17\x8c\x9c\x1b\xfa\xf7\xac\x26\xc1\x82\xa0\xc6\x63\xbc\x01\xf5\xa5\x1c\x98\xe4\xf6\xae\x82\xbe\x6d\x49\x05\x48\xdf\xbd\xd3\x30\xf7\x2a\xf3\xf0\xdf\x61\x50\x72\xf8\x36\x85\xb2\xc5\x87\x30\xca\x1b\x82\xa7\x88\xda\xaa\xdd\x3b\x12\x2a\x78\xe1\xed\x90\xa1\x0b\x7d\x9f\xa6\x55\xee\x68\x0e\xa4\x0d\xcc\x77\xb0\xb1\xab\x11\x97\x4a\xd1\xa1\x3c\xf0\x95\xe5\x4c\x69\xfd\x3b\x4e\xe7\xd3\xfc\xe9\xad\x3c\xb0\xc9\x39\x92\x35\x85\x38\xed\x8e\x11\x5e\xf6\xe6\x96\x93\xa7\xb5\x4a\xf7\x81\x06\xae\xd1\x81\x89\xca\x4d\x96\xa7\x8d\x7b\xd8\x94\x43\x7e\xb7\x5f\xf9\x82\x22\xe4\xb0\xc3\x76\x67\x04\xa5\xd8\x84\xae\x79\x15\xe3\x10\xd4\x0a\xe5\xa2\x60\x04\xd3\xff\x05\x12\xa2\xeb\xc5\xf6\xb0\x5f\x7b\xd4\xe9\xc8\xff\xca\xab\x1e\x82\xb5\xa3\x1c\x17\x79\x1e\xe2\x34\x45\x5e\x3f\x7e\xbd\x84\x57\xa8\x39\xb2\xf9\xa0\xf0\x34\xcc\x3b\x6c\x27\x3a\xac\xa7\x1b\x1d\xe8\x75\xff\x35\xf3\xf0\x27\x00\x00\xff\xff\x57\xae\x80\x22\x05\x03\x00\x00")

func gitignoreSugarcrmGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSugarcrmGitignore,
		"gitignore/SugarCRM.gitignore",
	)
}

func gitignoreSugarcrmGitignore() (*asset, error) {
	bytes, err := gitignoreSugarcrmGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SugarCRM.gitignore", size: 773, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSwiftGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4b\x8f\xe4\x36\x0f\xbc\xeb\x57\xf0\x83\x81\xef\xd0\x18\xcb\xc8\xe6\x36\xb7\x64\x16\x49\xf6\xb0\xd8\x01\x16\xc8\xe3\x14\xc8\x12\xdb\xe6\x8c\x2d\x0a\x22\xd5\x8f\xfc\xfa\x40\xea\x87\x67\x36\x39\xe6\xd2\x90\xab\x44\xb2\xc8\xa2\xba\x83\xdf\x3d\x07\x34\x9d\xe9\x60\x22\xa5\x29\x72\x46\xf0\x1c\x35\xd3\x58\x94\xb3\x3c\x42\xc6\x15\xd7\x11\x33\x28\x43\x49\xc1\x29\xc2\xcf\x0b\x8f\x6e\x19\x5a\xac\xbd\xc7\x3d\xc0\x97\xf1\x05\xbd\xd2\x01\xfb\xa7\x0d\x86\xff\xc3\xd7\x23\xed\x75\x43\x8c\xe9\x3a\xf8\xb1\xd0\x12\x60\xc2\x88\xd9\x29\x06\x33\xd6\xef\xc1\x7c\xc4\x4c\x07\x0c\x1f\x9d\xba\xa1\xdd\xfb\xd5\x65\xe2\x22\x20\xa8\x4a\x71\x12\xb3\xb3\x69\x3c\x15\xc1\x6c\xfe\x17\x70\xef\xca\xa2\x77\x60\x67\x57\x0e\xf8\xdd\xe1\xfb\x8d\xba\x01\x17\xea\xc3\xb7\xd4\x87\x46\x25\xcc\x92\x2e\xca\xdf\x5e\x78\x0f\x9f\x7c\xad\x11\xee\xc2\xbe\xe8\x7c\x2d\x79\xc0\xd0\x3b\xa1\x80\x66\x67\x4f\xde\xcf\xe8\x5f\xb9\x68\xfb\x10\xbf\x8e\x4b\xc1\x94\x29\xea\x25\x6a\x7c\xe9\x9f\x86\x36\x10\xa8\xc9\x69\x4f\xde\xec\xec\xbc\xba\x64\x76\x96\x92\x33\x3b\x1b\xbe\xfe\xf1\xd9\xfe\x45\xe9\x7a\x6c\x71\xcf\x8b\x3b\x4f\x99\x4b\x0c\x62\x94\x56\x5c\x28\xa2\x3d\xf9\xdb\xd1\xa4\x3b\x6f\x4f\xfe\xc8\xf9\x55\x92\xf3\x75\xd2\x97\xe1\xc3\xb3\xf3\xaf\x6e\x42\xf8\xec\xa2\x9b\x30\x37\xc7\x7f\x08\x01\x74\x26\x81\x9a\x01\x68\x0f\x67\x2e\x70\x74\x51\xab\xd5\xee\xc0\x14\xa0\x35\x43\x71\x02\x8a\x20\x5c\xb2\xaf\xdb\x11\x10\xf6\x99\xd7\x7f\xcf\x0c\x01\x13\xc6\x80\xd1\x13\x8a\x35\xdd\x8d\x97\x61\x3b\xdb\x44\x51\x8c\xbd\x5a\x6e\x3a\x78\x62\xcf\xee\x99\x83\x34\x5d\xbf\x21\x64\xf4\xbc\xae\x18\x03\xb8\xc9\x51\x14\x05\x17\x42\xd5\xa1\x33\x42\xbd\x08\x81\x32\x7a\xe5\x7c\xae\x62\xcf\x5c\x32\x6c\x0b\x66\xe1\x17\x3e\xe2\xa1\xb6\xd9\x7a\x92\x99\xcb\x12\xe0\xa5\x84\x09\x61\xcf\xb9\xdd\x17\x5c\xf6\x0f\x2d\x5f\xca\x2c\xe0\x62\xa8\x8b\x2f\xe0\x32\xc2\x8a\x51\x89\x23\x06\x70\xfa\x68\x3a\x98\x55\x93\x3c\x0e\xc3\x54\x28\xa0\x58\x5f\xe5\x26\x0e\x62\x39\x4f\x43\x11\x8a\xd7\xdf\x7e\x63\x66\x5d\x97\xee\x52\xb8\xa7\xbe\xcd\xb1\xd7\x19\xfb\x4a\xf6\x77\xf1\x3d\x45\xe5\xfe\x32\xd9\xbe\xbd\x3b\x5e\xda\x0c\x6a\x8f\x97\xd1\xb8\xac\xb3\x9b\xf0\x3f\x71\xec\x96\xec\x1f\x26\xdd\x88\xe1\xe9\xba\xbd\x62\xcc\x1d\x6b\x4f\xb5\x6a\xd9\x3b\xd1\xc5\xc5\x8b\x96\x4f\x0a\x24\x9b\x51\x18\xaa\x86\xc8\x0a\xa2\xf5\xd5\xd7\xc1\x8a\xcf\x88\x51\x66\x56\xa9\x72\x2a\x34\x91\x42\xc6\xc4\x16\x3e\x45\x51\x74\xe1\x01\x8a\xe0\x3d\x73\xcd\x91\xb1\xbf\xfd\x2d\xd4\x10\xd3\xbd\xcb\x73\x9c\x31\x56\x6b\x2b\x75\x6e\x66\x45\xc4\x80\xa1\x76\xf1\x13\x67\x58\x6b\x71\x8a\x7b\xce\xab\xab\x1e\x82\x1b\xb9\x68\xab\xfd\x56\xab\xa0\x96\x04\x07\x12\x7a\x67\x70\x60\x2f\xf6\x26\xc6\x2a\xf3\x22\xc3\x88\xa2\x7d\xca\xce\x2b\x79\x94\xe1\xbd\x59\x43\xf7\x8d\x79\xe6\x16\x3d\xd4\x36\xb3\xda\xd3\xba\x6c\xd8\x73\xc6\x03\xe1\xb1\x6d\xc7\x86\xbe\xe9\x6f\x03\x15\x45\xff\xe4\xa2\xa9\xa8\xf9\x3b\x00\x00\xff\xff\x01\xb3\x86\xb1\xa8\x05\x00\x00")

func gitignoreSwiftGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSwiftGitignore,
		"gitignore/Swift.gitignore",
	)
}

func gitignoreSwiftGitignore() (*asset, error) {
	bytes, err := gitignoreSwiftGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Swift.gitignore", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSymfonyGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\x0c\xda\x0b\x8d\x50\x2c\xc1\xad\x37\x5a\x55\xe2\x82\x54\x09\x71\x46\x93\x78\x36\x3b\xaa\x33\x63\x3c\x0e\x25\x17\x7e\x3b\x72\xbc\x4d\x8a\x80\x93\xfd\x3e\xc6\x7e\x6f\x4e\x70\x8f\xe3\x85\x00\x25\x40\xd4\xc9\xe0\xed\x97\x75\x3e\xab\xac\xef\x6f\x9c\xc7\x94\xfc\x58\x65\xdf\x35\x50\x1d\xbe\x73\x6f\x0e\xa1\x9f\xb8\x3c\x11\xa5\xc6\x6d\xfa\x4e\xb9\x13\x3c\xcc\xc8\x11\x2c\xa9\x46\x38\x6b\x0c\x94\xdb\x43\x1b\xe3\xbb\x6a\xd9\xfe\x7f\x07\x46\x66\xac\x02\x67\x8e\x64\x7f\xc7\xf9\x70\xe3\xfc\x0f\xcc\x47\x9c\x0a\xae\x71\xb6\xfb\x75\x7e\x8b\x77\x18\x8f\x78\xbb\xff\x4f\x6a\x1f\x7b\x9d\xfa\x11\x33\xce\x54\x28\xdb\x75\x07\x2a\x67\x9e\x7c\xda\xe9\x7e\x9d\xe3\xff\x24\x16\xae\x6f\x7c\x46\xc1\x89\x02\x0c\x2b\xdc\xeb\x9c\xd4\x5e\xaa\x0f\xaa\xc5\x4a\xc6\xd4\xa7\x4b\xea\xb7\x98\xad\xc1\x3f\x85\x81\xa5\x36\xaa\xc7\xa8\x62\x1a\xa9\x01\x6b\x6b\xf9\x96\xe9\xfb\xc2\x99\x66\x92\x62\xf5\xdb\x8f\x66\x54\xda\xfe\x16\xa3\x0c\x4b\x8a\x8a\xc1\x9c\x7f\xa6\xc1\x0f\x8b\x84\x48\xe6\x1b\xba\x4a\x7e\x6b\xfc\xe9\xf1\xab\x70\x69\x09\xd3\x25\x2d\xc2\xa5\xff\x59\x4b\xbe\x06\xee\x04\x77\x0b\xc7\x00\x01\x0b\x3a\x3f\xd4\xfb\x36\x7e\x87\xe3\xd3\x92\x80\xa4\x70\x61\x32\x98\x48\x28\x63\xa1\x00\xcf\x5c\x2e\x10\x74\x2c\x99\x85\x6e\x5f\xf8\xdb\xdd\x39\xea\x3c\xa3\x04\xd7\x75\xfe\xa1\x72\xab\xef\x7e\xb9\xdf\x01\x00\x00\xff\xff\xea\xf5\x39\x3c\x95\x02\x00\x00")

func gitignoreSymfonyGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSymfonyGitignore,
		"gitignore/Symfony.gitignore",
	)
}

func gitignoreSymfonyGitignore() (*asset, error) {
	bytes, err := gitignoreSymfonyGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Symfony.gitignore", size: 661, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreSymphonycmsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc7\xc1\x0d\x80\x20\x0c\x05\xd0\x7b\x77\xd1\xce\xd4\x20\x02\xb1\xd0\xc6\x5f\xa3\x6c\xef\xcd\x78\x7c\x5d\x46\xdb\x33\x82\x93\xa4\x9a\x99\x3e\xab\x15\xfc\x18\xdd\x99\x30\xbb\x57\x1b\x93\xe9\xb6\xf3\x80\x4b\xca\x7c\xb9\x9a\x6c\x60\x6a\x03\x21\xaa\x8b\x5a\x59\xe3\x09\x7a\x03\x00\x00\xff\xff\x34\x42\xaf\xc7\x5a\x00\x00\x00")

func gitignoreSymphonycmsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSymphonycmsGitignore,
		"gitignore/SymphonyCMS.gitignore",
	)
}

func gitignoreSymphonycmsGitignore() (*asset, error) {
	bytes, err := gitignoreSymphonycmsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SymphonyCMS.gitignore", size: 90, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreTexGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x55\x5b\x8f\xdd\x36\x0e\x7e\xd7\xaf\x20\x72\x80\xc5\x8c\x01\x7b\x76\x17\xd8\x87\xcd\x4b\xd1\x5c\x1a\x14\x2d\x90\x20\x1d\x20\x45\xd3\x22\xa0\x25\xda\x56\x8f\x6e\x90\xe4\x39\x76\x1e\xfa\xdb\x0b\x52\x67\xce\xcc\x24\xe9\x0b\xc5\x8b\x44\x89\xe4\x27\xf2\x70\x80\x97\x31\x13\x38\xac\xb4\xdd\x24\x33\x09\x03\xb8\x6e\xd6\x59\xcc\x3b\x4c\xd6\x51\x79\xae\xba\x01\xd7\x4d\x75\x83\x8b\x93\xd0\x59\x68\x55\xdd\x30\xb9\xa2\xba\x21\xae\xcc\xd7\xa8\x59\xe3\x45\x2f\x56\x3d\x0a\xf9\xaf\x52\x87\x03\xfc\x18\x2a\x65\x4f\xc6\x62\x25\x30\x51\xaf\x9e\x42\x15\xe7\xe6\xce\xaa\xae\xd7\x31\xdc\x51\xae\x64\xfa\x1a\x87\x4e\x1d\xa0\x2e\x54\x08\xf2\xea\xa8\x80\xb7\xf3\x52\x81\x36\xed\x56\x43\x60\x3d\xce\xd4\x1e\x07\x53\xcc\x30\xd9\x79\xcd\x54\x80\xaa\x1e\xd4\x01\xba\x21\x15\x59\xe8\xbc\x26\x33\xc9\x13\xde\x50\xa0\x8c\x95\x0c\xd8\x09\xc8\xa7\xba\x43\xa9\xd9\x86\x19\x6c\x81\xd9\xde\x51\x00\xac\xf0\xec\x9d\x23\x2c\x04\x75\x4f\x04\x18\x62\x5d\x28\xcb\x65\x10\xd0\x93\x5c\x18\xd7\x9a\xd6\xfa\xfc\x99\xba\xb8\x7e\x61\x47\x67\xe3\x9c\x31\x2d\xfb\x97\x09\x84\xab\xd1\x8e\x9c\xe1\xd1\x8e\x2d\xd5\xa3\x1d\x29\x5f\x73\xec\xe3\xe8\x98\x6a\x4e\xec\xe8\x66\xd5\xf5\xa3\xdb\x5a\xba\x85\x1b\x2d\xe7\x30\xaf\x61\xd8\xbc\x6b\x37\xad\xd6\x19\xa8\x31\xba\x6f\x15\x6a\x32\xe3\x27\xb9\xc3\x1f\x55\x37\x94\x3d\xe8\x4a\xdb\x03\x77\x35\xae\x65\xbf\x7e\x90\x87\xf9\xf3\x13\xe1\x62\x4f\x66\x62\xad\xdc\xf8\xfd\xe5\x1a\x0c\x06\xec\xe3\x3a\x9e\x6b\x90\xa3\x87\x96\xa7\x84\xfa\x88\x33\xbf\xe5\x00\xe8\xe6\x98\x6d\x5d\x3c\x63\x04\x5d\x43\x0d\x2a\xb6\xe8\x85\x7c\x89\x0a\x75\xe9\x3b\x89\x91\x95\xbe\xd4\xc5\x33\x90\x16\xcf\xf2\x48\xe8\x29\xab\x6e\x08\x78\xc7\x2f\xca\xc4\x4f\x0d\xbc\xe3\x2e\xcb\x09\xbd\x60\x98\x89\xbd\x97\xa8\x45\x91\x72\xac\xa4\x05\x7b\xa9\xb2\x86\x5c\xc1\x5c\xad\x76\x04\x57\xf7\xa0\xd3\x0e\x4b\x81\x38\xc1\x6b\x57\xe8\xce\x52\x86\x3f\xe3\x9a\x03\xba\x22\x99\x49\x4e\x0e\x06\x13\x62\x15\xe7\x14\xc4\xd5\x64\x37\x4f\x12\xc3\x26\x22\xed\xc1\x4f\x37\xb2\x24\xd5\x0d\x9e\x4b\x28\x5c\xfd\xf8\x9f\xfe\xff\x7f\x5c\x98\x8f\xff\x3e\x4b\x13\x87\x75\x95\xaf\xaf\xe8\xda\x91\xf1\xa8\x6f\x2e\x42\xc2\x2c\x17\x19\xd5\x0d\xdf\xb5\xe5\xde\xc9\x13\x1f\x0f\xc2\x13\xcd\xfb\x27\xa6\xf7\x5f\x6f\x64\x15\x39\x32\x85\xf4\xbd\xdf\xc7\xe2\x97\xe6\x7b\xe7\x5f\xe9\xbe\xb9\xf1\x1f\x77\x9f\x8f\xa8\x03\xcc\x2e\x96\x82\xd9\x4a\x3e\x51\x07\xa1\x1c\xf2\x2c\xb0\x98\x5d\x14\x5a\x1a\x35\x34\x15\x39\x15\xd6\xe4\x62\x15\x04\xf7\x0f\x42\xdf\x89\x31\x13\xc3\x2b\x36\x7c\xcf\xad\x43\xcd\x2c\xa9\x03\x2c\x7b\xa2\x9c\x49\x7e\x55\xe6\x1f\x0a\xc7\x60\x6b\x6e\x6d\x46\xc7\x6c\x30\x68\x1a\x78\xf3\x01\x6e\xdf\xbe\x7a\x0b\x2f\xa3\x67\x68\x70\xd3\x81\x40\x5b\x05\x67\x03\x71\x9b\xd8\xe3\x0a\x27\x64\x4b\x84\x23\x51\x62\x45\x86\x6a\x8f\x9f\x41\x7e\xbb\xd5\xa5\xfd\x02\xae\xb0\x3d\x7e\x56\x5d\xcf\xcb\x2b\xab\xab\x8d\x01\xf3\xce\x97\x3b\x5b\xaa\x0d\x73\x11\xf4\x08\xbc\x3c\x1e\xc9\x1a\x7e\xf2\x99\x4a\x1e\xac\x54\xde\x16\xc1\x9b\xb7\xc1\xb6\x9e\xea\x51\xb0\xe5\x1a\x65\x74\xfb\xaa\x25\xb9\x1d\x03\xd6\x4d\x8f\xf8\xfa\xc0\x5f\xf6\x34\x67\x95\x8c\xfa\xd4\x56\x36\xa7\x7d\x16\x43\xcc\x74\xca\xb6\x21\xdd\x9f\x58\x15\xa2\xa7\xa0\xb9\x2f\x05\x17\x59\x91\x90\x9f\xc8\x94\x05\x33\x25\x7d\xff\x35\x44\x60\x6d\xc1\x99\xce\x9d\xa6\x71\xb2\x3e\x12\xd3\xfe\xd8\xa6\xbd\x91\x53\x3a\x9f\x38\x79\xaa\x1b\x4e\x59\x82\x2e\xbb\x6f\x3b\xdb\x4c\x69\xa2\xd0\x9e\xab\x5f\xfa\x29\xe6\xbe\xe3\xca\xdd\x9c\x1f\xa3\x5b\xe5\x54\x37\xac\x09\x85\x4a\x6f\x48\x7b\x5d\x62\x68\x4f\x4a\x7b\xdd\x74\x34\xa4\x2e\xca\x5e\x4a\xd6\x77\xe2\xa4\x2e\x9e\xdb\x69\xab\x0e\xb1\xe6\xd6\x1e\x7f\x83\x7f\xc1\xbb\x37\x3f\xf0\x78\x4a\x75\xe1\xdc\x98\xff\xb5\x41\xe8\xa2\x3e\xca\xb1\x68\xe2\x7d\x1e\xaa\x91\x44\x11\x96\xbd\x67\xbd\xb8\x92\x10\x37\x1b\x0c\x07\xb4\x19\x41\xc2\xb6\x27\xab\x21\x65\xd2\xd1\x27\xeb\xc8\x80\xc7\x9a\xad\x16\x2f\xdb\xae\xcf\xad\x67\x72\x11\x65\xa6\x56\x99\xa6\x93\x40\xf8\x67\xee\xeb\x16\x83\xba\xfd\xe5\xc3\x3d\x7f\x4b\x3e\x75\xd2\xa5\x5f\x1b\x5b\x63\x96\xc6\xfb\xc1\x86\xd7\x86\x0f\x8e\x28\x53\x00\xef\x24\x28\xda\x12\x1a\xc5\xb9\x4b\x68\xaa\x4f\xac\xfc\xa9\x65\x7f\x44\x7d\x5c\x9b\xe2\x85\x1d\x6f\xe9\x57\xd5\xfd\xf5\x00\x1e\x5c\x6b\x84\x29\x3a\x43\x19\x4e\x0b\x05\x58\x0b\x0f\x4d\xf2\xa8\x8b\xcc\x04\x5c\x65\xcc\xdc\xf0\xc6\x1b\x39\x42\x5b\xa2\x8d\x67\xe5\x09\xb3\x81\x4c\x13\x65\x0a\x9a\x0a\x9c\x6c\x5d\xe0\xf7\x19\x79\x5a\x54\xe4\x2f\xd1\xf3\x22\x7f\xf1\xef\x00\x00\x00\xff\xff\x28\x44\xc6\x15\x90\x08\x00\x00")

func gitignoreTexGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTexGitignore,
		"gitignore/TeX.gitignore",
	)
}

func gitignoreTexGitignore() (*asset, error) {
	bytes, err := gitignoreTexGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TeX.gitignore", size: 2192, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreTerraformGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\x51\x48\xcb\xcc\x49\x2d\xe6\xd2\xd2\x2b\x49\x2b\x2e\x49\x2c\x49\x45\xb0\xf4\x92\x12\x93\xb3\x4b\x0b\xb8\xb8\x94\x15\x7c\xf3\x53\x4a\x73\x52\x15\x52\x32\x8b\x52\x93\x4b\xf2\x8b\x2a\xb9\xf4\x4a\x52\x8b\x8a\x12\xd3\xf2\x8b\x72\xf5\xb9\x00\x01\x00\x00\xff\xff\x24\xad\x82\xd6\x4c\x00\x00\x00")

func gitignoreTerraformGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTerraformGitignore,
		"gitignore/Terraform.gitignore",
	)
}

func gitignoreTerraformGitignore() (*asset, error) {
	bytes, err := gitignoreTerraformGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Terraform.gitignore", size: 76, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreTextpatternGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8a\xb1\x0a\xc2\x40\x10\x44\xfb\xfd\x14\x8b\xdb\x6f\x10\x0c\x68\x21\x42\xb4\xb1\x3c\xd7\x81\x3b\x30\x61\xb9\x9d\x48\x3e\x5f\xd4\x4a\xb9\x66\x18\xde\x7b\xa9\x30\x9b\x21\x42\x2c\x22\x79\x71\x69\x6e\x2a\x51\x89\xd0\xf7\x6e\x34\xdf\xa7\x3a\xff\x22\x6f\xf5\x99\x89\x3f\xb8\xdc\x1e\xd5\xba\xf9\xd7\x04\xb8\x78\xd7\xb0\x60\x82\x0a\xb1\xd2\x33\x89\x36\xab\xec\x0f\xe7\xcb\x69\xbc\x26\xae\x94\x71\xd8\xee\x8e\xc3\xe7\xbe\x02\x00\x00\xff\xff\x32\x3a\x10\xce\xb1\x00\x00\x00")

func gitignoreTextpatternGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTextpatternGitignore,
		"gitignore/Textpattern.gitignore",
	)
}

func gitignoreTextpatternGitignore() (*asset, error) {
	bytes, err := gitignoreTextpatternGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Textpattern.gitignore", size: 177, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreTurbogears2Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\xb1\x8a\xc3\x30\x10\x04\xd0\x7e\xbf\x62\xe1\x3a\x83\xe5\x9f\xb8\xe6\xba\x6b\xae\x3a\x52\xac\xa5\xb5\x10\x51\xb4\x42\x1a\x1b\xfb\xef\x83\x08\x29\xd2\x2c\x3b\x33\x6f\x72\xf5\xfa\xf7\x76\x23\xfa\xe2\x6f\xdd\x64\xcf\xe0\xa0\x87\x66\xab\x0f\x2d\xe0\x20\x90\x55\xba\x52\xd0\x63\xfc\x2e\xac\x1f\x54\x20\x1c\x52\x53\x0f\x6b\x17\x8d\xb8\x4c\x03\xfc\x8a\xbf\x4b\xd4\x4e\x93\xd3\x18\x5f\x77\x4e\x65\x33\x0a\xa9\x83\xd6\x3d\xe5\x30\xdc\x4f\xe9\x90\x9c\xb5\x71\xb6\xd8\xa9\xa6\x3a\x67\x8b\x0e\x27\xc6\xfa\x57\x12\x18\xda\xc1\x0b\x7b\x3b\xb4\x49\x54\x6e\x5a\xad\xa1\x93\x7b\x37\xe4\x60\x27\x3d\x03\x00\x00\xff\xff\x8c\xf3\xba\xc1\xca\x00\x00\x00")

func gitignoreTurbogears2GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTurbogears2Gitignore,
		"gitignore/TurboGears2.gitignore",
	)
}

func gitignoreTurbogears2Gitignore() (*asset, error) {
	bytes, err := gitignoreTurbogears2GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TurboGears2.gitignore", size: 202, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreTypo3Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x3f\x4f\xc3\x30\x10\xc5\xf7\x7c\x8a\x93\xba\x55\x10\x4b\x54\x62\xaf\x0a\x12\x9d\x60\x60\x61\x8a\x2c\xdf\x39\xb1\xb0\xef\x2c\xff\x29\xe4\xdb\x23\xa7\x85\xa6\x62\x4a\xf4\x7b\xef\x9e\xcf\xcf\x9b\x0d\xbc\x7f\xbc\xbd\xee\xe0\xf4\xd8\x3f\x74\x1b\x38\x8e\x2c\x89\x20\xd3\x89\x92\xf6\x50\xa3\x17\x8d\xa0\x19\xc1\x3a\x4f\x80\x2e\x91\x29\x92\x1c\xe5\xbe\x53\x0d\x69\x0c\x8e\x55\xcd\x94\x86\xb3\x59\xad\xf9\x50\x28\xc4\xe1\x16\xc5\x24\x86\x72\x26\x6c\xfc\x3c\x93\xd5\xf5\x68\xa3\xcd\x44\x9d\x2a\x73\x94\x9d\x11\xb6\x6a\x89\x38\xec\x0f\x2f\xcf\x4f\xdb\x7f\xdc\x3a\xf2\x78\x64\x2b\x7d\x9c\xe2\x5a\x45\x8a\x89\x8c\x2e\x4e\x78\xd8\xf6\x5e\xc6\xb5\xb8\x47\x74\x4d\xd1\xfe\x20\x6c\xdd\x58\xd3\x62\x5c\x32\xae\x1d\xcc\xb9\x50\x00\x2b\x1e\x29\xe5\x3b\x98\xa5\x42\x9e\xa4\x7a\x84\x49\x9f\x08\xca\x44\x01\xf2\x1c\xbc\xe3\x4f\xc2\xbe\x0d\x5a\x60\x29\x60\x24\x04\xe2\x02\x52\x4b\x33\xb5\x04\x2f\x5f\x8e\x47\x20\x2e\x97\xea\x96\x5d\x2e\x9f\x21\x27\xb3\xfa\xbd\xdf\x76\xaa\x9f\x8a\x36\xad\xa5\x4e\x39\x46\xfa\xbe\xdd\xac\xdd\xfc\xef\x29\xe6\xdf\xb4\x46\x55\xf7\x13\x00\x00\xff\xff\x19\x05\x56\xcc\xd1\x01\x00\x00")

func gitignoreTypo3GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTypo3Gitignore,
		"gitignore/Typo3.gitignore",
	)
}

func gitignoreTypo3Gitignore() (*asset, error) {
	bytes, err := gitignoreTypo3GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Typo3.gitignore", size: 465, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreUmbracoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6f\xda\x40\x10\x85\xef\xfe\x15\xaf\xf2\xa1\x2d\x07\x7c\xef\xad\xd4\xb4\xaa\x14\x08\x4a\x42\x2e\x08\x45\xc3\x7a\x6c\x56\x5e\xef\x58\xbb\xb3\x44\xfc\xfb\x28\x36\x0a\x38\x52\xae\x6f\xde\x9b\xf7\xf4\xe5\x58\x8b\xf2\x2f\x3c\xdb\x98\xc8\x3d\x6a\xaa\xac\xa0\xb1\x6a\x1b\x2f\x81\x11\x92\xe3\x88\x8e\xce\x20\x17\x05\x07\x46\x60\xc7\x27\xf2\x9a\x65\x39\xb6\xdd\x21\x90\x91\x2c\xc7\xff\xd1\x9e\xbc\xed\x7a\x09\x4a\x5e\x51\x8b\xab\x38\x44\x34\xec\x39\x90\x72\x85\xc3\xf9\x23\x31\x9b\x15\xbf\xfb\xfe\xa5\x24\xa5\xe2\x4e\x9a\x58\x4c\x94\xdd\xa6\xdf\x07\x3e\x59\x7e\x9d\xea\x4f\xcb\xd5\x66\xaa\xac\xd3\x3f\xd6\x05\x99\x36\xf5\x45\x76\xdd\x71\xa9\x81\x11\xaf\xec\x15\x86\xcc\x91\x51\x5b\xc7\x93\x74\x1a\x6d\x73\x23\xbe\xb6\xcd\x7b\xbe\x14\xff\x5d\x61\xa7\x5f\x7a\x32\x2d\x35\x1c\xf1\xe3\x96\xd2\xfc\x4a\xa9\xb3\x51\xa9\xe5\x08\x3d\xda\x88\x5a\x02\x08\xc3\xb2\x6b\x74\xa4\xf1\x33\xcb\xb1\xa2\x96\x11\x53\x60\xa8\xc0\x7a\xe3\x52\xc5\xa8\x58\xc9\xba\x88\x3a\x48\x87\x2f\x5a\x16\xcb\xbf\xf7\x0f\xcb\xa1\x23\xfb\xf6\x19\xd7\xa5\xa7\x18\x2e\xbb\x6d\xda\x8f\xdb\x8b\x5d\x59\xed\xf9\xc4\x4e\x7a\x0e\xb7\xc6\x01\x56\x47\x0d\x6f\x82\x18\x8e\x51\x02\x4a\x1b\xdb\x3f\x03\xa8\x09\xa4\x81\x5d\x91\xbd\x05\x00\x00\xff\xff\x2e\xc0\xf0\x8e\x29\x02\x00\x00")

func gitignoreUmbracoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreUmbracoGitignore,
		"gitignore/Umbraco.gitignore",
	)
}

func gitignoreUmbracoGitignore() (*asset, error) {
	bytes, err := gitignoreUmbracoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Umbraco.gitignore", size: 553, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreUnityGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xcd\x6e\x2a\x31\x0c\x85\xf7\x7e\x0a\x4b\x77\x37\x8b\xe4\xfe\xe8\x3e\x00\x3f\x6d\x37\xad\x90\x0a\x65\x83\x66\x91\x99\x18\x08\x84\x78\x14\x3b\x88\x79\xfb\x2a\x85\x52\x36\xf1\xd1\xc9\x39\xd1\x17\xdb\xcd\x6b\x6c\x43\x97\x5d\x1e\x2d\xd8\xcd\x4a\x5b\x3a\x0d\x55\x2d\xb8\xed\x0e\x55\x4c\xbb\xb6\x84\xe8\x1f\xa4\x58\xb0\x13\x11\x52\xb9\x8e\xa5\x72\xa6\x15\x73\x94\x06\xe0\x17\xae\x83\x14\x17\x71\xa9\xc5\x07\xc6\xbf\xbf\xff\xfc\xc7\xde\xf5\x7b\x42\x1f\x32\xf5\xca\x79\x04\x6b\xce\x62\x6b\x76\x52\x94\x77\x94\x28\x3b\x25\x8f\xeb\xa5\x7d\x9b\xdb\x19\x27\x29\x91\x51\x38\x16\x0d\x9c\xd0\x25\x8f\x43\xe6\x03\xf5\x8a\xdb\x10\x49\xe0\xe9\x32\x70\x56\xf2\x8b\x8a\x68\xfa\x6b\xc1\x42\x63\x7a\xa9\x41\x68\x4c\x49\x41\xc7\x9b\x96\x98\xea\x59\x18\x1a\xa3\xa7\xa1\xde\x0a\xe5\xdb\x18\x32\x6d\x05\x1a\x33\x04\xdf\x41\x63\x3a\xe6\xef\xd6\xd9\x57\xdb\x77\x95\xf3\xa3\x3e\xf7\x6f\x8e\x3f\xac\x27\x52\x77\xa3\xb9\x96\x4d\x75\x1e\xb3\x2f\xf7\xec\x73\x88\x84\x8b\x84\xb3\xec\x64\x8f\xef\x54\xe1\x05\x64\x94\x90\xb6\x6c\xf4\xa2\xb5\x36\xfd\x5a\x2d\x34\xc6\x0d\xc7\xfb\x07\x5c\x7f\x74\x3b\x82\xcf\x00\x00\x00\xff\xff\xd5\xdf\x5f\x46\xa6\x01\x00\x00")

func gitignoreUnityGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreUnityGitignore,
		"gitignore/Unity.gitignore",
	)
}

func gitignoreUnityGitignore() (*asset, error) {
	bytes, err := gitignoreUnityGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Unity.gitignore", size: 422, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreUnrealengineGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xc1\x6e\x14\x31\x0c\xbd\xe7\x2b\x8c\x7a\x40\xca\x61\x16\x90\xf8\x80\xd2\x6d\x05\x27\x90\x16\xf5\x8a\x3c\x89\x77\xd6\x25\x93\x44\x89\xb3\xec\xfe\x3d\x72\x66\x76\x4b\x5b\x0e\xe3\x4c\x9c\xf7\x9e\xed\x97\xdc\xc0\x23\xd7\x86\x01\x76\xd2\x3c\x27\xf8\xf4\xe1\xe3\x67\x68\x95\x0a\xd4\x4c\x8e\xf7\xec\x60\xcf\x81\xaa\x19\x8e\x75\x63\xcc\x7f\xe1\x1e\x05\x47\xac\xd4\x91\xc6\x0e\x8f\x77\x83\x1f\x15\x7b\x97\xe6\xcc\x81\x3c\x7c\x1f\x9f\xc8\xc9\xaa\x64\x87\x1a\x92\xb1\x43\x0f\xfd\x1b\x9f\x14\xfd\xa3\x90\xbb\x10\xbe\x12\x7a\x2a\x8a\x9d\xdc\xc1\xd8\x21\xbb\xc3\x0b\xc1\xed\x39\xe2\xcc\x0e\x02\x8f\x05\x0b\x2f\xaa\xaa\xe5\xcf\x81\x47\x5d\x43\x50\xc2\x43\x2a\x52\x30\xc2\x9c\x7c\x0b\x74\x6d\x60\x4e\xfe\x85\xdc\x4e\x50\x5e\xa9\x05\xe4\x1e\x8d\x1d\xf4\x53\x55\x73\x03\xf7\x27\x72\x4d\x70\x5c\x64\xe8\xa4\xe3\xa6\x26\x0a\xca\xd9\xd8\x81\x33\x2a\xec\xe7\x81\x2a\x41\x2e\xe9\x79\x6c\x70\x18\x61\x24\x98\x28\x52\x41\x21\x0f\xe3\x19\xe4\x40\x40\x71\xe2\xa8\x3a\x27\x97\x3c\x29\xa7\xff\xff\x49\xe5\x77\xcd\xe8\xa8\xfb\x15\x35\xb6\x6e\x56\xa6\x58\xfd\x5e\xf7\x3d\x2e\x66\xf7\x55\x8f\x16\xe3\xff\xb5\xf2\xb6\x56\x92\x6a\x76\xa9\x15\x47\xb7\x45\x36\xd6\x6e\xec\x90\xe3\xf4\x3a\x25\x53\xef\xfd\x0b\x47\x2c\x67\x78\xe8\x56\xf5\x0d\x53\xdd\xd8\x7e\xd4\x38\xf8\x6a\xfa\xb2\x64\xb6\x29\xbe\x17\xe0\x29\xa6\x42\xc0\x2e\xc5\x75\x58\x8e\x0b\xd8\xbc\x5b\xc1\x5a\x80\x5d\xba\xa8\x48\x7f\x34\xb0\x4f\x05\x66\xcc\xd5\xd8\x5f\x3d\xbb\x45\xc1\xa1\xa1\x76\xbc\xdc\x4f\xdc\xf3\xd4\x0a\x0a\x5f\x95\xdf\xf8\x77\xef\x59\x52\x31\x3b\x3c\xd2\xda\xd4\xf5\x5a\x6b\x1f\x70\x25\x6a\xad\x67\xbf\x41\x92\x3e\x73\xf3\x2d\x0a\x95\x99\x3c\xa3\xd0\xca\x46\x77\x78\xc3\xe9\x35\x2e\x9c\x2d\x15\x3e\x92\xd7\x66\x3b\x78\x63\xcd\xdf\x00\x00\x00\xff\xff\x7c\x53\x6a\x33\x47\x03\x00\x00")

func gitignoreUnrealengineGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreUnrealengineGitignore,
		"gitignore/UnrealEngine.gitignore",
	)
}

func gitignoreUnrealengineGitignore() (*asset, error) {
	bytes, err := gitignoreUnrealengineGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/UnrealEngine.gitignore", size: 839, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreVvvvGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\x52\x56\xd0\x2b\x33\x29\x50\x48\x4a\x4c\xce\x2e\x2d\x50\x48\xcb\xcc\x49\x2d\xe6\xd2\xaa\xd3\xab\xc8\xcd\xe1\xe2\x52\x56\x70\xa9\xcc\x4b\xcc\xcd\x4c\x56\x28\xc8\x29\x4d\xcf\xcc\x2b\x56\xd0\x4b\xc9\xc9\xe1\x4a\xca\xcc\xd3\xe7\x02\x04\x00\x00\xff\xff\xcd\xef\xf8\xaa\x39\x00\x00\x00")

func gitignoreVvvvGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVvvvGitignore,
		"gitignore/VVVV.gitignore",
	)
}

func gitignoreVvvvGitignore() (*asset, error) {
	bytes, err := gitignoreVvvvGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VVVV.gitignore", size: 57, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreVisualstudioGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xdd\x6f\xdc\x36\x12\x7f\xe7\x5f\x31\xc5\x16\xd7\x44\x8d\xa9\xc6\x6d\x73\x77\xbd\x27\x7b\x9d\xb4\xe9\xd9\x8e\xcf\xbb\xfd\x00\x0c\x63\x41\x51\xb3\x12\x23\x8a\x24\x48\x6a\x3f\xfa\xd0\xbf\xfd\x30\xa4\xb4\x76\xec\xcd\xa1\x07\x18\xdc\x11\x39\x1c\x72\x66\x7e\xf3\x41\xcf\x66\xf0\xbe\x31\xd6\x23\xfc\xaa\xc2\x20\x34\x2c\xe2\x50\x2b\x0b\x11\x7b\x67\xbd\xf0\x7b\x58\x2b\x8d\xe1\x15\x54\x83\xd2\x35\x78\x0c\x83\x8e\xe1\x15\x08\x53\xb3\xd9\x2c\x2f\x42\x83\x06\xbd\x88\x58\x43\xb5\x07\x67\xdd\xa0\x85\x7f\x22\x4f\xd4\xf5\x89\x35\x81\xb3\xd9\x8c\xf6\xfd\x88\x11\xb4\x88\x18\x22\xac\xbd\xed\xa1\x8d\xd1\x85\x1f\xca\xb2\x51\xb1\x1d\x2a\x2e\x6d\x3f\x92\xf4\xa3\xd2\x05\xcb\x4a\xdb\xaa\xec\x45\x88\xe8\xcb\x2c\x3c\xcb\xe6\x07\x16\xc6\x66\xf0\x4b\x40\x7f\x12\x1c\x4a\xb5\x56\x32\xdf\x8f\x15\x3c\x0c\x96\x15\x7c\x08\xe8\xc7\x1f\x1b\x82\x14\xb2\x45\x5a\xd3\x86\xd7\x56\x86\x48\xf7\xf9\x8c\x08\x78\x71\x65\x8d\xbd\xc0\x0d\x6a\xeb\xca\xdf\x45\x2f\xbc\x32\xa3\x6e\x2f\x47\x91\xce\xe3\x3a\xed\x3f\x7f\x6c\x2a\x76\x77\x51\xdf\x63\x35\x34\xe5\x81\xba\x19\x2a\xad\x64\xc9\xee\x6e\xfd\x3d\x6a\x14\x01\x1f\xd3\xa1\x64\xbb\x37\xdf\x95\x6c\xf7\x8f\x37\x25\xab\x74\x5d\xb2\xbb\xf3\xea\x5e\x99\x92\xdd\x7d\xb0\xf7\xd5\xc7\x92\xdd\x5d\xea\x7b\xdb\x94\x74\xd4\xa7\x46\x3e\xfd\xe6\xf5\xf7\x90\xd4\x2a\xad\x8b\xca\x9a\x00\xb5\xf2\x28\xa3\xf5\x7b\xc6\x37\xa1\x24\xe5\x8c\xb4\x7d\x8f\x26\x82\x5a\xc3\xde\x0e\xd0\x8a\x0d\x42\x14\xa1\x0b\x10\x5b\x11\x41\x7a\x14\x11\x21\xb6\x08\xce\xdb\x8f\x28\xe3\x57\x01\xc8\x38\x07\x5b\x28\x03\xdb\xed\xd6\x5b\x1b\xd9\x6c\x24\xd2\x65\xae\x16\x4b\x72\x68\xf2\xea\xed\xa4\xfd\x32\xde\x63\x88\x49\x3d\x9a\x29\xb2\x3a\x64\xa1\xac\x06\x2f\x68\xeb\xf5\x2f\xd7\xef\x97\xac\xe0\x93\x5f\x45\x44\xbe\xeb\x35\x23\x81\x59\x54\xfa\x3c\x18\x77\x14\x0f\x76\x0d\xc2\xc0\xd9\xf2\x12\x6e\xf2\x5d\x1f\x8c\xbc\x78\x6c\x54\xfa\xaa\xb5\xae\x45\x14\x5c\x92\x18\x7e\xfd\x76\x09\x73\xc2\xcc\xa8\x24\xd7\x56\x76\xfc\x63\xb0\xe6\x30\xb3\xf6\xa2\x21\x4b\x3d\x5a\x12\x3e\xaa\xb5\x90\x31\x94\xac\x28\xca\x1b\x6f\x1d\xfa\xa8\x30\x94\x5a\x0c\x46\xb6\x0b\x8c\x51\x99\x26\x64\x66\x56\xac\x14\x97\xac\x58\xb9\x34\x2a\xde\xb2\x82\x2b\xdd\xb1\x82\xf7\x18\x05\x2b\xb8\xad\x3e\xb2\x82\x3b\x49\x0b\xae\xae\x68\x6c\x64\x1a\x6b\x56\x70\x1f\x1c\xc1\xb3\x22\xcc\x46\x5d\xa5\x51\xa5\x91\xf8\x63\xef\xf2\xb8\xa2\xfb\xb2\x82\x6b\xdb\xb0\x82\x6f\x82\x0b\x52\x26\x22\x10\xc1\x53\xe0\x52\x0c\x38\x95\x4e\x08\x1b\x99\x39\x69\x95\xcd\x60\xde\x0e\xf1\x0f\x27\x5a\x48\xce\xcb\x01\xb3\x9a\x26\x8b\x47\x20\x9b\x7f\xfd\x75\x06\xd7\xc8\xa4\x9c\x6c\x4b\x56\x70\xe1\x48\xba\x91\x24\xdc\x3a\x34\xf5\x44\x84\x7a\x4d\xc7\xa4\x31\x6d\xa4\x7d\xe4\xe4\x39\x4f\x3c\xbf\xce\xe9\x6f\xdc\xf2\x0c\xcc\xce\x5b\xe2\x27\xe5\x5d\xc0\x10\xb2\x6e\x79\xdc\x91\x5c\xe1\x68\xd3\xf2\xdd\x82\x70\x7f\x0a\x97\x56\x0a\x0d\xbf\x59\xdf\x05\x27\x24\xb2\x2f\xe3\x3a\xa1\xf2\xc7\x41\xd5\xc2\x48\x84\xb3\x21\xda\x5e\x50\x58\xc0\xd2\x5a\xdd\xa9\xc8\x0a\xde\xb8\x04\x36\x62\xbc\xc5\x45\x2b\xbc\x43\x0f\x2a\x80\xc8\x08\x91\xb6\x56\xa6\x49\xd9\x4b\x19\xb6\x3a\xb0\x14\xa4\x78\x82\xd7\xdd\x22\xdc\xe7\x39\x56\xf0\x0b\x1b\x0f\x10\x48\xc9\x86\xcd\xe0\xe7\x21\xc4\xb9\xad\xf1\xb3\x52\xf9\xc4\x91\xd4\x41\xd1\xcf\x55\xdc\x67\xee\x9c\x74\xa7\xd3\xa7\xb5\xe4\x94\x0b\x1b\xe7\x76\x33\x5d\x36\x1d\x90\xbe\x45\x83\x49\x3d\x56\xf0\x7a\x64\x79\x6e\x5b\x49\xec\x72\x62\x9f\x32\x55\xc1\xa7\xa9\x47\xe4\x18\x76\xd7\x73\x4f\x00\x67\xab\x91\x58\x15\x8c\x17\x32\x91\x84\x3c\x29\x74\x0a\x50\x93\x57\x97\xd8\xbb\x55\xba\xe6\x95\x6a\xda\xb8\xbf\xb2\x36\x90\xd0\xbe\xe7\x05\x23\x3f\x10\xd6\xf8\x35\xe6\xbc\xf1\x1b\x56\xb0\xb5\xbe\xab\xd0\xc8\x16\x5e\x04\x11\xc2\x4b\xc6\xe9\xe7\x24\x27\x33\x62\x7a\x6f\x42\x14\x5a\x87\x56\xa1\xae\xc1\x0e\xd1\x0d\x11\xd6\x56\xd7\xe8\xd9\xdd\x5b\xbc\xdf\x39\x8f\x21\x94\xd9\x34\x72\xcc\x06\xd9\x38\xb5\x95\x03\xc5\x71\xf6\xfd\x58\xac\xac\x9f\xec\xfa\xc0\x5e\x26\x7b\xb7\xa8\x5d\xf9\x78\xf6\x27\x9a\x28\xf8\x4f\xbb\xe5\xd1\xd9\xf9\x91\xd9\xb6\x95\x47\x67\xbb\xa3\xb3\xee\xd9\xec\x4f\xb1\xd7\xa7\xcf\x66\xdb\x98\x9d\x31\xd7\x4a\x76\x27\x1f\x08\xd4\x0f\xf9\xdd\x51\x55\x09\x6d\xb2\xc0\x4d\xa6\x93\x65\x3f\x24\x53\x11\x5c\x6f\xdc\x7d\x9e\x4f\xae\x2a\xb8\xf8\x63\xf0\x78\x33\x54\xf4\x35\x83\xe5\x87\x8b\x0f\x3f\xc0\x7c\x2c\x0e\x94\xfe\x0d\xee\x22\x68\x65\x70\x2a\x15\x5b\x41\x2b\x16\x64\x8b\xb2\x53\x86\xe6\x3c\x6c\xb1\x82\x1a\x9d\xb6\x7b\x08\x23\xf6\xd9\x0c\xaa\x21\x02\x65\xdb\x4a\x04\x42\x9a\x31\x28\x93\xf5\x43\xf4\xc4\x01\x2f\xb6\x2a\xb6\xe0\x6c\x44\x13\x95\xd0\xe0\x44\x08\x5b\xeb\xeb\xf0\x12\xb6\x4a\x6b\xa8\x10\x06\x83\x46\xfa\xbd\x8b\x48\xc9\xd0\xe5\x7b\x26\x82\x74\x48\x49\x2f\x01\x4c\x7a\x1b\xec\x3a\xc2\x19\xa9\x93\x54\x3e\x73\x0e\x46\xb6\xc3\x9d\xf8\x5f\x52\x8d\xcd\x3e\x55\xee\x7f\xcb\x7c\x95\xd4\x0c\x68\x82\x8a\x6a\x83\xa0\xcc\xda\xfa\x31\xc5\x48\x6b\xa2\x50\x06\x6b\x36\xa3\x82\x19\x5b\x0c\x08\x41\x7a\xe5\x62\x38\xaa\xe2\xe8\xb3\x45\x66\x49\x6e\xbc\x1e\xa8\x4f\xba\x11\xb2\x13\x4d\x6a\x63\xcc\xe0\xba\x86\x7c\x45\xc5\x79\x9c\x1e\x83\x00\xa4\x30\x24\x32\x77\x42\x35\x54\x28\xc5\x10\x90\x2a\xe4\x28\x80\x8a\x66\xa4\x8a\x57\x14\xe5\xb4\xb9\x2c\xd8\x0c\x70\x27\xd1\xc5\x9c\x6c\xca\x57\xb0\x6d\x95\x6c\x29\x72\x86\x80\x35\x88\x40\x15\xf6\x6a\x91\xeb\x6e\x14\xbe\xc1\xc8\xd9\x17\x8f\x65\xe4\x8d\x4f\x7b\x0b\x83\x12\x43\xa0\x0e\xb2\xb5\x5b\xa4\x4c\x95\x23\x4f\xeb\x3d\xa8\x78\x30\x81\xc7\x87\xee\x71\xdb\xa2\x01\x83\x58\x93\xd5\x3e\x39\xc2\xa3\xb3\x41\x45\xeb\x15\x06\x2e\xad\x59\xab\xe6\x60\x9f\xcd\xb7\x5f\x85\xa9\x55\x49\x85\x77\x6c\x53\x9c\xb7\xf5\x20\x31\x40\x4f\xed\x6d\xb2\x8b\xa8\x34\x1e\x7a\x42\x33\x90\x2a\xce\x5b\xf7\xf0\x95\xf5\x0b\xc7\x80\x95\x0d\x30\x46\x93\x0c\x3b\xaa\x00\x49\x73\x2e\x43\x8d\xeb\x63\x5b\xde\xf6\x83\xa6\x4c\xc3\x50\xae\x4b\xe6\x65\x2e\x48\xbf\x29\x53\xdb\x6d\x80\x05\x39\x03\x04\xe1\x6a\x74\xd0\x14\xcc\x0a\xc9\xe8\xf5\x78\xd3\x33\xe7\x26\x08\x94\xec\x7c\x30\xb5\xc6\xb3\x87\x36\x64\x5c\xe2\x49\xda\x59\x08\x56\xaa\x04\xc0\x14\xe3\x2b\xd7\x35\x04\x4a\x1e\x77\xf1\x48\x15\x78\x54\xcc\xa7\x56\x1e\x4d\x2a\x4d\xca\x40\x2e\xd9\x4f\x60\x45\x69\x64\x2e\xef\x53\xe7\x9c\x83\xbc\x43\x74\x10\xbd\x90\x1d\x41\xed\xb1\x06\x4f\x45\xb1\x2f\x1e\x36\x27\x43\x7c\x88\x2d\xfa\xc0\xe6\x5a\xa1\x89\xe7\xd4\xe1\xfe\xf9\x65\xc1\x8a\x3f\xa9\x74\x55\x7d\x9d\x4a\x58\x45\x8e\xe5\x41\xb6\xd8\x8b\x8d\xc2\x2d\x2b\xf8\xc7\x75\x4f\x69\x60\xbd\x7b\x48\x06\x87\xc4\x63\xbd\x46\x61\x08\x22\x35\xe1\x8a\xcb\xe4\xca\x85\xa2\x54\x49\xa7\x21\x08\x8f\xd0\x0f\x3a\x2a\xa7\x31\x55\x9d\xb5\xb6\xdb\xf0\x0a\x86\x03\x76\x1f\x72\x43\xb4\xa3\xde\x50\xd9\x2d\xfa\x95\xb4\xbd\xb3\x06\x4d\x24\x7b\xbd\xf8\x2b\x6f\x16\x37\x68\x5d\xbe\xfe\xfe\xf4\x9f\x33\x15\xc2\x80\xe3\x11\x27\xaf\xbf\xf9\xee\xdb\xbf\x9f\xbe\x39\x3d\x7d\xc9\x66\x4f\x45\x27\xd3\xdc\xbe\x3f\x2b\x17\x4a\x6f\xd0\x6b\x2a\xa0\x13\xbc\x03\xfb\x71\x0a\x96\x15\x95\xfc\xc4\x7b\x2e\x64\x37\x38\xf8\x1b\x50\x90\xf8\xb1\x85\xcb\xcf\x2a\x69\xcd\x86\x1a\x54\x6a\x36\x0c\x58\x5d\x4f\x82\x12\x13\x9b\x91\x86\x02\x0c\x6e\xf1\xe9\x7b\x6d\x83\x3e\x10\x8a\x26\xe9\x59\x28\x19\xcf\xd8\x38\xc6\xe8\x2b\x82\xc0\x98\x66\xb6\x98\x1f\x12\x8d\x8a\xf0\xaf\x93\x97\x6c\xf5\x8b\x6b\xbc\xa8\xf1\x36\xdd\x69\xf5\x8e\xb6\x97\x2c\x0b\x2b\x4a\x36\xae\x5e\xda\xa6\xe0\xbf\x5f\x5d\x7e\xf2\xdd\xc6\x3e\x39\xed\x3f\x97\xb0\x40\x4f\x89\x63\x8a\xd8\x3e\xb5\x92\x3a\x8d\xa6\x5e\xe7\xe7\x40\x50\x06\x43\x80\xf7\x26\xa2\xd6\xaa\x41\x72\xf5\xc1\x5c\x05\xf7\xb5\xe6\x54\x88\x28\x5a\x55\xcf\xb5\xd8\xdb\x54\x0d\x2b\xd5\xaf\x0a\x7e\x00\xce\x27\xd1\xfb\x4e\x74\x18\x58\x1a\xcf\x42\xc0\xbe\xd2\xd4\xe2\xa7\x66\xb2\xb5\x21\x5e\x58\x09\x4e\x0f\x8d\x32\x53\x25\x80\xb1\xb3\x9d\x96\xa7\xc7\xca\xb5\xad\x91\x7f\x0c\xa9\x21\xa3\x44\xfd\xc4\xca\x8c\x9b\xb8\x09\x2b\x61\x84\xde\x07\x15\xe8\x9e\xcc\xd8\x1a\x57\xbd\xad\x07\x3d\x1e\xb9\xdc\x3b\xcc\x75\x03\x36\xaf\xa1\x46\xa9\x85\xcf\x25\x26\x9b\x25\xee\x1d\x69\x70\xe4\x39\xf8\x66\xec\x1f\x73\xbb\xef\x74\x73\x8c\x65\x3b\x35\xcc\x30\x3d\x19\x47\x5d\xac\x3b\x92\x32\xde\x80\x18\xa2\x3d\x79\x94\xb2\x0f\xdb\x69\x1b\xbc\x18\xcb\x5e\x18\xab\x48\x86\xcd\x96\x02\x8f\xfa\x7c\xc0\x28\x39\xbd\x97\x37\xd5\xf6\xb9\xf0\x4b\x82\xfa\x62\xab\xa2\x6c\xc7\x9b\xdb\xb1\x77\x29\xa8\xd1\x5a\x5e\x5d\xe6\x54\x51\x1e\x82\xe0\x90\x07\x33\xcb\x05\x86\x2e\x5a\xf7\x7f\x71\x5d\xd9\x1a\xf5\x95\x30\x6a\x4d\x2d\x69\x6a\x31\x88\x29\x23\xef\xb3\x32\xc6\xe5\xe7\x9b\x57\x37\x9b\xb8\x7a\xbb\x8b\xd4\x13\x58\x93\x70\x75\x23\x3a\x8c\xd4\x22\xa1\xa9\xd1\xc8\x3d\xf4\xc2\x88\x06\x3d\xe3\x8e\x56\xca\x34\x72\xdc\x21\x4b\xd4\xc9\x5a\x4d\xae\x7f\x77\xf6\xef\xb7\x70\x02\xef\x66\x70\x25\x3a\x64\x7c\x2d\xba\x1c\xf2\x3f\x63\x3c\xf7\xc9\xcc\xb7\x8a\x1a\x60\xae\x6a\x14\xe5\xf8\xbf\x0c\x35\x36\x89\xb6\xc6\xdb\x21\xb4\x8c\x4b\x9f\x9b\xc2\x7d\x6c\xc7\xb7\xcf\x11\x2c\xc2\x8b\x9b\xe5\xaf\x8b\x97\x6c\xb5\x72\xfb\x94\xae\x57\x2b\x12\xe8\xf6\xf9\x91\x28\x3a\x84\x93\xe7\xff\x3c\xa0\x84\x40\x11\xd8\x80\x8a\x29\x9d\x58\x1d\xca\x82\x9a\x8a\x2f\x32\x3d\x55\xf0\xa9\x68\xa7\x27\x8e\x46\xaf\xba\xaf\x42\x7a\x1a\x5d\x59\xd9\x41\x5e\x1c\x1e\xe1\x9a\xf2\x7c\xff\xb0\xe7\x5c\xfd\xb1\x14\xba\x7b\x02\x0b\x5e\x45\x47\x29\x9e\x88\x3e\x13\xb6\xde\x65\x62\x17\xa8\x30\xb3\xff\x06\x00\x00\xff\xff\xe2\x68\xfd\xde\xe0\x12\x00\x00")

func gitignoreVisualstudioGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVisualstudioGitignore,
		"gitignore/VisualStudio.gitignore",
	)
}

func gitignoreVisualstudioGitignore() (*asset, error) {
	bytes, err := gitignoreVisualstudioGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VisualStudio.gitignore", size: 4832, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreWafGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x6a\xc3\x30\x10\x80\xe1\x5d\x4f\x71\xe0\xa5\x35\xc8\x1a\xba\x79\x2e\xa5\x43\xd7\xe2\xd1\xa8\xd2\x09\x5d\xad\xe8\x8c\x74\x46\xf1\xdb\x87\xd8\x21\x64\xfb\x97\x0f\xfe\x0e\xbe\xb8\xc0\x5a\xf8\x1f\x9d\x54\x90\x68\x05\xb6\x8a\x20\x11\x61\xb2\x01\xfe\x36\x4a\x1e\xea\x5e\x05\x2f\x23\x44\x91\xb5\x8e\xc6\x34\x1b\x06\x62\xa3\x3a\xf8\x64\xd1\x91\xbc\xc7\x0c\x9c\xe1\x37\xd3\x55\x27\x5a\xf0\x21\xaa\x1a\x9a\x0d\xba\xd7\xbd\x39\xea\xe3\xcc\x0e\xbe\x4f\xe2\xa9\xa0\x13\x2e\xfb\x1d\x4f\x94\x3d\xb7\x0a\x6f\x99\xc1\xb3\xbc\xab\x27\x7d\x95\x3f\xec\x96\x40\x09\xd5\x90\xd8\x2d\xba\xd9\x30\xf7\xf3\x71\xa9\x6e\x01\x00\x00\xff\xff\x82\xaa\x54\x32\xcc\x00\x00\x00")

func gitignoreWafGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWafGitignore,
		"gitignore/Waf.gitignore",
	)
}

func gitignoreWafGitignore() (*asset, error) {
	bytes, err := gitignoreWafGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Waf.gitignore", size: 204, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreWordpressGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\xd1\x0e\xc2\x20\x0c\x05\xd0\x77\x3e\xc5\x64\xe5\x9b\xba\x52\x81\xd8\x41\xb3\x76\xba\xf8\xf5\x66\x8b\x2f\xcc\xf8\xc6\x3d\x37\xdc\xf4\x06\xd2\x73\x78\xe9\x44\xbd\xdd\x6b\x06\x2d\xfa\x4d\xce\xcd\x23\xa6\x27\x36\xe2\x34\x11\x52\xe1\x6b\x3b\x23\x3d\x36\x9d\xd2\x1c\x7f\xd5\x46\x93\x9e\x0d\x52\x5d\x07\x3d\x47\x07\xd9\x34\xaf\x98\xae\x26\x1d\xd3\xb8\x77\x3c\x8f\xcf\x7f\xce\x56\xd9\x72\x6d\x16\x0b\x8b\xf4\xb3\x0c\x11\x8a\x23\x11\x9b\x85\x28\x95\xb8\x19\x83\xef\x1e\xe2\xca\x98\x16\x86\xe2\x8b\x84\x68\xd5\x79\x41\x85\xfd\x12\x20\xbf\x43\xf8\x04\x00\x00\xff\xff\xa9\xf5\x68\xc6\x2c\x01\x00\x00")

func gitignoreWordpressGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWordpressGitignore,
		"gitignore/WordPress.gitignore",
	)
}

func gitignoreWordpressGitignore() (*asset, error) {
	bytes, err := gitignoreWordpressGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/WordPress.gitignore", size: 300, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreXojoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xc8\x31\x0a\x02\x41\x0c\x85\xe1\x3e\xa7\x08\xd8\xe8\x14\xf1\x0c\x8a\x76\x5b\xad\x8d\x85\x20\x89\x13\x25\xcb\x68\x96\xcd\x0c\xac\xb7\x17\x41\xb1\xb2\x7a\xdf\xfb\x17\x78\xf4\xc1\x71\x79\xf5\xe9\xae\x53\x79\x62\xbf\xdf\x74\xc2\x61\x17\xe4\x47\xc6\x5e\xb9\xe0\xa1\xb6\x6c\xbe\x02\xd8\x36\x2b\x39\x12\x24\xca\x2a\xed\xf6\x5d\xe2\x71\x84\xdd\x5b\x89\x74\xd6\x0f\xd7\xff\xca\x09\x3b\x93\x80\x44\x93\x34\x8b\xca\x55\x21\xd1\xec\x83\x9f\x7f\xd7\x25\xbc\x68\x55\x78\x05\x00\x00\xff\xff\x63\x05\x7c\x8e\xa0\x00\x00\x00")

func gitignoreXojoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreXojoGitignore,
		"gitignore/Xojo.gitignore",
	)
}

func gitignoreXojoGitignore() (*asset, error) {
	bytes, err := gitignoreXojoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Xojo.gitignore", size: 160, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreYeomanGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x80\x30\x0c\x04\xd0\xff\x1b\xc5\x0f\x33\x52\xa1\xe6\x90\x42\x9a\x13\xd3\xe2\xfa\xbe\x94\xb3\x4d\xf9\x0e\x96\xa1\xeb\xe3\xdb\x2e\xcd\x47\xc9\x5c\x65\x38\xce\xd0\x0d\xf4\x3d\xc2\x0d\x3e\x6a\x19\xfe\x00\x00\x00\xff\xff\x31\x19\x01\x9c\x34\x00\x00\x00")

func gitignoreYeomanGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreYeomanGitignore,
		"gitignore/Yeoman.gitignore",
	)
}

func gitignoreYeomanGitignore() (*asset, error) {
	bytes, err := gitignoreYeomanGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Yeoman.gitignore", size: 52, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreYiiGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8b\xb1\x0e\xc3\x20\x0c\x05\x77\xff\x45\x57\x06\xfc\x4d\x2e\x3c\x51\x4b\x05\x2a\xfc\x9a\xfc\x7e\x14\x29\x5b\xb2\x9d\x4e\x77\x16\x01\x86\x26\x79\x5d\x94\x9b\xd3\xdb\x98\x0b\xf2\x5b\x93\x28\x44\xd5\xf5\x1f\xf4\x8e\x33\xbb\xcb\xc7\xa3\x1a\x4d\x53\xae\x6f\xe1\x07\x1d\xa1\xe5\x6b\x11\x5e\x74\x73\xec\xa1\x72\x04\x00\x00\xff\xff\x9c\xf5\x8e\xaa\x78\x00\x00\x00")

func gitignoreYiiGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreYiiGitignore,
		"gitignore/Yii.gitignore",
	)
}

func gitignoreYiiGitignore() (*asset, error) {
	bytes, err := gitignoreYiiGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Yii.gitignore", size: 120, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreZendframeworkGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x6b\xc4\x30\x0c\x85\x77\xfd\x0a\x43\xb6\x1b\x22\xda\x9f\xd0\x1e\x9d\x7a\xb4\x74\xec\x26\x6c\x5d\x62\xb0\x2d\x63\x29\x25\xf9\xf7\xc5\x3d\x67\xec\x22\xbd\xc7\xf7\x90\x78\x93\x7b\x95\x5c\x45\xb9\xb9\x7b\x4c\xac\xe0\x87\x9d\xeb\x4a\x0d\x7e\xb8\x04\x69\x08\x30\xb9\x77\xf1\x94\x9c\x97\x72\x8f\x4b\x8f\xf5\x8d\xb4\x99\x24\xa1\x80\x97\x39\x75\x3e\xd7\xb5\xf6\xf0\x4b\x2c\xd4\x0e\xb7\xb0\x19\xef\x36\x4e\x5f\xe6\x2c\x1d\x5e\xc9\x08\x02\x19\x61\x92\x45\xf1\x21\x3d\xf9\x95\x87\x56\x56\x8d\x52\x4e\x64\xb9\x22\x18\xf7\x09\xd3\x55\xbc\xb5\x58\xd8\x3d\x3f\xe0\xe9\x3f\xbe\x6e\x37\x09\x5b\x62\xfc\x6c\xb2\x1f\xf8\x1f\x1d\x7f\xfe\x1a\xf1\x42\xfe\x70\xdf\x6f\x4f\x10\x38\x8b\x22\xf0\x6e\x8d\x14\x83\xf8\x2d\x73\x31\xb2\x28\x05\x7e\x03\x00\x00\xff\xff\x5a\x59\x83\x4b\x23\x01\x00\x00")

func gitignoreZendframeworkGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreZendframeworkGitignore,
		"gitignore/ZendFramework.gitignore",
	)
}

func gitignoreZendframeworkGitignore() (*asset, error) {
	bytes, err := gitignoreZendframeworkGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ZendFramework.gitignore", size: 291, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreZephirGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x6e\xeb\x30\x0c\x85\x77\x3d\x05\x81\x6c\x41\x22\x2f\x79\x83\x0b\xdc\xad\xe8\xd2\xa9\x9b\x2c\x31\x31\x6b\x8a\x74\x45\x0a\x48\xdf\xbe\xf0\x0f\x32\x75\x11\xce\x77\xa4\x0f\x47\x27\xf8\x97\xf2\x84\x70\x27\x46\xbb\xc0\x03\x05\x5b\x72\x34\x18\x7f\xe0\x13\x97\x89\x5a\x88\x8e\x75\x19\x42\x64\x1a\x6d\x08\xe1\x04\xef\xe3\x17\x66\xff\x53\x61\x92\x19\x5b\x38\x47\xd6\xf5\x48\xe1\x1c\xb7\xa0\x1f\xab\xf8\x7f\x35\x5e\x42\x59\x85\xac\x72\xa7\x47\x6f\x08\x49\xca\xb1\x78\x09\x27\x10\x75\x68\xf8\xdd\xa9\x61\x81\xbb\x36\xc0\xa7\xa3\x18\xa9\x40\xd6\xba\x10\x27\x27\x95\x18\xf0\xe9\xc3\xd8\x89\xcb\xb0\xc5\xaa\xa5\x33\xda\x0e\x6f\x69\xc6\xf5\x93\xe7\x8d\xf6\xa5\x3d\xa7\x4c\x92\xb9\x17\x8c\xf5\x76\x14\xac\x39\xf1\x0b\xbb\x6b\xbd\xf9\x61\x92\x98\x27\xe6\xab\x4d\x1b\xb2\xd7\x44\x12\x0f\xaa\x64\x46\xf2\xd8\xf3\x7c\x3c\x2d\xd4\x6c\x6b\x5a\x97\xab\xa3\xb9\xc5\x65\x5a\xb6\x26\x16\x5c\xf6\x3b\xa6\xd1\x55\x39\xfc\x06\x00\x00\xff\xff\x8f\x12\xa1\x26\x83\x01\x00\x00")

func gitignoreZephirGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreZephirGitignore,
		"gitignore/Zephir.gitignore",
	)
}

func gitignoreZephirGitignore() (*asset, error) {
	bytes, err := gitignoreZephirGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Zephir.gitignore", size: 387, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalAnjutaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xc6\x3b\x0a\xc0\x20\x0c\x06\xe0\xdd\x53\x04\xba\xeb\x45\x7a\x07\xf9\x63\xb4\x58\x34\x01\x1f\x83\xb7\xef\xd6\xed\xbb\xe8\xb6\x84\x46\xc9\xb4\xd4\x67\x0f\xac\x6a\x4a\xc5\x9a\xe4\x41\x50\xa1\x79\x3a\x5b\x23\xc1\x02\x63\x66\x17\x3c\xf4\xdd\x0b\xe1\x57\x9c\xa7\x47\x61\x2f\xec\xbe\x00\x00\x00\xff\xff\xa9\xec\x11\xd0\x4e\x00\x00\x00")

func gitignoreGlobalAnjutaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalAnjutaGitignore,
		"gitignore/Global/Anjuta.gitignore",
	)
}

func gitignoreGlobalAnjutaGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalAnjutaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Anjuta.gitignore", size: 78, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalAnsibleGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x4a\x2d\x29\xaa\xe4\x02\x04\x00\x00\xff\xff\x95\x17\x2e\x28\x08\x00\x00\x00")

func gitignoreGlobalAnsibleGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalAnsibleGitignore,
		"gitignore/Global/Ansible.gitignore",
	)
}

func gitignoreGlobalAnsibleGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalAnsibleGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Ansible.gitignore", size: 8, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalArchivesGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x4d\x4e\xc5\x30\x0c\x84\xf7\x3e\xc5\x48\x5d\x20\x45\x22\x0b\x36\x9c\x81\x63\x38\xad\x5f\x6a\x68\x7e\x14\xbb\x7a\xd0\xd3\xa3\xbc\xc7\x82\xcd\x68\xf4\x69\xec\x99\x05\x1f\xfe\x62\x48\xe2\x2e\x03\xde\x70\xd6\xce\xeb\x17\x7c\x17\x13\xdc\xf4\x10\x03\xd7\x0d\x6b\x2b\x45\x7d\x62\x0c\xbe\xc3\xda\x39\x56\x41\x92\x95\x4f\x13\x5a\x90\xd5\xb1\xb3\x41\xdd\xd0\xee\x15\xe9\xd4\xc3\xa1\x75\x1e\xf6\x21\x66\xda\x2a\x8a\xf8\xde\x36\x8b\x14\xe2\xfb\x45\x21\x7e\xf2\xa0\x10\xc7\x43\x2f\xed\x14\x62\x9e\x38\x3d\x7d\xba\xde\x28\xc4\xef\x49\x8e\xab\x30\x85\xb8\x72\x22\x5a\xe6\x3e\xad\xf9\xb5\xd5\xe3\x07\xb7\x36\x0a\xbb\x51\x88\x6a\x8d\x42\x74\x1e\x7f\x11\xce\x82\xc2\x95\xb3\x14\xa9\xfe\x2f\xb8\x95\x3c\xff\x76\x9d\x7d\x52\x28\x44\xc9\x93\x6c\x92\xe6\x9a\x3e\x49\x31\x7d\xe8\xd3\x77\xfa\x0d\x00\x00\xff\xff\x99\x2b\xe0\x1a\x27\x01\x00\x00")

func gitignoreGlobalArchivesGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalArchivesGitignore,
		"gitignore/Global/Archives.gitignore",
	)
}

func gitignoreGlobalArchivesGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalArchivesGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Archives.gitignore", size: 295, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalBazaarGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x4b\xaa\x2a\xd2\xe7\x02\x91\x99\xe9\x79\xf9\x45\xa9\x5c\x80\x00\x00\x00\xff\xff\x93\x48\x50\x67\x11\x00\x00\x00")

func gitignoreGlobalBazaarGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalBazaarGitignore,
		"gitignore/Global/Bazaar.gitignore",
	)
}

func gitignoreGlobalBazaarGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalBazaarGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Bazaar.gitignore", size: 17, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalBricxccGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x2a\xca\x4c\xae\x50\x70\xce\xcf\xcd\x4d\xcc\x4b\x51\x70\x4e\xcd\x2b\x49\x2d\x52\xf0\x74\x71\xe5\x52\x56\xc8\x28\x29\x29\xb0\xd2\xd7\x4f\x02\xa9\x48\x4e\xd6\x2b\xce\x2f\x2d\x4a\x4e\x4d\xcb\x2f\x4a\x4f\xd5\xcb\x4b\x2d\xe1\xd2\xd2\x4b\x4a\xcc\xe6\xd2\xd2\x2b\xae\xcc\xe5\x02\x04\x00\x00\xff\xff\x62\x51\x65\x31\x48\x00\x00\x00")

func gitignoreGlobalBricxccGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalBricxccGitignore,
		"gitignore/Global/BricxCC.gitignore",
	)
}

func gitignoreGlobalBricxccGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalBricxccGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/BricxCC.gitignore", size: 72, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalCvsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x77\x0e\x0b\xd6\xd7\xe2\xd2\xd2\x82\x32\xf4\x92\xcb\x8a\x33\xd3\xf3\xf2\x8b\x52\xb9\xb4\xf4\x91\x38\x80\x00\x00\x00\xff\xff\x42\xdd\x21\x40\x28\x00\x00\x00")

func gitignoreGlobalCvsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalCvsGitignore,
		"gitignore/Global/CVS.gitignore",
	)
}

func gitignoreGlobalCvsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalCvsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/CVS.gitignore", size: 40, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalCalabashGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xc7\x31\x0e\x83\x30\x10\x04\xc0\x7e\x5f\x61\x89\x2e\x52\xb8\x47\xf0\x12\x1b\x56\xa1\x20\x67\xb4\xe7\xf3\xfb\x53\xa4\xa2\x9b\x59\xca\x56\xaf\xda\x6a\x9c\xc5\xca\x96\x7b\x7e\x1b\x05\x51\xe9\x06\xf1\xee\x1a\x61\x88\x5d\xa4\xc7\xd9\x9f\x79\xad\xb7\x7f\x30\x18\xe3\x1d\xd4\xa4\xc2\x80\xa5\xb4\xf4\xe3\xa2\xb0\xfe\x81\x49\x3f\xba\xf0\x0b\x00\x00\xff\xff\xb9\x3a\xe1\x32\x6b\x00\x00\x00")

func gitignoreGlobalCalabashGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalCalabashGitignore,
		"gitignore/Global/Calabash.gitignore",
	)
}

func gitignoreGlobalCalabashGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalCalabashGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Calabash.gitignore", size: 107, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalCloud9Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xce\xc9\x2f\x4d\xb1\x54\xf0\x74\x71\x55\xd0\x55\xc8\x28\x29\x29\xb0\xd2\xd7\x4f\xb6\xd4\xcb\xcc\xe7\xd2\x4b\xb6\x2c\x4a\x2d\xcb\x2c\xce\xcc\xcf\x2b\x06\x71\xb8\x00\x01\x00\x00\xff\xff\xd6\x46\x6f\xbd\x2d\x00\x00\x00")

func gitignoreGlobalCloud9GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalCloud9Gitignore,
		"gitignore/Global/Cloud9.gitignore",
	)
}

func gitignoreGlobalCloud9Gitignore() (*asset, error) {
	bytes, err := gitignoreGlobalCloud9GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Cloud9.gitignore", size: 45, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalCodekitGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x4f\xcd\x4b\x2d\x4a\xcc\x51\x70\xce\x4f\x49\xf5\xce\x2c\x51\x48\xcb\xcc\x49\x2d\x56\x28\xc9\x57\xc8\x4c\xcf\xcb\x2f\x4a\xe5\x4a\xce\xcf\x4b\xcb\x4c\xd7\x4b\xce\x4f\x49\xcd\xce\x2c\xe1\xd2\xcf\xcd\xcc\xe3\x02\x04\x00\x00\xff\xff\x7f\x93\x65\x79\x36\x00\x00\x00")

func gitignoreGlobalCodekitGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalCodekitGitignore,
		"gitignore/Global/CodeKit.gitignore",
	)
}

func gitignoreGlobalCodekitGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalCodekitGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/CodeKit.gitignore", size: 54, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalDarteditorGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x28\xca\xcf\x4a\x4d\x2e\xe1\xd2\x4b\x2a\xcd\xcc\x49\xc9\xc9\x4f\xe7\x02\x04\x00\x00\xff\xff\x75\xc6\x26\xcf\x13\x00\x00\x00")

func gitignoreGlobalDarteditorGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalDarteditorGitignore,
		"gitignore/Global/DartEditor.gitignore",
	)
}

func gitignoreGlobalDarteditorGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalDarteditorGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/DartEditor.gitignore", size: 19, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalDreamweaverGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xca\x4d\x0a\xc2\x30\x10\x06\xd0\xfd\x9c\x22\xe0\xce\x45\xbc\x44\x8f\x20\xb8\x0c\x21\xf3\xb5\x1d\xe8\xfc\x90\x14\xa3\xb7\x17\xe9\xea\x6d\xde\x2d\x2d\xaf\xb4\x74\x54\x9d\xa8\x6f\xf4\x54\x99\xc1\x69\x95\x03\x83\x8a\xf9\xf9\xa7\xb9\x46\xed\x78\x42\x83\x9a\xdb\x2a\xdb\x78\x10\xcf\xf1\xb5\x96\x3f\x7a\x10\xcf\x12\x7b\x94\xe6\x8c\x5d\xec\x14\xdb\xf2\xd5\xe8\x9e\xd5\x9c\x7e\x01\x00\x00\xff\xff\x9f\xc9\xd4\x9f\x65\x00\x00\x00")

func gitignoreGlobalDreamweaverGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalDreamweaverGitignore,
		"gitignore/Global/Dreamweaver.gitignore",
	)
}

func gitignoreGlobalDreamweaverGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalDreamweaverGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Dreamweaver.gitignore", size: 101, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalDropboxGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x29\xca\x2f\x48\xca\xaf\x50\x28\x4e\x2d\x29\xc9\xcc\x4b\x2f\x56\x48\xcc\x4b\x51\x48\x4e\x4c\xce\x48\x2d\xe6\xd2\x4b\x81\x48\xc2\x19\x7a\x89\x25\x25\x45\x08\x1e\x58\x19\x17\x20\x00\x00\xff\xff\xd8\xe1\xb8\xbb\x44\x00\x00\x00")

func gitignoreGlobalDropboxGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalDropboxGitignore,
		"gitignore/Global/Dropbox.gitignore",
	)
}

func gitignoreGlobalDropboxGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalDropboxGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Dropbox.gitignore", size: 68, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalEclipseGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\x41\x8f\xda\x30\x10\x85\xef\xf3\x2b\x46\x5b\xa9\x82\xac\x30\xbf\xa1\x0b\x48\x6d\xd5\x03\x2a\x39\xf4\x56\x0d\xce\x90\xb8\xeb\x78\x2c\x7b\xc2\x6e\x2e\xfd\xed\x95\x0d\x15\xd0\x5e\xdf\xe8\xcb\x7b\x7e\x2f\x60\x46\x56\xea\x48\x09\x8e\x2e\xac\x41\xc7\xb8\x86\xc6\xe8\x18\xa1\x31\x47\x7a\x85\xc6\xe4\xb7\x08\xcd\x6f\x13\xdc\x11\xbc\x58\xf2\x26\x26\x89\x9c\xd4\x71\x06\x93\x59\xd5\x85\x3e\xaf\xc1\x78\xa1\x2e\x92\x0e\x60\x12\x5b\x19\x47\x0e\x1d\xa7\x0c\xf0\x01\x77\xef\xca\x29\x90\x47\x15\xf1\x78\x9c\x9c\xaf\x17\xc3\x57\xbd\x15\xf1\x2f\x57\x75\x5d\x80\x6f\xc5\xc7\xcf\x98\x55\x12\x77\xf8\xb4\xb3\xde\xc5\xcc\xe8\x69\x0a\x76\x40\x2b\xe1\xe4\xfa\x29\x91\x3a\x09\xf9\x09\x1a\x73\x39\x14\x74\x3f\x6f\xf9\x8c\x39\xb2\x75\x27\x67\x71\xb1\x9f\x75\x90\x80\x5f\xb6\x3b\x3c\x49\xc2\xeb\x97\x96\xd0\x98\x38\x77\x7c\x8e\x49\x7e\xb1\xd5\x42\x6e\xb6\xed\xea\xc6\x6d\xd6\x9b\xe7\x67\xdc\xf2\x99\xbd\xc4\x91\x83\x62\x49\xe9\x42\xbf\x04\x63\xef\xa8\xaf\x74\x26\xa4\x10\x44\x6b\x1a\x8c\x49\x2c\xe7\x2c\x09\x17\x9f\xf6\xed\x12\xcc\x89\xac\x4a\x9a\x6b\x33\x25\xdf\x83\xcb\xfe\xf3\xfe\x3f\x8f\xbc\x04\x53\x3b\xfa\x8b\xe4\xa3\xf2\xb5\x80\xe8\xa7\xde\x05\x30\x4a\xa9\xe7\xea\xdf\x72\x0a\x37\x99\x53\x58\xdd\x85\x6b\xf9\xc7\x3f\x1c\xbf\x57\xa1\x1c\x0f\xed\x01\x17\x87\x98\x5c\xe8\xab\x2f\x1e\x26\xa7\xbc\x04\x93\xab\xf6\xc2\x14\xea\x7a\x1b\xe9\x18\xbf\xdf\x4f\xfa\x30\x70\x1d\xec\x60\xc9\x53\x2d\xf9\xf6\xb6\x8b\xf6\xf1\xd2\x50\x77\xf7\xc8\x87\x1d\x8c\x25\x3b\xf0\x6a\xa4\x12\x2f\x17\xe4\x67\xc7\xb1\x7c\x3a\xd8\xfa\x87\xbd\x49\x7a\xcd\x03\xb3\xc2\x9f\x00\x00\x00\xff\xff\xf3\xfc\x95\xeb\xac\x02\x00\x00")

func gitignoreGlobalEclipseGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalEclipseGitignore,
		"gitignore/Global/Eclipse.gitignore",
	)
}

func gitignoreGlobalEclipseGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalEclipseGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Eclipse.gitignore", size: 684, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalEiffelstudioGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xc9\x48\x55\x48\xce\xcf\x2d\xc8\xcc\x49\x2c\xc9\xcc\xcf\x53\x48\xc9\x2c\x4a\x4d\x2e\xc9\x2f\xaa\xe4\x72\xf5\x74\x73\x77\xf5\x2b\xe6\x02\x04\x00\x00\xff\xff\x38\xe8\xbe\xc2\x24\x00\x00\x00")

func gitignoreGlobalEiffelstudioGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalEiffelstudioGitignore,
		"gitignore/Global/EiffelStudio.gitignore",
	)
}

func gitignoreGlobalEiffelstudioGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalEiffelstudioGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/EiffelStudio.gitignore", size: 36, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalEmacsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x50\xb1\x6a\xc4\x30\x0c\xdd\xf5\x15\x86\x6c\x06\x3b\x7b\x3b\x95\x42\xd7\x2e\x2d\x74\x38\x38\x8c\xad\x24\x6e\x94\x73\x90\x7c\x47\xb3\xf4\xdb\x8b\x9c\x70\x07\xdd\xfc\x9e\xde\x7b\x92\x5f\x67\x9c\x75\x66\x29\x09\x9f\xcc\x98\x6b\x1e\x2f\x85\xf1\x59\x49\xb0\xbf\x70\xea\xec\xa9\x83\xde\xe3\x12\xa2\xf8\x84\x32\xd7\xb2\xfe\xc7\x9e\x4a\x9c\xc1\x7a\xa4\x08\xe1\x5a\x8b\x93\x70\x43\x47\x59\x2a\x54\x0e\xcb\x0a\xfe\xd4\x59\x80\xce\xbc\xf3\xe8\x74\x13\xf8\xc2\xa3\xcb\xc9\x51\x89\xa1\xe6\x72\x11\xb0\xe7\xc0\x71\xca\x37\x54\xdd\x40\xdb\x12\x66\xdc\xb5\xf6\x7c\x40\xdf\x32\x50\x26\x24\x32\x43\x26\x14\xe8\x77\xd4\x4f\x59\x6a\xe1\xed\x8e\x29\x48\x4d\x99\x9b\x9e\xd6\x60\xd6\x10\xe7\x30\x36\x03\xad\xa1\x57\x9e\x71\xa8\xf8\x73\xe4\x58\xcf\x48\xca\xbe\x7c\xbe\x7e\xe0\x97\xd1\x5f\x98\xa1\x50\x42\x86\x5e\x41\xb3\xc4\x20\xf3\x23\xca\x2b\xec\x21\x65\xa9\x6d\xfa\x46\x5b\x9c\x30\xce\x30\x1c\x8f\xb3\x36\xa2\x13\x41\xbe\x21\x6b\xe8\x64\x52\x66\x8c\xfb\xad\x3b\xdd\xbc\x2b\x97\x6f\x8c\x55\x6f\x39\x2e\xf2\x0f\x4a\x05\x77\x9b\x89\xe5\x32\xe4\xf1\xca\xad\x37\xf0\x29\x73\x6b\x91\x44\x97\xfd\x05\x00\x00\xff\xff\x00\x6c\xff\xa8\xcd\x01\x00\x00")

func gitignoreGlobalEmacsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalEmacsGitignore,
		"gitignore/Global/Emacs.gitignore",
	)
}

func gitignoreGlobalEmacsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalEmacsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Emacs.gitignore", size: 461, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalEnsimeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\xcd\x2b\xce\xcc\x4d\x55\x28\x2e\x48\x4d\xce\x4c\xcb\x4c\xe6\xd2\x4b\x05\x0b\xc0\xe8\xf8\xe4\xc4\xe4\x8c\x54\x7d\x38\x37\xa7\x34\x39\x35\x2f\x55\x9f\x0b\x10\x00\x00\xff\xff\x9d\x93\x9f\xe6\x39\x00\x00\x00")

func gitignoreGlobalEnsimeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalEnsimeGitignore,
		"gitignore/Global/Ensime.gitignore",
	)
}

func gitignoreGlobalEnsimeGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalEnsimeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Ensime.gitignore", size: 57, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalEspressoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x4b\x2d\x2e\x28\xca\xcf\xe2\x02\x04\x00\x00\xff\xff\x2c\x1e\xba\x4d\x09\x00\x00\x00")

func gitignoreGlobalEspressoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalEspressoGitignore,
		"gitignore/Global/Espresso.gitignore",
	)
}

func gitignoreGlobalEspressoGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalEspressoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Espresso.gitignore", size: 9, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalFlexbuilderGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\xcc\xd3\xe7\x4a\xca\xcc\xd3\x4d\x49\x4d\x2a\x4d\x87\x30\x8b\x52\x73\x52\x13\x8b\x53\xf5\xb9\x00\x01\x00\x00\xff\xff\xd4\x34\xbc\x13\x1d\x00\x00\x00")

func gitignoreGlobalFlexbuilderGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalFlexbuilderGitignore,
		"gitignore/Global/FlexBuilder.gitignore",
	)
}

func gitignoreGlobalFlexbuilderGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalFlexbuilderGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/FlexBuilder.gitignore", size: 29, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalGpgGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x4d\x2e\xca\xcc\x4b\xd7\xd3\xe2\xe2\x02\x04\x00\x00\xff\xff\x48\xb7\xdd\xd8\x0b\x00\x00\x00")

func gitignoreGlobalGpgGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalGpgGitignore,
		"gitignore/Global/GPG.gitignore",
	)
}

func gitignoreGlobalGpgGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalGpgGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/GPG.gitignore", size: 11, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalJdeveloperGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x41\x4a\x03\x41\x10\x46\xe1\x7d\x9f\xa2\x20\x5b\x99\x39\x83\x24\x06\x5c\x29\x78\x82\xb2\xfa\xef\x4c\x3b\x35\x53\x4d\x75\xb5\x61\x6e\x2f\x44\x74\xff\x1e\xdf\x89\x32\x0a\x0f\x0d\xe2\xd6\xb4\x0a\x47\xb5\x9d\x7a\x98\xf3\x0d\x94\xab\x43\xc2\xfc\xa0\xd1\x91\xe9\xf3\xa0\x58\x40\xaf\x97\x17\x7a\x87\x17\xf3\x8d\x77\x01\x9d\x59\x16\x50\x01\xc7\x70\xa4\x29\x73\xf0\x9c\xd2\xe9\xf7\x29\xe6\xf4\x7c\xb9\x52\x8f\x43\xd1\x49\x58\x96\xba\xdf\x52\x60\x6b\x8f\xe8\x8f\xb7\x11\x6d\xc4\xbf\x58\xd1\x93\x28\xf7\x8e\x3e\xa7\x8c\xa6\x76\xcc\xe9\x8b\xbf\x39\x9b\x3c\x3e\x35\x59\xa9\x54\xc5\x13\x31\x35\xf6\x20\x2b\xf4\xe6\x2c\x0a\x3a\x3b\x32\xf6\xa8\xac\xf4\x11\xe6\xa0\xab\xf3\x86\xbb\xf9\x9a\xe4\xce\xaa\x88\xa9\x77\x9b\x54\xd6\x9f\x00\x00\x00\xff\xff\xa4\x69\x70\x04\xff\x00\x00\x00")

func gitignoreGlobalJdeveloperGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalJdeveloperGitignore,
		"gitignore/Global/JDeveloper.gitignore",
	)
}

func gitignoreGlobalJdeveloperGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalJdeveloperGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/JDeveloper.gitignore", size: 255, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalJetbrainsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6f\x13\x31\x10\x85\xef\xfb\x2b\x2c\xe5\x02\x55\x76\x8d\xa0\x20\xc8\xad\xa4\x05\xb5\xa2\x52\xd5\x08\x71\x8c\xbc\xf6\xec\xee\xa4\x5e\xdb\xcc\x8c\xdb\xe6\xdf\x23\xa7\x69\xba\x91\xc2\xf5\x7b\x33\xcf\x4f\xcf\x33\x53\xcb\xf8\x08\xc4\xea\x06\xe4\x3b\x19\x0c\xac\xae\x2f\xaf\x78\xa1\xae\x83\x80\xf7\x78\x33\x57\xf7\xb9\xdd\xde\x62\x80\xb9\xba\x1b\xd2\x4a\x22\x8d\x73\x75\x91\xd2\x32\xba\x82\xb6\xcb\xc1\x14\xb2\xfc\x85\x31\xcc\xd5\x45\x70\x14\xd1\xa9\x95\x64\x87\x51\x99\xe0\xd4\x1f\x68\xb9\x6c\x55\x33\x75\x0f\x1d\x10\x04\x0b\x0b\x35\x88\x24\x5e\x68\x8d\x2f\xef\x6c\x6a\xce\x29\x45\x92\x66\x03\xd2\xee\x82\x34\x36\x8e\x7a\xb0\x1a\x42\x9d\x59\x1b\x12\xb4\x1e\x58\x7f\xfc\xf0\xe5\xf3\xf9\xf9\xd7\x4f\xdf\xaa\x6a\xa6\x7e\x33\x50\xcd\x09\x2c\x76\x68\x15\x4b\xee\xba\x45\xd5\xa0\x03\xa3\xcf\xce\xf4\x53\xa4\x07\x4e\xc6\x42\xf3\x3c\xfa\x37\x2c\x86\x1f\x78\x82\x1c\x5a\xc1\x18\x0c\x21\x70\x31\x5d\x41\x60\x14\x7c\x04\x15\x49\x0d\xd8\x0f\xb5\x1d\x32\x05\xd5\xa1\x07\x9e\xd8\x3b\x23\x66\x15\x33\x59\x60\x7d\x92\x36\xe8\xf8\xb4\x70\x94\x67\x2a\xf8\x68\x8d\x3f\x96\xf9\xaf\xbf\xfc\xef\xea\x36\x98\x11\xed\x31\xcc\x78\x09\x8c\x7d\x00\xda\xf1\x6a\xa6\x7e\x92\x71\x1e\x26\xd1\xfb\x1d\x38\x5e\xf3\xd8\xd2\xa1\x83\xdb\x18\xfa\xa8\xae\x9e\x93\x8f\x04\xa4\x92\xcf\x3d\x86\x89\xc1\x58\xf4\x15\x88\x60\xe8\x79\xff\xcc\x4c\xfd\x40\x0f\x75\x6b\x18\x9c\x4a\x14\x37\x60\x45\x75\x91\x46\x23\x8b\xea\xac\xc1\x27\xde\x0d\xdd\xed\xbc\xde\x7e\x6d\x5f\x6b\x35\x3b\xdc\x5c\xa5\x63\x16\x5d\xc8\x98\xc0\x4b\x0c\x10\x34\xb7\x52\x97\xc7\xf7\x51\x5e\x92\xac\xc7\xe8\x72\x39\x8a\x32\x7b\x73\x7d\x7f\xf1\xaa\x1a\xf1\x86\x19\x4d\x28\x3b\xf5\x0b\x7c\x2d\x63\x99\x89\xcb\xe7\x2e\x7d\xdc\x64\x82\x23\x43\x4d\x90\x3c\x8b\x11\x38\x4c\x93\xe1\xc1\x6f\x05\x2d\xef\x27\xd5\xbb\x2e\xd2\xa9\x43\x7f\x8d\xff\xbe\xb2\x71\x5c\xdb\xb7\xc5\x35\x3c\x97\xd3\x5e\xb3\xd0\xa1\xae\x89\xdc\x24\x8a\x09\x48\x4a\xf5\x13\x5c\xb7\x19\xbd\x9b\x8a\x9d\x69\x09\xed\x94\xfc\x0b\x00\x00\xff\xff\x5f\x91\x9c\xc7\xbf\x03\x00\x00")

func gitignoreGlobalJetbrainsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalJetbrainsGitignore,
		"gitignore/Global/JetBrains.gitignore",
	)
}

func gitignoreGlobalJetbrainsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalJetbrainsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/JetBrains.gitignore", size: 959, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalKdevelop4Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\xcb\x4e\x49\x2d\x33\xe1\x82\x50\xfa\x5c\x80\x00\x00\x00\xff\xff\xe2\x3d\x7b\x0d\x10\x00\x00\x00")

func gitignoreGlobalKdevelop4GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalKdevelop4Gitignore,
		"gitignore/Global/KDevelop4.gitignore",
	)
}

func gitignoreGlobalKdevelop4Gitignore() (*asset, error) {
	bytes, err := gitignoreGlobalKdevelop4GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/KDevelop4.gitignore", size: 16, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalKateGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x2e\x4f\x2c\x50\x70\xcb\xcc\x49\x2d\x56\x50\xe6\xd2\xd3\xd2\xcb\x4e\x2c\x49\xd5\x2d\x2e\x2f\xe0\xd2\x2b\x2e\x2f\xd0\xd3\xe2\x02\x04\x00\x00\xff\xff\xe9\xbe\x25\x0c\x22\x00\x00\x00")

func gitignoreGlobalKateGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalKateGitignore,
		"gitignore/Global/Kate.gitignore",
	)
}

func gitignoreGlobalKateGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalKateGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Kate.gitignore", size: 34, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalLazarusGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x4d\x6e\x03\x21\x0c\x85\xf7\x3e\x85\xa5\x6c\x5a\xa4\x30\x67\xe8\xbe\x55\x17\xed\x05\x0c\x78\x12\x27\x2e\x46\xfc\x48\x4d\x4f\x5f\x31\x69\x9a\x6c\x2c\x04\xbc\xef\x83\xb7\xc3\x57\xfa\xa1\x3a\x1a\x46\xfb\x2a\xa2\x5c\xf7\x07\xce\x5c\xa9\x73\xc2\x20\x99\xaa\x70\xc3\xa7\x46\x2b\x63\x37\x4c\xac\xdc\xf9\x19\x9c\xe7\x6f\x06\xe7\x93\x2a\x38\xdf\x6c\x2e\x2f\x2a\x01\x9c\xd7\xda\xc0\xf9\xca\x73\xfe\x31\xd3\x3c\x0e\x07\x70\xbe\x94\x01\xce\xcf\xeb\x56\xc1\x79\x02\xb8\x3f\x80\x46\xb7\xbb\x7b\x15\x9d\xe2\x34\x8a\x4a\xdc\x76\x24\xaf\x36\xcd\xb5\xf5\x6d\x9e\x36\x59\x7f\x44\xa8\x45\xd2\x5b\x74\x34\xae\xfb\x56\x38\xca\x2a\xf1\x3f\xad\xa5\x3d\x26\x02\xc5\xf3\x28\x0d\x29\x27\x1c\x59\x3a\xda\xe8\x65\x74\x5c\x4d\x13\xd7\xe6\x61\x87\x9f\x47\x6e\x8c\x91\x32\x06\xc6\x78\xa4\x7c\x98\xd5\x5c\x70\xf2\x51\xf2\x0d\xb5\x94\x6a\x27\x8e\x1d\xad\x74\xb1\xdc\x3c\x5c\xd9\x0b\x38\x1f\xe8\x0c\x2a\x61\x99\xe6\x97\x72\xfd\x91\x58\xc6\x30\x72\x52\xc6\xd5\x2a\xbe\x51\xc4\xf7\x8f\xd9\x49\x29\x0b\xfc\x06\x00\x00\xff\xff\x63\xeb\xe3\x17\x97\x01\x00\x00")

func gitignoreGlobalLazarusGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalLazarusGitignore,
		"gitignore/Global/Lazarus.gitignore",
	)
}

func gitignoreGlobalLazarusGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalLazarusGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Lazarus.gitignore", size: 407, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalLibreofficeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xc9\x4c\x2a\x4a\xf5\x4f\x4b\xcb\x4c\x4e\x55\xc8\xc9\x4f\xce\x2e\xe6\xd2\xab\x03\xd1\x7a\x5a\xca\x5c\x80\x00\x00\x00\xff\xff\x7a\x7d\x60\x16\x1e\x00\x00\x00")

func gitignoreGlobalLibreofficeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalLibreofficeGitignore,
		"gitignore/Global/LibreOffice.gitignore",
	)
}

func gitignoreGlobalLibreofficeGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalLibreofficeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/LibreOffice.gitignore", size: 30, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalLinuxGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\xbd\x4e\x04\x21\x14\x85\x7b\x9e\xe2\x24\x76\x93\x38\x4f\xa1\x95\x96\xf6\xe6\x0e\x1c\x96\x1b\x19\x20\x17\xc6\x75\x1a\x9f\xdd\xe0\x6e\xb4\x84\x7b\xfe\xbe\xe5\xdb\xb9\x07\x0c\xee\xad\x9a\xd8\x89\xa8\x99\x1d\xd7\xa4\x3e\xc1\x4b\xc1\x46\x78\xa3\x0c\x06\x68\x84\xa0\x59\xf5\xec\x1d\x7d\x68\xce\x48\xd2\x21\x48\x52\x42\x26\x6a\x63\x41\x9d\xa2\xc0\xcc\xe9\x98\x61\x6e\x8d\x47\xe7\x7b\xd2\x10\x58\x96\x59\xf6\xf2\xf4\x8c\xa0\x46\x3f\xaa\x9d\x68\xc6\x48\x63\xf1\xec\x6e\xfd\xfb\x9e\xba\x57\x2d\xc7\x17\x86\x49\x4f\x88\x35\x07\xda\x7d\xd7\xae\x97\x34\x20\xad\x51\x0c\xb5\x40\xca\x89\x26\x36\x74\x68\x2d\xa8\x86\xa0\xfd\xc3\xad\x6f\xd3\xf9\xf8\x5b\xb9\x96\xd8\xef\x68\x62\xff\x44\xd7\xc4\xe9\xbe\x2d\x9f\x67\x68\x87\x71\xaf\x9f\x0c\xd8\x8e\x31\x9f\x37\xd0\x8d\x5a\x2e\x10\x3f\xd9\x19\xdc\xcc\x5b\xdc\x4f\x00\x00\x00\xff\xff\x9d\xb1\x6e\x51\x3c\x01\x00\x00")

func gitignoreGlobalLinuxGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalLinuxGitignore,
		"gitignore/Global/Linux.gitignore",
	)
}

func gitignoreGlobalLinuxGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalLinuxGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Linux.gitignore", size: 316, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalLyxGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\x4c\xcf\xcb\x2f\x4a\x55\xf0\xa9\x8c\x50\x48\x4a\x4c\xce\x2e\x2d\x50\x48\xcc\x4b\x51\x48\x2c\x2d\xc9\x2f\x4e\x2c\x4b\x55\x48\xcb\xcc\x49\x2d\xe6\x52\x56\xc8\x28\x29\x29\xb0\xd2\xd7\x2f\x2f\x2f\xd7\xcb\xa9\xac\xd0\xcb\x2f\x4a\xd7\xe7\xd2\x02\x31\xeb\x20\x94\x32\x17\x20\x00\x00\xff\xff\x47\x56\xf9\xb0\x4b\x00\x00\x00")

func gitignoreGlobalLyxGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalLyxGitignore,
		"gitignore/Global/LyX.gitignore",
	)
}

func gitignoreGlobalLyxGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalLyxGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/LyX.gitignore", size: 75, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMatlabGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xc1\x4a\x03\x31\x10\x06\xe0\x7b\x9e\xe2\x97\xbd\x68\xa1\xed\x43\x14\xf1\x54\x04\x7b\x68\xaf\xb3\x9b\xd9\x76\xdc\x6c\x66\xc9\x64\xd3\xf5\xe2\xb3\x4b\x14\x05\x41\x04\xcd\x31\x7c\xf3\xcf\xcf\x34\xcd\xfa\xef\xcf\x35\x0d\x9e\x78\xd4\xc2\xa0\x39\xab\x51\x61\xc3\x99\x23\x27\xca\xec\xd1\xbe\x20\x5f\x18\x7b\xca\x81\x5a\xb0\x97\xac\xa9\x8e\x1c\x19\x17\x2a\x8c\xb3\x64\xf4\x9a\xd0\x52\x37\xcc\x93\xdd\xb8\xff\x95\x70\x0d\x8e\x12\xbd\x5e\x0d\x9e\x7b\x9a\x43\xfe\x6a\x03\x5e\x32\x47\x13\x8d\x6e\xb5\x21\x2b\xd5\x3e\x1e\x4e\xd8\x62\x15\x65\xf9\x9d\x8f\xaf\x55\xef\x74\x9c\x24\xb0\xc7\xfe\xfe\x84\x56\x22\x25\x61\xc3\x2d\x85\x80\x29\x50\xee\x35\x8d\x76\x57\x35\x2f\xab\xea\x0f\x32\xce\x41\xe2\x80\x9d\x7a\xc6\xc3\xc7\x2d\x6a\xa0\x85\x29\x3d\x6f\xdf\x09\x5b\x5d\x01\x89\xbd\x3a\xed\x32\x15\x5e\x5f\x35\x0d\x36\x51\xc7\xdf\x32\x7e\xe8\xb5\xf9\xfc\x73\x6f\x01\x00\x00\xff\xff\x24\x3e\x38\x84\xb2\x01\x00\x00")

func gitignoreGlobalMatlabGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMatlabGitignore,
		"gitignore/Global/Matlab.gitignore",
	)
}

func gitignoreGlobalMatlabGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMatlabGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Matlab.gitignore", size: 434, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMercurialGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xcb\x48\xd7\xe7\xd2\xcb\x48\xcf\x4c\xcf\xcb\x2f\x4a\x05\xb1\x8a\x33\xd3\x8b\xc1\x74\x69\x12\x94\x2a\x2e\x49\x2c\x01\x4b\x95\x24\xa6\x17\x73\x01\x02\x00\x00\xff\xff\x5c\x2f\x20\x72\x32\x00\x00\x00")

func gitignoreGlobalMercurialGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMercurialGitignore,
		"gitignore/Global/Mercurial.gitignore",
	)
}

func gitignoreGlobalMercurialGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMercurialGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Mercurial.gitignore", size: 50, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMicrosoftofficeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcb\x31\xae\xc2\x30\x0c\x80\xe1\xdd\xa7\xb0\xf4\xde\x94\x21\x87\x40\x82\xb9\x13\xcc\x51\x62\x24\xab\x29\xb6\x62\xb7\x84\xa5\x67\x47\x61\x01\x75\xfe\xfe\x3f\x44\x5f\x14\xe0\x0f\x6f\xd2\x0a\x3a\x2d\x2a\x2d\xb5\x17\xec\xff\x21\x16\xc9\x61\xd0\xb9\x67\xaa\x07\xeb\xd5\x7e\xec\x94\xf2\xbc\x2a\x5e\xb8\x12\x0c\x9b\x07\x4d\xf2\xa4\x36\x09\x3f\xfc\xf0\xaa\xfa\xe7\xbd\xb2\xb1\x60\x5a\x5d\x2c\x6d\xf4\x8d\xf0\xce\x95\x0c\x42\xdc\x37\x2b\x1d\xde\x01\x00\x00\xff\xff\xc8\x17\x5b\x4e\xa3\x00\x00\x00")

func gitignoreGlobalMicrosoftofficeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMicrosoftofficeGitignore,
		"gitignore/Global/MicrosoftOffice.gitignore",
	)
}

func gitignoreGlobalMicrosoftofficeGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMicrosoftofficeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/MicrosoftOffice.gitignore", size: 163, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalModelsimGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8d\x31\x6e\xec\x30\x0c\x44\x7b\x9e\x82\xc0\x6f\x7e\x58\x30\x57\xc8\x05\x52\xa5\x0c\x82\x85\x2c\xd1\x36\x13\x49\x14\x44\xda\x7b\xfd\xc0\xcd\x62\x9b\x34\x33\xc0\x3c\xe0\xcd\x3f\xd4\xad\xdb\x14\x7c\xb7\x22\xf5\x43\x1b\x6e\xd2\x65\xa6\x90\x82\xab\x56\x71\x4c\xbd\x60\xd1\x29\x39\x6c\xaa\x38\xfe\x0f\x69\xe3\x89\xb9\xa1\xf5\x17\xf8\xbc\xbd\x7d\x11\xc0\xc3\x97\xad\x0d\xad\x29\xd4\x3a\xda\x11\xe3\x08\xb4\xf5\xf1\x02\xc4\x2d\x14\x88\x4b\x8a\x2b\x17\x07\xe2\xe1\xd7\xbe\xa4\x1f\x20\xce\x6d\x00\xf1\xf7\xd8\x80\x78\x8f\x56\x2f\xe0\xeb\x93\xdf\xb5\x1d\x7f\xeb\xef\x75\x25\x20\xbe\xd7\x15\x88\x4f\x8f\xab\x8e\x5c\x16\xc8\x76\xd2\x2b\xc4\x4c\xdd\xf3\xd4\x11\x04\x9e\x6f\x65\xe8\x2e\xa9\xc8\xe4\x1d\x4e\xd7\xc6\x65\xd9\xe0\x37\x00\x00\xff\xff\x42\xd3\x8b\x1f\x1a\x01\x00\x00")

func gitignoreGlobalModelsimGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalModelsimGitignore,
		"gitignore/Global/ModelSim.gitignore",
	)
}

func gitignoreGlobalModelsimGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalModelsimGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/ModelSim.gitignore", size: 282, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMomenticsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x2a\xcd\xcc\x29\x51\x48\xcb\xcc\x49\x2d\xe6\xaa\xb0\x30\xd3\xe7\x4a\x2c\xca\x05\x13\xba\x05\xfa\x5c\x25\x45\x89\x79\xc5\x39\x89\x25\x99\xf9\x79\xc5\xfa\x5a\x7a\x85\xb9\x5c\x5c\xca\x0a\x9e\x2e\xae\x0a\xc5\xa9\x25\x25\x99\x79\xe9\xc5\x5c\x7a\x30\x96\x3e\x17\x20\x00\x00\xff\xff\x0c\x04\x33\xd5\x4c\x00\x00\x00")

func gitignoreGlobalMomenticsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMomenticsGitignore,
		"gitignore/Global/Momentics.gitignore",
	)
}

func gitignoreGlobalMomenticsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMomenticsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Momentics.gitignore", size: 76, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMonodevelopGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0a\x02\x30\x0c\x05\xd0\x3d\xa7\x28\x74\x2b\x58\x6f\xe1\x26\x08\xe2\x01\x34\xfe\x42\xb4\x98\x92\x9f\xde\x5f\x04\xb7\x37\xbc\x7a\x23\xa2\x5c\x17\xd4\x86\xa9\xb4\xbe\x89\x58\x81\xc1\xbf\xf3\xce\x37\x45\xea\xd9\x3f\x5e\x2e\xe1\x2f\x68\x96\x93\x4d\xfc\xc2\xb2\xe7\x43\x5a\x0f\xd0\x77\x28\x28\x09\xe6\x21\xc0\x3d\x93\x47\xf9\x06\x00\x00\xff\xff\xf3\x3c\xfc\xc2\x5d\x00\x00\x00")

func gitignoreGlobalMonodevelopGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMonodevelopGitignore,
		"gitignore/Global/MonoDevelop.gitignore",
	)
}

func gitignoreGlobalMonodevelopGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMonodevelopGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/MonoDevelop.gitignore", size: 93, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalNetbeansGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\x2a\x28\xca\xcf\x4a\x4d\x2e\xd1\x2f\x28\xca\x2c\x4b\x2c\x49\xd5\xe7\x4a\x2a\xcd\xcc\x49\xd1\xe7\xca\x4b\x82\x32\x52\x32\x8b\x4b\x40\x5c\x08\xad\x97\x97\xa4\x9b\x5e\x94\x98\x92\x93\xaa\xcf\x05\x08\x00\x00\xff\xff\xf9\x46\x40\x07\x3d\x00\x00\x00")

func gitignoreGlobalNetbeansGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalNetbeansGitignore,
		"gitignore/Global/NetBeans.gitignore",
	)
}

func gitignoreGlobalNetbeansGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalNetbeansGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/NetBeans.gitignore", size: 61, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalNinjaGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xcb\xcb\xcc\xcb\x4a\x8c\x4f\x49\x2d\x28\xe6\x82\xb2\x73\xf2\xd3\xb9\x00\x01\x00\x00\xff\xff\xee\x9e\xc8\x72\x17\x00\x00\x00")

func gitignoreGlobalNinjaGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalNinjaGitignore,
		"gitignore/Global/Ninja.gitignore",
	)
}

func gitignoreGlobalNinjaGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalNinjaGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Ninja.gitignore", size: 23, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalNotepadppGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcb\x2f\x49\x2d\x48\x4c\xd1\xd6\x56\x48\x4a\x4c\xce\x2e\x2d\x28\x56\x50\xe6\xe5\xd2\xd2\x4b\x4a\xcc\xe6\xe5\x02\x04\x00\x00\xff\xff\x7b\xcd\x03\x1c\x1e\x00\x00\x00")

func gitignoreGlobalNotepadppGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalNotepadppGitignore,
		"gitignore/Global/NotepadPP.gitignore",
	)
}

func gitignoreGlobalNotepadppGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalNotepadppGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/NotepadPP.gitignore", size: 30, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalOttoGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xcb\x2f\x29\xc9\xd7\xe7\x02\x04\x00\x00\xff\xff\x9a\x0c\x01\xa2\x07\x00\x00\x00")

func gitignoreGlobalOttoGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalOttoGitignore,
		"gitignore/Global/Otto.gitignore",
	)
}

func gitignoreGlobalOttoGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalOttoGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Otto.gitignore", size: 7, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\x3f\x4f\xc4\x30\x0c\x05\xf0\x3d\x9f\xc2\x52\x07\x16\x92\x9c\xd8\xa8\xd0\x49\x2c\x30\x32\x00\x33\x4a\x13\x37\xb5\x94\xc6\x55\xec\x0c\xf7\xed\xd1\xfd\x29\x20\xc6\x44\xef\xfd\x9e\x87\x01\x5e\x0b\x4f\xa1\x94\x13\x7c\x0a\xce\xbd\x40\x26\xa5\x5c\xb9\xa1\x18\xf3\xb1\x90\x40\xa2\x86\x51\xb9\x9d\x20\x72\xd5\x40\x55\x20\xef\x9d\xfe\xbf\x73\x6f\xd0\x65\x07\x6f\xef\x56\x36\x8c\x34\x53\x84\x50\x13\x60\x22\xe5\x06\xfb\x9f\x33\xe6\x85\x1b\xac\xdc\x10\xb8\xde\xb8\x3f\xca\x68\x9e\x16\xd5\x4d\x46\xef\x17\x2c\x9b\xcb\xa4\x4b\x9f\x5c\xe4\xd5\x87\xa6\x14\x0b\x8a\xbf\x44\xa9\x66\x3b\xd3\xf9\x39\xc4\x86\x41\xd1\x06\x7b\xd5\xec\x8f\x76\x34\xe6\xb9\x26\x08\x90\x99\x13\x4c\x85\x33\x6c\x2c\x0a\x61\xe2\xae\x70\x87\xeb\x6d\x6d\xf4\x3e\xf4\xdc\x45\xcb\x65\xe8\x1c\xf4\x0f\x87\xc3\xa3\xbf\x82\x5f\xbf\xe7\x1d\xcd\x77\x00\x00\x00\xff\xff\x8b\x1d\x24\x5f\x38\x01\x00\x00")

func gitignoreGlobalReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalReadmeMd,
		"gitignore/Global/README.md",
	)
}

func gitignoreGlobalReadmeMd() (*asset, error) {
	bytes, err := gitignoreGlobalReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/README.md", size: 312, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalRedcarGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x4a\x4d\x49\x4e\x2c\xe2\x02\x04\x00\x00\xff\xff\xfb\x2a\xf8\x5b\x08\x00\x00\x00")

func gitignoreGlobalRedcarGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalRedcarGitignore,
		"gitignore/Global/Redcar.gitignore",
	)
}

func gitignoreGlobalRedcarGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalRedcarGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Redcar.gitignore", size: 8, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalRedisGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\x4c\xcf\xcb\x2f\x4a\x55\x28\x4a\x4d\xc9\x2c\x56\x48\xca\xcc\x4b\x2c\xaa\x54\x48\x29\xcd\x2d\x50\xd0\x00\x91\x7a\x45\x29\x49\x9a\x0a\x69\x99\x39\xa9\xc5\x5c\x5c\x5a\x20\x1e\x17\x20\x00\x00\xff\xff\xf9\xfc\x44\x12\x33\x00\x00\x00")

func gitignoreGlobalRedisGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalRedisGitignore,
		"gitignore/Global/Redis.gitignore",
	)
}

func gitignoreGlobalRedisGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalRedisGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Redis.gitignore", size: 51, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalSbtGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xb1\x4a\xc6\x40\x0c\x00\xe0\x3d\x4f\x51\xe8\x26\xf4\xb2\x3b\x8a\xe0\x03\xfc\xee\x72\xcd\xc5\x6b\x24\xbd\x94\x24\xb5\xf8\xf6\xe2\x20\x1d\x3f\xf8\xe6\xe9\x21\xfb\xa1\x3c\xbd\x9c\xa2\x6d\x7a\x37\x53\x98\xa7\x2d\xf3\x78\x46\xbc\xae\xab\x04\x55\xad\x4b\xac\x59\xcc\x3b\x3a\x2b\xd7\x60\x6c\x46\x81\x6f\x9c\x29\xa3\x2f\x8f\xac\x9e\xdc\xf0\x55\x9c\x29\xcd\x85\xa3\x6c\xb9\xeb\x4c\x36\x3e\xa5\x9f\xfe\x97\xbe\xd9\x43\x6c\x2c\x64\x23\xdd\x14\xa0\x49\x24\x3e\x41\x56\xef\x9c\x08\x2a\xeb\xc7\x5e\x47\xed\xdc\x10\xc2\xe9\xc6\xe1\xf6\xc5\x94\xb8\x9a\xe5\xad\x43\xcf\x2e\x23\xf0\xdf\x50\x36\x89\x34\xff\x81\x42\x95\x36\x86\xa2\xb2\x22\xfc\x06\x00\x00\xff\xff\x5b\x45\x4d\x4c\xe0\x00\x00\x00")

func gitignoreGlobalSbtGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalSbtGitignore,
		"gitignore/Global/SBT.gitignore",
	)
}

func gitignoreGlobalSbtGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalSbtGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/SBT.gitignore", size: 224, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalSvnGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x2e\xcb\xd3\xe7\x02\x04\x00\x00\xff\xff\xe3\x97\xc2\xcc\x06\x00\x00\x00")

func gitignoreGlobalSvnGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalSvnGitignore,
		"gitignore/Global/SVN.gitignore",
	)
}

func gitignoreGlobalSvnGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalSvnGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/SVN.gitignore", size: 6, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalSlickeditGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x6e\xeb\x30\x0c\x05\xf7\x3a\xc5\x03\xbc\xfb\xc0\xcf\x2d\x7a\x82\x9e\x80\x96\x68\x9b\x89\x20\x0a\x22\x15\x43\xb7\x2f\xe4\x34\x68\x17\xdd\x08\x6f\x21\xce\xcc\x82\xcf\x2c\xf1\xf1\x91\xc4\x71\x6a\x7b\x58\xa5\xc8\xa0\x92\x50\x9b\xde\x39\x3a\x36\xc9\x6c\xa0\xc6\x90\xbd\x68\xe3\x84\x75\x20\xf1\x46\x3d\x3b\x56\x8e\xd4\x8d\xc3\x02\x1f\x55\x22\xe5\x3c\xe0\x07\x8f\xeb\x7f\xd4\x62\x92\x78\x9e\xb8\x62\x65\x24\x7e\x72\xd6\xca\xed\xbf\x55\x8e\xb2\x49\xbc\x4c\x45\x1d\x95\x9a\x43\x37\x50\x58\xde\xe6\x5b\xf8\x77\x7b\xd6\xf3\x7a\xef\x21\xfc\x5d\x7a\x88\xb9\xb6\x71\x71\x9c\xf6\x77\x6d\x3e\x69\xd8\x0c\x70\x92\x82\x6e\xbf\x94\x61\x41\x22\x27\x98\xbe\x4a\xed\xd0\x9e\x5f\x11\x2b\x63\xd2\x38\x41\x0a\x08\x8d\xab\x9a\x4c\xfc\x77\xca\x94\xf5\x9f\x39\x97\xef\xe1\x2b\x00\x00\xff\xff\xd5\xa5\xf4\x61\x43\x01\x00\x00")

func gitignoreGlobalSlickeditGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalSlickeditGitignore,
		"gitignore/Global/SlickEdit.gitignore",
	)
}

func gitignoreGlobalSlickeditGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalSlickeditGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/SlickEdit.gitignore", size: 323, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalStataGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3d\x0f\x14\x21\x10\x86\x7b\x7e\xc5\x24\xdb\x6d\x22\x1b\x8d\xd5\xb5\x16\xda\x5b\x59\xce\xc1\x2c\x3b\x06\x18\x02\x83\x7b\xf7\xef\x0d\xdc\x6a\x2e\xc6\xea\xd9\x8f\x87\xf7\x65\x66\x01\x1b\x58\x39\x64\xa9\x04\x3b\x47\x82\x5d\x2a\x04\x56\x28\x55\x7e\x92\xd3\x06\x4e\xb2\x22\x67\xce\x01\xbe\x2b\x2a\x4e\xad\x99\x05\xbe\x48\x4a\x54\x1d\x63\x84\xa6\xa8\xdc\x94\xdd\x78\x96\x5d\x4f\xac\x74\x83\x43\xb5\xdc\xb6\xed\x3c\x4f\x3b\x04\xb4\x4e\x92\x31\xcb\x15\xe3\x51\xb1\x91\x02\x66\x0f\xd2\xb5\x74\xbd\x92\x57\xeb\x15\xcd\x6a\x43\x39\xcc\x6a\xa3\x04\xb3\xda\x96\x5c\x1c\xd0\x52\x27\x1a\xcd\xa4\xaf\x15\xcb\xc1\x0e\xe8\x51\xa4\x5e\xe7\x61\xaf\x92\x5e\x1d\x7f\xbb\x9c\xa4\x34\x7a\xc2\xf0\x2f\xfb\xff\xf7\xdb\x12\xe6\x8e\xb1\x7d\xfc\xbc\x85\x0f\x9f\xa6\xff\xd2\x6d\xf1\xbb\x59\xcc\x02\x3f\xa4\x43\xc2\x27\xa0\xbf\xf2\xfe\xed\x57\x81\xa7\xf4\xfa\xb6\x59\x0b\xdf\xe4\xa4\x5f\x54\xc7\x0f\x68\x87\xf4\xe8\xe1\x4e\x66\x01\x1c\x9b\x02\x3d\x50\x41\x0f\x6e\x70\x72\x8c\x40\x0f\x17\xbb\x27\xc0\x18\x81\x13\x06\x7a\x1f\x6c\x6a\x09\x39\x83\xe7\x4a\x4e\xa5\x3e\x47\x4e\xf6\xd0\xfa\xfd\xcf\x27\xa6\x66\xcd\x02\xab\x2d\x6d\x82\x2e\x9e\x69\x7f\xbd\x5f\x9c\x33\x0d\xe6\x30\xa9\xbc\x9b\xdf\x01\x00\x00\xff\xff\x8f\x6a\x74\xd3\x13\x02\x00\x00")

func gitignoreGlobalStataGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalStataGitignore,
		"gitignore/Global/Stata.gitignore",
	)
}

func gitignoreGlobalStataGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalStataGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Stata.gitignore", size: 531, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalSublimetextGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xbb\x8e\xdc\x30\x0c\xec\xfd\x15\x04\xdc\x05\xb1\xb7\x4f\x9b\x22\x29\x0f\xc8\xf5\x07\x59\xa6\x25\xde\xca\xa2\x40\x52\xb8\xec\xdf\x07\xf2\x63\x17\xc1\x5e\xd2\xce\x90\x33\x23\x8e\x7a\xf0\xce\x47\x84\x85\x12\x2a\x2c\x2c\xa0\x75\x4a\xb4\x22\x18\xfe\xb6\xee\xcb\x68\x6b\x72\x39\x54\x17\x70\xdc\x26\x37\xe8\x45\x70\x41\xc1\xec\x51\xef\xa8\xda\x6b\xc4\xf5\x9c\xea\x7a\xf8\x60\xb9\x6a\x71\xfe\x14\x77\x82\x50\x15\x65\xd0\x82\x9e\x16\xf2\x6d\x69\x37\x1b\xee\xb3\x6d\xb1\x08\xbf\xa3\xb7\x63\x4d\x23\xd7\x34\xc3\x84\xe0\x23\xfa\x2b\xce\x40\xd9\x18\x2c\x22\x08\x16\x56\x32\x96\xdb\x57\xa8\x39\xa1\x2a\x38\x50\x0a\xb9\xa9\xbb\x6c\xbb\x56\x61\x31\xe2\x0c\xbc\x80\xe7\x6c\x42\x53\x35\x16\x85\x0f\x4a\xa9\xf1\x93\x9b\xd2\x0d\x32\x5b\xf3\xa8\x4a\x39\xc0\xaf\x3d\xd6\x6b\x3b\x41\x0f\x8f\x98\x47\xb2\x16\x52\x17\x2b\x4d\x6f\xa1\x50\xc5\x6d\x06\x2d\x6f\xd7\xf0\x61\xc7\xc7\x77\xe5\xdc\x66\x5f\x9c\xbf\xba\x80\xbb\x3d\x27\x38\x0f\xb0\xbf\xb0\x3b\xe9\xef\x3b\x3d\x26\xa7\x36\x48\xcd\x4f\x84\x77\x43\x22\xb5\xcf\xf0\xa9\xe6\x39\xe1\x13\xa3\x37\x35\x5c\x87\x7f\x0f\x6c\x6d\x5d\x3e\x53\xf4\x28\xa6\xcf\xcc\x8a\x12\x70\xfe\x8f\xe2\x56\xf1\x83\x66\xf5\x72\x2b\xc6\x0f\x68\xf4\x62\xdd\x14\xdf\x6a\x26\xcf\x33\xbe\xb5\x8a\x50\x8c\xee\x7f\xa9\xeb\xcf\x02\x86\x40\x16\xeb\x04\xe5\xf0\x50\x63\x69\x3f\x09\x0e\xdc\xf8\x8a\x19\x28\x83\x45\xd2\xfd\xfe\x3d\x44\xb3\xa2\xdf\x2e\x97\x63\xe9\x38\xfa\x48\x7c\x22\x7a\xd1\xbf\xe4\xbb\x1f\x64\x3f\xeb\x74\x6f\x59\xd1\x8c\x72\xd0\xee\x4f\x00\x00\x00\xff\xff\x05\x7c\x54\xc0\x1d\x03\x00\x00")

func gitignoreGlobalSublimetextGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalSublimetextGitignore,
		"gitignore/Global/SublimeText.gitignore",
	)
}

func gitignoreGlobalSublimetextGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalSublimetextGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/SublimeText.gitignore", size: 797, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalSynopsysvcsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x4b\x6f\xdb\x30\x0c\xbe\xeb\x57\x7c\x80\x2f\x7d\x2c\xce\xbd\xc8\x0a\x0c\x49\xb1\x15\xe8\x2e\x7b\xa4\xc7\x42\x96\x28\x5b\xa8\x2c\x05\xa2\xec\x2c\xff\x7e\xa0\x9c\xa6\xc3\xb6\x8b\x10\xc6\xfc\x48\x7e\x8f\x06\xcf\x7a\x26\x97\xf2\x08\x79\x74\x61\x75\xd3\xce\xc6\xca\x7b\x90\x97\x96\xc2\xb1\xed\x94\x6a\xb0\x23\xa7\xa7\x50\x10\xf5\x48\x48\x0e\x65\x20\xb0\x1f\xa7\xa0\x8b\x4f\x11\xf4\x8b\xcc\x54\x74\x17\xa8\x05\x3e\xc1\x7a\xe7\x28\x53\x3c\xf7\x1b\x1d\xd1\x11\x54\x03\x3e\x90\xf1\xce\x93\xc5\xd1\x97\x01\x65\xf0\x0c\x3e\xfa\x62\x06\x5c\xc9\x48\xcd\x9c\x8c\xd7\x85\x2c\xac\xf6\xd6\x67\x58\x5d\x74\xa7\x99\x96\x49\x9e\x65\x8a\x0e\x9c\x50\xf4\x2b\x45\xb8\x9c\x46\x0c\x94\xe9\xfa\x0e\x58\x25\x6c\x0e\xba\x0c\xf7\xeb\x8d\xf3\x81\x04\x71\xaf\xd8\x8f\xb3\x30\xf8\x4c\x91\x72\x9d\xec\x52\xc6\x9e\xb2\x0f\xa9\x87\x8e\x16\xfb\x2f\xbb\x27\x94\x74\x80\x49\xd1\xf9\x9e\x2b\xa4\x5d\xf6\xaf\xcf\x45\xd7\xd6\x42\x35\x78\x8c\x2e\x6b\x2e\x79\x32\x65\xca\x84\x48\x86\x98\x75\x3e\xa1\x24\x98\xb4\x3a\x8b\x42\xf8\x7e\xe2\x42\xe3\x16\x63\xb2\x14\x78\xe1\xab\x9a\xb7\xc5\xeb\xba\x74\xf9\x26\x92\x45\xe8\x50\x28\x47\x41\x5a\x9f\xc9\x94\x94\x4f\x18\xf5\x49\x84\xfb\x8f\x6a\xa2\x65\xd5\x4d\x68\x7f\xb5\x3e\x7f\xdc\x5c\x60\x2f\x55\x03\x65\x38\x9b\x7a\xf1\x53\xea\x21\x7a\x60\x55\x6d\x73\x29\x84\x74\xf4\xb1\x7f\x53\x5e\x4b\xcd\x72\xff\xb2\xe8\xb4\xb4\x09\xa2\x0c\xba\xe0\xe8\x43\x40\x47\xaa\xc1\xc4\x64\xa5\xef\x98\x7d\x21\xc1\x61\x14\xf2\x3d\xf1\x62\xc4\x7b\x22\xe4\xac\x80\x3f\x6c\xb8\x69\x43\xea\xe5\x9a\x6d\x9a\x29\xeb\x9e\x90\x89\xa7\x50\x18\x57\xfd\xc5\x99\x4a\x6f\xca\xfd\x75\xf5\xe5\x62\x7d\x48\xa6\x0e\x6d\x81\x1f\x43\xcd\xd1\x3f\x1c\x24\x62\x35\x16\x1d\xd5\x2b\xef\x20\x73\xb0\x92\x08\x6d\xcc\x79\xe5\xcb\x45\xa2\xfb\x76\xb6\xdd\x62\xed\x6c\xbb\xb5\x9a\x72\xff\x8d\x0e\x29\x97\x2a\xd8\x6e\xff\x50\x0f\xf8\xb9\x7d\x7a\x44\xa6\xb0\xa4\xc6\x07\xe2\x56\xed\xf6\x0f\xf5\xd7\x5a\x4d\x26\xf8\xf6\x95\x4e\x82\x78\x1e\x28\x56\xd5\x2c\xb1\xef\xa3\xe4\x94\x82\xee\xd2\x7b\xe0\x76\x75\xf5\xf6\xc3\x5f\x16\x54\x95\x3d\xc3\x64\x92\x56\xd5\x2c\x1a\x58\x32\x41\xe7\x4a\x9a\x2b\x7c\xbb\xde\xde\xde\xc2\x4d\xd1\xd4\xff\x5a\x35\x9b\x97\xc1\x66\x6e\x07\xf5\x3b\x00\x00\xff\xff\x44\xbc\x0b\x5f\xcb\x03\x00\x00")

func gitignoreGlobalSynopsysvcsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalSynopsysvcsGitignore,
		"gitignore/Global/SynopsysVCS.gitignore",
	)
}

func gitignoreGlobalSynopsysvcsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalSynopsysvcsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/SynopsysVCS.gitignore", size: 971, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalTagsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\xb1\x0a\xc2\x30\x10\x86\xf7\x7b\x8a\x2b\x2e\x0a\xd2\x3e\x43\xa7\xd3\x41\x11\x53\x07\xc7\x34\x3d\x43\x21\xe4\x4a\x13\x07\xdf\x5e\x72\xa9\xe0\xf2\xfd\xf9\x73\x1f\xff\x0e\xcf\x3e\xca\xca\x98\xad\x4f\xe8\x56\xb6\x99\x27\x1c\x3f\xc8\xe5\xe3\x88\xae\x86\xd7\xf3\x9e\xae\x0f\xf4\x41\x46\x1b\x0e\x68\xe3\x84\x2e\x39\x59\x18\x86\x9e\x0c\xb4\xca\xa6\xb0\x83\xa2\x43\xab\x6c\x0a\x3b\xd0\x85\xf6\x35\x07\x4e\x40\xaa\xd2\xbd\xc6\xad\x1f\x4e\x40\xe6\x79\x31\x50\xf7\x36\x6b\x2b\xf2\xce\xbf\xe7\x1c\xff\xdb\x22\xda\xe0\x1b\x00\x00\xff\xff\x26\x3f\xcc\xad\xc3\x00\x00\x00")

func gitignoreGlobalTagsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalTagsGitignore,
		"gitignore/Global/Tags.gitignore",
	)
}

func gitignoreGlobalTagsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalTagsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Tags.gitignore", size: 195, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalTextmateGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\xc9\x2d\x28\xca\xcf\xe2\x82\x31\x52\x93\x4b\xb8\x4a\x72\x4b\x12\xd3\x8b\xb9\x00\x01\x00\x00\xff\xff\x36\x23\xd5\x9c\x1c\x00\x00\x00")

func gitignoreGlobalTextmateGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalTextmateGitignore,
		"gitignore/Global/TextMate.gitignore",
	)
}

func gitignoreGlobalTextmateGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalTextmateGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/TextMate.gitignore", size: 28, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalTortoisegitGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\x28\xca\xcf\x4a\x4d\x2e\xd1\xcd\x49\x2d\x4b\xcd\x51\x28\x4e\x2d\x29\xc9\xcc\x4b\x2f\xe6\xd2\xd7\x2b\x49\xcf\x2c\x49\xce\xcf\x4b\xcb\x4c\xe7\x02\x04\x00\x00\xff\xff\x87\x0b\xb6\x1b\x26\x00\x00\x00")

func gitignoreGlobalTortoisegitGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalTortoisegitGitignore,
		"gitignore/Global/TortoiseGit.gitignore",
	)
}

func gitignoreGlobalTortoisegitGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalTortoisegitGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/TortoiseGit.gitignore", size: 38, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalVagrantGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x4b\x4c\x2f\x4a\xcc\x2b\xd1\xe7\x02\x04\x00\x00\xff\xff\xfc\x50\x87\xfb\x0a\x00\x00\x00")

func gitignoreGlobalVagrantGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalVagrantGitignore,
		"gitignore/Global/Vagrant.gitignore",
	)
}

func gitignoreGlobalVagrantGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalVagrantGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Vagrant.gitignore", size: 10, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalVimGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xc9\x31\x0a\x03\x21\x10\x85\xe1\x7e\x4e\x31\x60\xb7\xa0\x97\x49\x29\x12\x1e\x64\x62\x84\xac\x8a\x33\x59\x49\x8a\x9c\x3d\xc5\x62\x93\xea\xf1\xfe\xcf\xb1\x4e\x74\x8a\xe1\x9a\xb6\xa0\x11\xfe\x48\x11\xfe\x93\x56\x99\x11\xbe\x9f\xef\x5f\x97\x39\x56\x51\x2d\xad\xd2\xe5\xdc\x70\x94\x9d\x1c\x9b\xec\xbd\x0d\x8c\x37\x85\x2a\x36\xe6\xa3\xa8\xd1\xf6\x25\xc7\x78\x59\xf3\x59\xaa\x0c\x98\xdc\xd8\x90\xf9\x5e\x9e\xa2\x64\xc8\x4a\xbf\x00\x00\x00\xff\xff\xe1\x9c\x6d\x1c\x93\x00\x00\x00")

func gitignoreGlobalVimGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalVimGitignore,
		"gitignore/Global/Vim.gitignore",
	)
}

func gitignoreGlobalVimGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalVimGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Vim.gitignore", size: 147, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalVirtualenvGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\xbb\x0a\xc2\x30\x14\x80\xe1\xfd\x3c\x45\xa1\x73\x2e\x88\x17\x74\x74\x13\x1c\x04\xc1\x25\x64\x48\xd3\xd4\x1e\x4d\x4f\x42\x92\x06\xea\xd3\x8b\x22\x4e\xff\xb7\xfc\x6d\x73\xc3\x54\x66\xe3\x1d\x55\x68\x9b\xb1\x94\x78\x10\x02\xcd\xf4\x72\x3d\xb7\x61\x12\x2b\x29\xf7\x42\x6e\x84\xdc\x09\xc3\x62\xc2\xc9\x25\x16\x88\xd5\xff\x25\x80\x5f\x96\x32\x06\x02\x75\xec\x34\x12\xa8\x13\x6a\xb2\x7e\xee\x1d\xa8\xb3\xd7\xd8\xfd\xb2\x5d\x7f\x11\xac\xf1\xa0\xae\x59\xdb\x84\xb1\x64\x88\x4b\x75\x54\xb9\x1d\xee\xc0\x3f\x82\x88\x91\x65\xe7\x07\x3b\x3a\xfb\xe4\x8f\x1c\x08\xde\x01\x00\x00\xff\xff\x23\x5a\x31\x9d\xa6\x00\x00\x00")

func gitignoreGlobalVirtualenvGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalVirtualenvGitignore,
		"gitignore/Global/VirtualEnv.gitignore",
	)
}

func gitignoreGlobalVirtualenvGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalVirtualenvGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/VirtualEnv.gitignore", size: 166, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalVisualstudiocodeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\x2b\x4e\xce\x4f\x49\xd5\xd7\xe2\x52\x84\x31\x8b\x53\x4b\x4a\x32\xf3\xd2\x8b\xf5\xb2\x8a\xf3\xf3\x10\xc2\x25\x89\xc5\xd9\xe8\x62\x39\x89\xa5\x79\xc9\x19\x68\x82\xa9\x15\x25\xa9\x79\xc5\x99\xf9\x79\x50\xd5\x80\x00\x00\x00\xff\xff\x3e\xb4\xc7\x9c\x63\x00\x00\x00")

func gitignoreGlobalVisualstudiocodeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalVisualstudiocodeGitignore,
		"gitignore/Global/VisualStudioCode.gitignore",
	)
}

func gitignoreGlobalVisualstudiocodeGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalVisualstudiocodeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/VisualStudioCode.gitignore", size: 99, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalWebmethodsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\x31\x0e\xc2\x30\x0c\x85\xe1\xbd\x47\xc9\x92\x85\x0b\x20\x21\x24\xd6\x76\x28\xab\x49\xac\x28\x6a\x12\x5b\xb6\x03\xe2\xf6\x5c\x00\x77\xfe\xf2\x3f\x29\x0e\x21\x3e\x86\x61\x11\xb0\x4a\x63\x43\x79\xa3\xc4\x0c\x06\x6a\x24\x18\x97\xff\xfe\x72\xe0\x46\x69\x76\x1c\xb6\x9d\xc4\xad\x7a\x75\xa3\xa2\x0e\x09\x72\xab\x09\xcc\x1b\xd5\x7c\x78\x32\x99\x49\xcc\xd1\xc9\xd9\x1f\x9d\x8a\x72\x37\x5e\x89\xbc\xfc\x83\xde\x5f\xf6\xbe\x22\x93\x56\x23\xf9\x5e\x9c\x37\xcf\xeb\xd9\x9d\x18\xd2\x01\x05\x35\xee\x3d\xc4\xe5\x17\x00\x00\xff\xff\xfa\xae\xfc\xb3\xa8\x01\x00\x00")

func gitignoreGlobalWebmethodsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalWebmethodsGitignore,
		"gitignore/Global/WebMethods.gitignore",
	)
}

func gitignoreGlobalWebmethodsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalWebmethodsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/WebMethods.gitignore", size: 424, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalWindowsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\x05\xf7\xe4\x83\xfa\x0f\x76\x5d\x30\x94\x1e\x4c\xa1\xf4\x54\x64\x69\x1d\x2d\x96\x57\x46\x2b\x27\xe4\xef\x83\x44\x02\x81\x5c\x86\x61\x78\x0f\xa6\x81\x5f\x62\x17\x2f\x02\xd9\x1f\xdb\xcc\x86\x02\x58\x63\x3d\xc2\x42\x01\x45\xfd\x94\x55\xb4\x9b\x15\xfa\xfc\xd2\xff\xcf\x24\xd9\x94\x45\x35\xf0\x19\x83\xc3\x04\x36\xf2\x42\xa7\xaa\xab\x0f\x94\x35\xc7\x5d\x13\x53\x21\x26\xb4\x57\x1b\x10\x3a\x62\x38\x04\x1d\x44\xae\x1c\x88\x37\x09\x45\xbd\x4d\x43\xff\xd7\x7f\x0d\xba\x1b\xbf\xdf\x8b\xf0\xf8\x36\xb2\x64\x13\x02\xa6\xfb\xab\x56\x5b\x33\xab\x56\x6f\x42\x35\xb7\x9a\xfb\xb3\x22\x3e\xa6\x6c\x8f\x5c\xe0\xc0\xab\xba\x05\x00\x00\xff\xff\xe8\xd6\x57\x23\xe9\x00\x00\x00")

func gitignoreGlobalWindowsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalWindowsGitignore,
		"gitignore/Global/Windows.gitignore",
	)
}

func gitignoreGlobalWindowsGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalWindowsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Windows.gitignore", size: 233, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalXcodeGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x3d\x4f\xf3\x40\x10\x84\xfb\xfb\x15\xfb\xca\xd2\x5b\x58\xc4\x16\xa1\xa3\x84\x48\x94\x29\x90\x10\xed\x7d\x4c\x9c\x05\xdb\x77\xda\xdb\x33\xfe\xf9\x28\x0e\xd8\x40\xb9\xcf\xb3\xa3\x99\x8a\x5e\x7d\x0c\x30\x95\xa9\xa8\x63\xe5\x6e\x8c\x02\xf2\x71\x54\x61\x57\x34\x4a\xbe\x27\xc1\x80\xc1\x41\x48\x23\x95\x14\xac\x82\x9e\xfa\xe8\x6c\xdf\x2e\xd9\x66\xcd\xdd\xd0\xd1\xbd\xc1\x2b\x4f\xd8\x3d\x6e\x98\xfe\xd3\xf3\x07\x9f\x74\x23\xc6\x54\x15\x3d\x14\xee\x03\x75\x18\x21\x56\x11\x8c\xbb\xdc\xad\x39\x40\x78\x42\x38\x58\xb5\xed\xf2\xf7\x62\x85\x63\xc9\x94\xa1\xca\x63\x97\x4d\xdd\x24\x37\x97\x0c\x31\xff\x02\x4e\xb6\xf4\xba\x82\xba\x19\x62\xc0\xed\x74\xb7\xa9\x6f\x70\x55\xfb\xbf\x6a\xbf\xa8\x04\xc9\xe9\xba\xfc\xe7\xc3\x6f\x3c\xfb\x4b\x47\x58\x87\x1d\xf5\xfc\x55\x39\x21\xec\x6c\xe6\x00\x53\x37\xb3\xf7\x67\xf8\xf7\x58\x74\x39\xb2\x1f\x5c\x5f\x90\x84\x47\x35\x9f\x01\x00\x00\xff\xff\x5e\x43\x43\x44\x6e\x01\x00\x00")

func gitignoreGlobalXcodeGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalXcodeGitignore,
		"gitignore/Global/Xcode.gitignore",
	)
}

func gitignoreGlobalXcodeGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalXcodeGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/Xcode.gitignore", size: 366, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalXilinxiseGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xbd\x8a\x1d\x31\x0c\x85\x7b\x3d\xc5\xc0\xed\x0c\xf1\x0d\x79\x83\xb0\x45\xaa\x40\x8a\xf4\xc6\x63\xeb\x7a\xbd\xeb\x3f\x2c\xcd\x1d\xef\xdb\x07\xcd\x8c\x43\xc8\x36\x1f\xe7\xc8\x32\x47\xd2\x6d\x89\x85\xb1\x67\xf4\xd1\x32\x2e\xeb\x16\x93\x5f\x1e\x31\x21\x81\xd2\x6b\x28\xc2\xc8\xc2\xe4\x41\x69\x97\xbd\x49\x35\x80\xd2\xbe\x3b\x50\x3a\x25\x01\x55\x50\x3a\x93\x3f\xf8\x0e\x4a\x17\x27\xba\x04\x77\xf0\xd4\x1d\x94\x6e\xd6\x1f\x3c\xb4\x7b\x08\xfb\x9b\x90\xf7\x01\x4a\xf7\x75\x3d\x28\x4d\xc4\x52\xa1\x0f\x69\xe5\xfd\xa4\x54\xb6\xd2\xeb\xc6\xc7\x78\x9b\xcc\x35\x5a\x14\x12\x83\x32\x6b\xe4\x80\x45\x8f\x7d\x15\x87\xe5\x49\xc8\x1c\x4b\x20\xfd\xca\x39\x81\x32\xd9\x36\x9d\x6d\x9b\xaa\x4f\x55\x42\xbe\xd4\xe8\x4d\xfe\x96\xe0\x8f\x53\x4c\xdf\xac\xd7\x8e\x9e\x97\xe2\x71\xd6\xfa\x7c\xa6\x2d\x67\xdb\x3f\x66\xcc\xb4\xe3\x70\x1b\xd9\x80\x97\x1e\xc4\xe7\x1f\xb8\x2d\xf1\xe7\xaf\xef\x2f\xbf\x97\x80\x05\xbb\x65\x9c\x67\x37\x31\x37\xeb\x78\xb5\xec\x5e\xb5\xdc\xfa\xf4\x7a\x50\xba\xa4\x99\x15\xd9\x33\x12\x4e\xef\xb2\x87\x1d\x57\xb6\xe9\xfd\x6f\x4b\x4e\x12\xf5\x52\x3b\x2e\x3f\xce\xa0\xda\x3f\x45\x0e\xbb\x7f\x7b\x62\x8f\xa9\x86\x23\x11\x6e\x4b\xeb\xf5\x0d\x1d\x7f\xd9\xa3\xc7\x4f\xfd\x4a\x87\x48\x08\xcd\xf6\x73\x39\x43\x6c\x39\x12\x47\x77\x5d\xfa\xff\xaa\xb9\xc6\x3a\x5f\xa7\x91\xa8\x39\x6f\x2b\x73\xd6\x7f\xc2\x6a\xf2\xd8\x49\x56\x74\xb5\x3c\x62\xb8\xc3\x48\x65\x18\xbb\x71\x35\x5f\xcd\xf0\xeb\x1d\x06\xf1\x1d\x4c\x09\xf5\x0e\x66\x64\x0a\x74\x87\x3f\x01\x00\x00\xff\xff\x71\x6d\x4c\x4b\xd3\x02\x00\x00")

func gitignoreGlobalXilinxiseGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalXilinxiseGitignore,
		"gitignore/Global/XilinxISE.gitignore",
	)
}

func gitignoreGlobalXilinxiseGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalXilinxiseGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/XilinxISE.gitignore", size: 723, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gitignoreGlobalMacosGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xc1\x6a\x23\x31\x0c\x06\xe0\xbb\x21\xef\x20\xd8\x5b\x60\x4d\xf6\x11\xb2\x0c\x81\xc0\xb2\x2d\x9d\x90\x53\x21\x38\x33\x7f\x6a\x13\xdb\x32\x92\x66\x42\xde\xbe\x4c\x48\xdb\x9b\xf1\x2f\x7e\x3e\x69\xed\xbb\xfe\xd4\x1b\x0b\x9c\xdf\xb6\x96\xd1\xf1\x74\xce\x70\xfe\x5f\xff\x32\x43\x24\x8d\x70\xee\x17\xed\x07\xae\x54\x26\x35\x42\x1d\xe9\x96\x2c\x92\xdd\x98\xde\xc5\x2d\xc9\x6a\xb5\xcc\x1c\xe2\x54\xce\x35\xa4\xac\xce\x9f\xd6\xcb\xcf\x2e\x65\x28\x59\x0c\x46\x25\x7d\x44\xa3\xd0\x1a\x82\x50\xaa\x64\x11\x24\xcc\x46\x7c\xa1\x40\x33\xe7\xa9\xc0\xf9\x8e\x87\xa9\xa0\xda\x1b\xe6\xa4\x89\xab\xfe\x3e\xfe\xd9\x6c\x9c\xbf\x28\x66\x54\xd3\xd1\xf9\xbe\xb1\xe5\xa5\xec\x19\x1d\x50\x1a\x4b\x90\xfb\xde\x50\xd4\xf9\x83\x04\x8d\x50\xe7\x8f\x8f\xce\x85\xe7\xd3\x50\xd5\xf9\x81\x8b\x0f\xcb\x8a\xde\x52\x41\x09\x43\x4c\x15\x7e\xe4\xca\xd6\x04\x8a\x6a\x8b\xb9\x4b\x82\xc1\x58\x12\x94\x1a\x1b\xaa\xa5\x90\xf3\x9d\x06\x41\x30\x8c\xc4\x95\x04\x85\x0d\xb4\xdd\xbd\x92\xc6\xf0\x73\xb9\xbf\x5f\x0f\xe8\xd5\xb8\xb9\xff\xb0\x1b\xcb\x95\x1e\x24\xda\x71\x1e\x21\xee\xdb\x4b\x4f\x70\x68\x63\xd2\xab\xfb\x0c\x00\x00\xff\xff\xc5\xaa\x7a\xa8\x89\x01\x00\x00")

func gitignoreGlobalMacosGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGlobalMacosGitignore,
		"gitignore/Global/macOS.gitignore",
	)
}

func gitignoreGlobalMacosGitignore() (*asset, error) {
	bytes, err := gitignoreGlobalMacosGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Global/macOS.gitignore", size: 393, mode: os.FileMode(420), modTime: time.Unix(1491455369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gitignore/Actionscript.gitignore": gitignoreActionscriptGitignore,
	"gitignore/Ada.gitignore": gitignoreAdaGitignore,
	"gitignore/Agda.gitignore": gitignoreAgdaGitignore,
	"gitignore/Android.gitignore": gitignoreAndroidGitignore,
	"gitignore/AppEngine.gitignore": gitignoreAppengineGitignore,
	"gitignore/AppceleratorTitanium.gitignore": gitignoreAppceleratortitaniumGitignore,
	"gitignore/ArchLinuxPackages.gitignore": gitignoreArchlinuxpackagesGitignore,
	"gitignore/Autotools.gitignore": gitignoreAutotoolsGitignore,
	"gitignore/C++.gitignore": gitignoreCGitignore,
	"gitignore/C.gitignore": gitignoreCGitignore2,
	"gitignore/CFWheels.gitignore": gitignoreCfwheelsGitignore,
	"gitignore/CMake.gitignore": gitignoreCmakeGitignore,
	"gitignore/CONTRIBUTING.md": gitignoreContributingMd,
	"gitignore/CUDA.gitignore": gitignoreCudaGitignore,
	"gitignore/CakePHP.gitignore": gitignoreCakephpGitignore,
	"gitignore/ChefCookbook.gitignore": gitignoreChefcookbookGitignore,
	"gitignore/Clojure.gitignore": gitignoreClojureGitignore,
	"gitignore/CodeIgniter.gitignore": gitignoreCodeigniterGitignore,
	"gitignore/CommonLisp.gitignore": gitignoreCommonlispGitignore,
	"gitignore/Composer.gitignore": gitignoreComposerGitignore,
	"gitignore/Concrete5.gitignore": gitignoreConcrete5Gitignore,
	"gitignore/Coq.gitignore": gitignoreCoqGitignore,
	"gitignore/CraftCMS.gitignore": gitignoreCraftcmsGitignore,
	"gitignore/D.gitignore": gitignoreDGitignore,
	"gitignore/DM.gitignore": gitignoreDmGitignore,
	"gitignore/Dart.gitignore": gitignoreDartGitignore,
	"gitignore/Delphi.gitignore": gitignoreDelphiGitignore,
	"gitignore/Drupal.gitignore": gitignoreDrupalGitignore,
	"gitignore/EPiServer.gitignore": gitignoreEpiserverGitignore,
	"gitignore/Eagle.gitignore": gitignoreEagleGitignore,
	"gitignore/Elisp.gitignore": gitignoreElispGitignore,
	"gitignore/Elixir.gitignore": gitignoreElixirGitignore,
	"gitignore/Elm.gitignore": gitignoreElmGitignore,
	"gitignore/Erlang.gitignore": gitignoreErlangGitignore,
	"gitignore/ExpressionEngine.gitignore": gitignoreExpressionengineGitignore,
	"gitignore/ExtJs.gitignore": gitignoreExtjsGitignore,
	"gitignore/Fancy.gitignore": gitignoreFancyGitignore,
	"gitignore/Finale.gitignore": gitignoreFinaleGitignore,
	"gitignore/ForceDotCom.gitignore": gitignoreForcedotcomGitignore,
	"gitignore/Fortran.gitignore": gitignoreFortranGitignore,
	"gitignore/FuelPHP.gitignore": gitignoreFuelphpGitignore,
	"gitignore/GWT.gitignore": gitignoreGwtGitignore,
	"gitignore/Gcov.gitignore": gitignoreGcovGitignore,
	"gitignore/GitBook.gitignore": gitignoreGitbookGitignore,
	"gitignore/Go.gitignore": gitignoreGoGitignore,
	"gitignore/Gradle.gitignore": gitignoreGradleGitignore,
	"gitignore/Grails.gitignore": gitignoreGrailsGitignore,
	"gitignore/Haskell.gitignore": gitignoreHaskellGitignore,
	"gitignore/IGORPro.gitignore": gitignoreIgorproGitignore,
	"gitignore/Idris.gitignore": gitignoreIdrisGitignore,
	"gitignore/Java.gitignore": gitignoreJavaGitignore,
	"gitignore/Jboss.gitignore": gitignoreJbossGitignore,
	"gitignore/Jekyll.gitignore": gitignoreJekyllGitignore,
	"gitignore/Joomla.gitignore": gitignoreJoomlaGitignore,
	"gitignore/Julia.gitignore": gitignoreJuliaGitignore,
	"gitignore/KiCad.gitignore": gitignoreKicadGitignore,
	"gitignore/Kohana.gitignore": gitignoreKohanaGitignore,
	"gitignore/LICENSE": gitignoreLicense,
	"gitignore/LabVIEW.gitignore": gitignoreLabviewGitignore,
	"gitignore/Laravel.gitignore": gitignoreLaravelGitignore,
	"gitignore/Leiningen.gitignore": gitignoreLeiningenGitignore,
	"gitignore/LemonStand.gitignore": gitignoreLemonstandGitignore,
	"gitignore/Lilypond.gitignore": gitignoreLilypondGitignore,
	"gitignore/Lithium.gitignore": gitignoreLithiumGitignore,
	"gitignore/Lua.gitignore": gitignoreLuaGitignore,
	"gitignore/Magento.gitignore": gitignoreMagentoGitignore,
	"gitignore/Maven.gitignore": gitignoreMavenGitignore,
	"gitignore/Mercury.gitignore": gitignoreMercuryGitignore,
	"gitignore/MetaProgrammingSystem.gitignore": gitignoreMetaprogrammingsystemGitignore,
	"gitignore/Nanoc.gitignore": gitignoreNanocGitignore,
	"gitignore/Nim.gitignore": gitignoreNimGitignore,
	"gitignore/Node.gitignore": gitignoreNodeGitignore,
	"gitignore/OCaml.gitignore": gitignoreOcamlGitignore,
	"gitignore/Objective-C.gitignore": gitignoreObjectiveCGitignore,
	"gitignore/Opa.gitignore": gitignoreOpaGitignore,
	"gitignore/OpenCart.gitignore": gitignoreOpencartGitignore,
	"gitignore/OracleForms.gitignore": gitignoreOracleformsGitignore,
	"gitignore/Packer.gitignore": gitignorePackerGitignore,
	"gitignore/Perl.gitignore": gitignorePerlGitignore,
	"gitignore/Phalcon.gitignore": gitignorePhalconGitignore,
	"gitignore/PlayFramework.gitignore": gitignorePlayframeworkGitignore,
	"gitignore/Plone.gitignore": gitignorePloneGitignore,
	"gitignore/Prestashop.gitignore": gitignorePrestashopGitignore,
	"gitignore/Processing.gitignore": gitignoreProcessingGitignore,
	"gitignore/PureScript.gitignore": gitignorePurescriptGitignore,
	"gitignore/Python.gitignore": gitignorePythonGitignore,
	"gitignore/Qooxdoo.gitignore": gitignoreQooxdooGitignore,
	"gitignore/Qt.gitignore": gitignoreQtGitignore,
	"gitignore/R.gitignore": gitignoreRGitignore,
	"gitignore/README.md": gitignoreReadmeMd,
	"gitignore/ROS.gitignore": gitignoreRosGitignore,
	"gitignore/Rails.gitignore": gitignoreRailsGitignore,
	"gitignore/RhodesRhomobile.gitignore": gitignoreRhodesrhomobileGitignore,
	"gitignore/Ruby.gitignore": gitignoreRubyGitignore,
	"gitignore/Rust.gitignore": gitignoreRustGitignore,
	"gitignore/SCons.gitignore": gitignoreSconsGitignore,
	"gitignore/Sass.gitignore": gitignoreSassGitignore,
	"gitignore/Scala.gitignore": gitignoreScalaGitignore,
	"gitignore/Scheme.gitignore": gitignoreSchemeGitignore,
	"gitignore/Scrivener.gitignore": gitignoreScrivenerGitignore,
	"gitignore/Sdcc.gitignore": gitignoreSdccGitignore,
	"gitignore/SeamGen.gitignore": gitignoreSeamgenGitignore,
	"gitignore/SketchUp.gitignore": gitignoreSketchupGitignore,
	"gitignore/Smalltalk.gitignore": gitignoreSmalltalkGitignore,
	"gitignore/Stella.gitignore": gitignoreStellaGitignore,
	"gitignore/SugarCRM.gitignore": gitignoreSugarcrmGitignore,
	"gitignore/Swift.gitignore": gitignoreSwiftGitignore,
	"gitignore/Symfony.gitignore": gitignoreSymfonyGitignore,
	"gitignore/SymphonyCMS.gitignore": gitignoreSymphonycmsGitignore,
	"gitignore/TeX.gitignore": gitignoreTexGitignore,
	"gitignore/Terraform.gitignore": gitignoreTerraformGitignore,
	"gitignore/Textpattern.gitignore": gitignoreTextpatternGitignore,
	"gitignore/TurboGears2.gitignore": gitignoreTurbogears2Gitignore,
	"gitignore/Typo3.gitignore": gitignoreTypo3Gitignore,
	"gitignore/Umbraco.gitignore": gitignoreUmbracoGitignore,
	"gitignore/Unity.gitignore": gitignoreUnityGitignore,
	"gitignore/UnrealEngine.gitignore": gitignoreUnrealengineGitignore,
	"gitignore/VVVV.gitignore": gitignoreVvvvGitignore,
	"gitignore/VisualStudio.gitignore": gitignoreVisualstudioGitignore,
	"gitignore/Waf.gitignore": gitignoreWafGitignore,
	"gitignore/WordPress.gitignore": gitignoreWordpressGitignore,
	"gitignore/Xojo.gitignore": gitignoreXojoGitignore,
	"gitignore/Yeoman.gitignore": gitignoreYeomanGitignore,
	"gitignore/Yii.gitignore": gitignoreYiiGitignore,
	"gitignore/ZendFramework.gitignore": gitignoreZendframeworkGitignore,
	"gitignore/Zephir.gitignore": gitignoreZephirGitignore,
	"gitignore/Global/Anjuta.gitignore": gitignoreGlobalAnjutaGitignore,
	"gitignore/Global/Ansible.gitignore": gitignoreGlobalAnsibleGitignore,
	"gitignore/Global/Archives.gitignore": gitignoreGlobalArchivesGitignore,
	"gitignore/Global/Bazaar.gitignore": gitignoreGlobalBazaarGitignore,
	"gitignore/Global/BricxCC.gitignore": gitignoreGlobalBricxccGitignore,
	"gitignore/Global/CVS.gitignore": gitignoreGlobalCvsGitignore,
	"gitignore/Global/Calabash.gitignore": gitignoreGlobalCalabashGitignore,
	"gitignore/Global/Cloud9.gitignore": gitignoreGlobalCloud9Gitignore,
	"gitignore/Global/CodeKit.gitignore": gitignoreGlobalCodekitGitignore,
	"gitignore/Global/DartEditor.gitignore": gitignoreGlobalDarteditorGitignore,
	"gitignore/Global/Dreamweaver.gitignore": gitignoreGlobalDreamweaverGitignore,
	"gitignore/Global/Dropbox.gitignore": gitignoreGlobalDropboxGitignore,
	"gitignore/Global/Eclipse.gitignore": gitignoreGlobalEclipseGitignore,
	"gitignore/Global/EiffelStudio.gitignore": gitignoreGlobalEiffelstudioGitignore,
	"gitignore/Global/Emacs.gitignore": gitignoreGlobalEmacsGitignore,
	"gitignore/Global/Ensime.gitignore": gitignoreGlobalEnsimeGitignore,
	"gitignore/Global/Espresso.gitignore": gitignoreGlobalEspressoGitignore,
	"gitignore/Global/FlexBuilder.gitignore": gitignoreGlobalFlexbuilderGitignore,
	"gitignore/Global/GPG.gitignore": gitignoreGlobalGpgGitignore,
	"gitignore/Global/JDeveloper.gitignore": gitignoreGlobalJdeveloperGitignore,
	"gitignore/Global/JetBrains.gitignore": gitignoreGlobalJetbrainsGitignore,
	"gitignore/Global/KDevelop4.gitignore": gitignoreGlobalKdevelop4Gitignore,
	"gitignore/Global/Kate.gitignore": gitignoreGlobalKateGitignore,
	"gitignore/Global/Lazarus.gitignore": gitignoreGlobalLazarusGitignore,
	"gitignore/Global/LibreOffice.gitignore": gitignoreGlobalLibreofficeGitignore,
	"gitignore/Global/Linux.gitignore": gitignoreGlobalLinuxGitignore,
	"gitignore/Global/LyX.gitignore": gitignoreGlobalLyxGitignore,
	"gitignore/Global/Matlab.gitignore": gitignoreGlobalMatlabGitignore,
	"gitignore/Global/Mercurial.gitignore": gitignoreGlobalMercurialGitignore,
	"gitignore/Global/MicrosoftOffice.gitignore": gitignoreGlobalMicrosoftofficeGitignore,
	"gitignore/Global/ModelSim.gitignore": gitignoreGlobalModelsimGitignore,
	"gitignore/Global/Momentics.gitignore": gitignoreGlobalMomenticsGitignore,
	"gitignore/Global/MonoDevelop.gitignore": gitignoreGlobalMonodevelopGitignore,
	"gitignore/Global/NetBeans.gitignore": gitignoreGlobalNetbeansGitignore,
	"gitignore/Global/Ninja.gitignore": gitignoreGlobalNinjaGitignore,
	"gitignore/Global/NotepadPP.gitignore": gitignoreGlobalNotepadppGitignore,
	"gitignore/Global/Otto.gitignore": gitignoreGlobalOttoGitignore,
	"gitignore/Global/README.md": gitignoreGlobalReadmeMd,
	"gitignore/Global/Redcar.gitignore": gitignoreGlobalRedcarGitignore,
	"gitignore/Global/Redis.gitignore": gitignoreGlobalRedisGitignore,
	"gitignore/Global/SBT.gitignore": gitignoreGlobalSbtGitignore,
	"gitignore/Global/SVN.gitignore": gitignoreGlobalSvnGitignore,
	"gitignore/Global/SlickEdit.gitignore": gitignoreGlobalSlickeditGitignore,
	"gitignore/Global/Stata.gitignore": gitignoreGlobalStataGitignore,
	"gitignore/Global/SublimeText.gitignore": gitignoreGlobalSublimetextGitignore,
	"gitignore/Global/SynopsysVCS.gitignore": gitignoreGlobalSynopsysvcsGitignore,
	"gitignore/Global/Tags.gitignore": gitignoreGlobalTagsGitignore,
	"gitignore/Global/TextMate.gitignore": gitignoreGlobalTextmateGitignore,
	"gitignore/Global/TortoiseGit.gitignore": gitignoreGlobalTortoisegitGitignore,
	"gitignore/Global/Vagrant.gitignore": gitignoreGlobalVagrantGitignore,
	"gitignore/Global/Vim.gitignore": gitignoreGlobalVimGitignore,
	"gitignore/Global/VirtualEnv.gitignore": gitignoreGlobalVirtualenvGitignore,
	"gitignore/Global/VisualStudioCode.gitignore": gitignoreGlobalVisualstudiocodeGitignore,
	"gitignore/Global/WebMethods.gitignore": gitignoreGlobalWebmethodsGitignore,
	"gitignore/Global/Windows.gitignore": gitignoreGlobalWindowsGitignore,
	"gitignore/Global/Xcode.gitignore": gitignoreGlobalXcodeGitignore,
	"gitignore/Global/XilinxISE.gitignore": gitignoreGlobalXilinxiseGitignore,
	"gitignore/Global/macOS.gitignore": gitignoreGlobalMacosGitignore,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gitignore": &bintree{nil, map[string]*bintree{
		"Actionscript.gitignore": &bintree{gitignoreActionscriptGitignore, map[string]*bintree{}},
		"Ada.gitignore": &bintree{gitignoreAdaGitignore, map[string]*bintree{}},
		"Agda.gitignore": &bintree{gitignoreAgdaGitignore, map[string]*bintree{}},
		"Android.gitignore": &bintree{gitignoreAndroidGitignore, map[string]*bintree{}},
		"AppEngine.gitignore": &bintree{gitignoreAppengineGitignore, map[string]*bintree{}},
		"AppceleratorTitanium.gitignore": &bintree{gitignoreAppceleratortitaniumGitignore, map[string]*bintree{}},
		"ArchLinuxPackages.gitignore": &bintree{gitignoreArchlinuxpackagesGitignore, map[string]*bintree{}},
		"Autotools.gitignore": &bintree{gitignoreAutotoolsGitignore, map[string]*bintree{}},
		"C++.gitignore": &bintree{gitignoreCGitignore, map[string]*bintree{}},
		"C.gitignore": &bintree{gitignoreCGitignore2, map[string]*bintree{}},
		"CFWheels.gitignore": &bintree{gitignoreCfwheelsGitignore, map[string]*bintree{}},
		"CMake.gitignore": &bintree{gitignoreCmakeGitignore, map[string]*bintree{}},
		"CONTRIBUTING.md": &bintree{gitignoreContributingMd, map[string]*bintree{}},
		"CUDA.gitignore": &bintree{gitignoreCudaGitignore, map[string]*bintree{}},
		"CakePHP.gitignore": &bintree{gitignoreCakephpGitignore, map[string]*bintree{}},
		"ChefCookbook.gitignore": &bintree{gitignoreChefcookbookGitignore, map[string]*bintree{}},
		"Clojure.gitignore": &bintree{gitignoreClojureGitignore, map[string]*bintree{}},
		"CodeIgniter.gitignore": &bintree{gitignoreCodeigniterGitignore, map[string]*bintree{}},
		"CommonLisp.gitignore": &bintree{gitignoreCommonlispGitignore, map[string]*bintree{}},
		"Composer.gitignore": &bintree{gitignoreComposerGitignore, map[string]*bintree{}},
		"Concrete5.gitignore": &bintree{gitignoreConcrete5Gitignore, map[string]*bintree{}},
		"Coq.gitignore": &bintree{gitignoreCoqGitignore, map[string]*bintree{}},
		"CraftCMS.gitignore": &bintree{gitignoreCraftcmsGitignore, map[string]*bintree{}},
		"D.gitignore": &bintree{gitignoreDGitignore, map[string]*bintree{}},
		"DM.gitignore": &bintree{gitignoreDmGitignore, map[string]*bintree{}},
		"Dart.gitignore": &bintree{gitignoreDartGitignore, map[string]*bintree{}},
		"Delphi.gitignore": &bintree{gitignoreDelphiGitignore, map[string]*bintree{}},
		"Drupal.gitignore": &bintree{gitignoreDrupalGitignore, map[string]*bintree{}},
		"EPiServer.gitignore": &bintree{gitignoreEpiserverGitignore, map[string]*bintree{}},
		"Eagle.gitignore": &bintree{gitignoreEagleGitignore, map[string]*bintree{}},
		"Elisp.gitignore": &bintree{gitignoreElispGitignore, map[string]*bintree{}},
		"Elixir.gitignore": &bintree{gitignoreElixirGitignore, map[string]*bintree{}},
		"Elm.gitignore": &bintree{gitignoreElmGitignore, map[string]*bintree{}},
		"Erlang.gitignore": &bintree{gitignoreErlangGitignore, map[string]*bintree{}},
		"ExpressionEngine.gitignore": &bintree{gitignoreExpressionengineGitignore, map[string]*bintree{}},
		"ExtJs.gitignore": &bintree{gitignoreExtjsGitignore, map[string]*bintree{}},
		"Fancy.gitignore": &bintree{gitignoreFancyGitignore, map[string]*bintree{}},
		"Finale.gitignore": &bintree{gitignoreFinaleGitignore, map[string]*bintree{}},
		"ForceDotCom.gitignore": &bintree{gitignoreForcedotcomGitignore, map[string]*bintree{}},
		"Fortran.gitignore": &bintree{gitignoreFortranGitignore, map[string]*bintree{}},
		"FuelPHP.gitignore": &bintree{gitignoreFuelphpGitignore, map[string]*bintree{}},
		"GWT.gitignore": &bintree{gitignoreGwtGitignore, map[string]*bintree{}},
		"Gcov.gitignore": &bintree{gitignoreGcovGitignore, map[string]*bintree{}},
		"GitBook.gitignore": &bintree{gitignoreGitbookGitignore, map[string]*bintree{}},
		"Global": &bintree{nil, map[string]*bintree{
			"Anjuta.gitignore": &bintree{gitignoreGlobalAnjutaGitignore, map[string]*bintree{}},
			"Ansible.gitignore": &bintree{gitignoreGlobalAnsibleGitignore, map[string]*bintree{}},
			"Archives.gitignore": &bintree{gitignoreGlobalArchivesGitignore, map[string]*bintree{}},
			"Bazaar.gitignore": &bintree{gitignoreGlobalBazaarGitignore, map[string]*bintree{}},
			"BricxCC.gitignore": &bintree{gitignoreGlobalBricxccGitignore, map[string]*bintree{}},
			"CVS.gitignore": &bintree{gitignoreGlobalCvsGitignore, map[string]*bintree{}},
			"Calabash.gitignore": &bintree{gitignoreGlobalCalabashGitignore, map[string]*bintree{}},
			"Cloud9.gitignore": &bintree{gitignoreGlobalCloud9Gitignore, map[string]*bintree{}},
			"CodeKit.gitignore": &bintree{gitignoreGlobalCodekitGitignore, map[string]*bintree{}},
			"DartEditor.gitignore": &bintree{gitignoreGlobalDarteditorGitignore, map[string]*bintree{}},
			"Dreamweaver.gitignore": &bintree{gitignoreGlobalDreamweaverGitignore, map[string]*bintree{}},
			"Dropbox.gitignore": &bintree{gitignoreGlobalDropboxGitignore, map[string]*bintree{}},
			"Eclipse.gitignore": &bintree{gitignoreGlobalEclipseGitignore, map[string]*bintree{}},
			"EiffelStudio.gitignore": &bintree{gitignoreGlobalEiffelstudioGitignore, map[string]*bintree{}},
			"Emacs.gitignore": &bintree{gitignoreGlobalEmacsGitignore, map[string]*bintree{}},
			"Ensime.gitignore": &bintree{gitignoreGlobalEnsimeGitignore, map[string]*bintree{}},
			"Espresso.gitignore": &bintree{gitignoreGlobalEspressoGitignore, map[string]*bintree{}},
			"FlexBuilder.gitignore": &bintree{gitignoreGlobalFlexbuilderGitignore, map[string]*bintree{}},
			"GPG.gitignore": &bintree{gitignoreGlobalGpgGitignore, map[string]*bintree{}},
			"JDeveloper.gitignore": &bintree{gitignoreGlobalJdeveloperGitignore, map[string]*bintree{}},
			"JetBrains.gitignore": &bintree{gitignoreGlobalJetbrainsGitignore, map[string]*bintree{}},
			"KDevelop4.gitignore": &bintree{gitignoreGlobalKdevelop4Gitignore, map[string]*bintree{}},
			"Kate.gitignore": &bintree{gitignoreGlobalKateGitignore, map[string]*bintree{}},
			"Lazarus.gitignore": &bintree{gitignoreGlobalLazarusGitignore, map[string]*bintree{}},
			"LibreOffice.gitignore": &bintree{gitignoreGlobalLibreofficeGitignore, map[string]*bintree{}},
			"Linux.gitignore": &bintree{gitignoreGlobalLinuxGitignore, map[string]*bintree{}},
			"LyX.gitignore": &bintree{gitignoreGlobalLyxGitignore, map[string]*bintree{}},
			"Matlab.gitignore": &bintree{gitignoreGlobalMatlabGitignore, map[string]*bintree{}},
			"Mercurial.gitignore": &bintree{gitignoreGlobalMercurialGitignore, map[string]*bintree{}},
			"MicrosoftOffice.gitignore": &bintree{gitignoreGlobalMicrosoftofficeGitignore, map[string]*bintree{}},
			"ModelSim.gitignore": &bintree{gitignoreGlobalModelsimGitignore, map[string]*bintree{}},
			"Momentics.gitignore": &bintree{gitignoreGlobalMomenticsGitignore, map[string]*bintree{}},
			"MonoDevelop.gitignore": &bintree{gitignoreGlobalMonodevelopGitignore, map[string]*bintree{}},
			"NetBeans.gitignore": &bintree{gitignoreGlobalNetbeansGitignore, map[string]*bintree{}},
			"Ninja.gitignore": &bintree{gitignoreGlobalNinjaGitignore, map[string]*bintree{}},
			"NotepadPP.gitignore": &bintree{gitignoreGlobalNotepadppGitignore, map[string]*bintree{}},
			"Otto.gitignore": &bintree{gitignoreGlobalOttoGitignore, map[string]*bintree{}},
			"README.md": &bintree{gitignoreGlobalReadmeMd, map[string]*bintree{}},
			"Redcar.gitignore": &bintree{gitignoreGlobalRedcarGitignore, map[string]*bintree{}},
			"Redis.gitignore": &bintree{gitignoreGlobalRedisGitignore, map[string]*bintree{}},
			"SBT.gitignore": &bintree{gitignoreGlobalSbtGitignore, map[string]*bintree{}},
			"SVN.gitignore": &bintree{gitignoreGlobalSvnGitignore, map[string]*bintree{}},
			"SlickEdit.gitignore": &bintree{gitignoreGlobalSlickeditGitignore, map[string]*bintree{}},
			"Stata.gitignore": &bintree{gitignoreGlobalStataGitignore, map[string]*bintree{}},
			"SublimeText.gitignore": &bintree{gitignoreGlobalSublimetextGitignore, map[string]*bintree{}},
			"SynopsysVCS.gitignore": &bintree{gitignoreGlobalSynopsysvcsGitignore, map[string]*bintree{}},
			"Tags.gitignore": &bintree{gitignoreGlobalTagsGitignore, map[string]*bintree{}},
			"TextMate.gitignore": &bintree{gitignoreGlobalTextmateGitignore, map[string]*bintree{}},
			"TortoiseGit.gitignore": &bintree{gitignoreGlobalTortoisegitGitignore, map[string]*bintree{}},
			"Vagrant.gitignore": &bintree{gitignoreGlobalVagrantGitignore, map[string]*bintree{}},
			"Vim.gitignore": &bintree{gitignoreGlobalVimGitignore, map[string]*bintree{}},
			"VirtualEnv.gitignore": &bintree{gitignoreGlobalVirtualenvGitignore, map[string]*bintree{}},
			"VisualStudioCode.gitignore": &bintree{gitignoreGlobalVisualstudiocodeGitignore, map[string]*bintree{}},
			"WebMethods.gitignore": &bintree{gitignoreGlobalWebmethodsGitignore, map[string]*bintree{}},
			"Windows.gitignore": &bintree{gitignoreGlobalWindowsGitignore, map[string]*bintree{}},
			"Xcode.gitignore": &bintree{gitignoreGlobalXcodeGitignore, map[string]*bintree{}},
			"XilinxISE.gitignore": &bintree{gitignoreGlobalXilinxiseGitignore, map[string]*bintree{}},
			"macOS.gitignore": &bintree{gitignoreGlobalMacosGitignore, map[string]*bintree{}},
		}},
		"Go.gitignore": &bintree{gitignoreGoGitignore, map[string]*bintree{}},
		"Gradle.gitignore": &bintree{gitignoreGradleGitignore, map[string]*bintree{}},
		"Grails.gitignore": &bintree{gitignoreGrailsGitignore, map[string]*bintree{}},
		"Haskell.gitignore": &bintree{gitignoreHaskellGitignore, map[string]*bintree{}},
		"IGORPro.gitignore": &bintree{gitignoreIgorproGitignore, map[string]*bintree{}},
		"Idris.gitignore": &bintree{gitignoreIdrisGitignore, map[string]*bintree{}},
		"Java.gitignore": &bintree{gitignoreJavaGitignore, map[string]*bintree{}},
		"Jboss.gitignore": &bintree{gitignoreJbossGitignore, map[string]*bintree{}},
		"Jekyll.gitignore": &bintree{gitignoreJekyllGitignore, map[string]*bintree{}},
		"Joomla.gitignore": &bintree{gitignoreJoomlaGitignore, map[string]*bintree{}},
		"Julia.gitignore": &bintree{gitignoreJuliaGitignore, map[string]*bintree{}},
		"KiCad.gitignore": &bintree{gitignoreKicadGitignore, map[string]*bintree{}},
		"Kohana.gitignore": &bintree{gitignoreKohanaGitignore, map[string]*bintree{}},
		"LICENSE": &bintree{gitignoreLicense, map[string]*bintree{}},
		"LabVIEW.gitignore": &bintree{gitignoreLabviewGitignore, map[string]*bintree{}},
		"Laravel.gitignore": &bintree{gitignoreLaravelGitignore, map[string]*bintree{}},
		"Leiningen.gitignore": &bintree{gitignoreLeiningenGitignore, map[string]*bintree{}},
		"LemonStand.gitignore": &bintree{gitignoreLemonstandGitignore, map[string]*bintree{}},
		"Lilypond.gitignore": &bintree{gitignoreLilypondGitignore, map[string]*bintree{}},
		"Lithium.gitignore": &bintree{gitignoreLithiumGitignore, map[string]*bintree{}},
		"Lua.gitignore": &bintree{gitignoreLuaGitignore, map[string]*bintree{}},
		"Magento.gitignore": &bintree{gitignoreMagentoGitignore, map[string]*bintree{}},
		"Maven.gitignore": &bintree{gitignoreMavenGitignore, map[string]*bintree{}},
		"Mercury.gitignore": &bintree{gitignoreMercuryGitignore, map[string]*bintree{}},
		"MetaProgrammingSystem.gitignore": &bintree{gitignoreMetaprogrammingsystemGitignore, map[string]*bintree{}},
		"Nanoc.gitignore": &bintree{gitignoreNanocGitignore, map[string]*bintree{}},
		"Nim.gitignore": &bintree{gitignoreNimGitignore, map[string]*bintree{}},
		"Node.gitignore": &bintree{gitignoreNodeGitignore, map[string]*bintree{}},
		"OCaml.gitignore": &bintree{gitignoreOcamlGitignore, map[string]*bintree{}},
		"Objective-C.gitignore": &bintree{gitignoreObjectiveCGitignore, map[string]*bintree{}},
		"Opa.gitignore": &bintree{gitignoreOpaGitignore, map[string]*bintree{}},
		"OpenCart.gitignore": &bintree{gitignoreOpencartGitignore, map[string]*bintree{}},
		"OracleForms.gitignore": &bintree{gitignoreOracleformsGitignore, map[string]*bintree{}},
		"Packer.gitignore": &bintree{gitignorePackerGitignore, map[string]*bintree{}},
		"Perl.gitignore": &bintree{gitignorePerlGitignore, map[string]*bintree{}},
		"Phalcon.gitignore": &bintree{gitignorePhalconGitignore, map[string]*bintree{}},
		"PlayFramework.gitignore": &bintree{gitignorePlayframeworkGitignore, map[string]*bintree{}},
		"Plone.gitignore": &bintree{gitignorePloneGitignore, map[string]*bintree{}},
		"Prestashop.gitignore": &bintree{gitignorePrestashopGitignore, map[string]*bintree{}},
		"Processing.gitignore": &bintree{gitignoreProcessingGitignore, map[string]*bintree{}},
		"PureScript.gitignore": &bintree{gitignorePurescriptGitignore, map[string]*bintree{}},
		"Python.gitignore": &bintree{gitignorePythonGitignore, map[string]*bintree{}},
		"Qooxdoo.gitignore": &bintree{gitignoreQooxdooGitignore, map[string]*bintree{}},
		"Qt.gitignore": &bintree{gitignoreQtGitignore, map[string]*bintree{}},
		"R.gitignore": &bintree{gitignoreRGitignore, map[string]*bintree{}},
		"README.md": &bintree{gitignoreReadmeMd, map[string]*bintree{}},
		"ROS.gitignore": &bintree{gitignoreRosGitignore, map[string]*bintree{}},
		"Rails.gitignore": &bintree{gitignoreRailsGitignore, map[string]*bintree{}},
		"RhodesRhomobile.gitignore": &bintree{gitignoreRhodesrhomobileGitignore, map[string]*bintree{}},
		"Ruby.gitignore": &bintree{gitignoreRubyGitignore, map[string]*bintree{}},
		"Rust.gitignore": &bintree{gitignoreRustGitignore, map[string]*bintree{}},
		"SCons.gitignore": &bintree{gitignoreSconsGitignore, map[string]*bintree{}},
		"Sass.gitignore": &bintree{gitignoreSassGitignore, map[string]*bintree{}},
		"Scala.gitignore": &bintree{gitignoreScalaGitignore, map[string]*bintree{}},
		"Scheme.gitignore": &bintree{gitignoreSchemeGitignore, map[string]*bintree{}},
		"Scrivener.gitignore": &bintree{gitignoreScrivenerGitignore, map[string]*bintree{}},
		"Sdcc.gitignore": &bintree{gitignoreSdccGitignore, map[string]*bintree{}},
		"SeamGen.gitignore": &bintree{gitignoreSeamgenGitignore, map[string]*bintree{}},
		"SketchUp.gitignore": &bintree{gitignoreSketchupGitignore, map[string]*bintree{}},
		"Smalltalk.gitignore": &bintree{gitignoreSmalltalkGitignore, map[string]*bintree{}},
		"Stella.gitignore": &bintree{gitignoreStellaGitignore, map[string]*bintree{}},
		"SugarCRM.gitignore": &bintree{gitignoreSugarcrmGitignore, map[string]*bintree{}},
		"Swift.gitignore": &bintree{gitignoreSwiftGitignore, map[string]*bintree{}},
		"Symfony.gitignore": &bintree{gitignoreSymfonyGitignore, map[string]*bintree{}},
		"SymphonyCMS.gitignore": &bintree{gitignoreSymphonycmsGitignore, map[string]*bintree{}},
		"TeX.gitignore": &bintree{gitignoreTexGitignore, map[string]*bintree{}},
		"Terraform.gitignore": &bintree{gitignoreTerraformGitignore, map[string]*bintree{}},
		"Textpattern.gitignore": &bintree{gitignoreTextpatternGitignore, map[string]*bintree{}},
		"TurboGears2.gitignore": &bintree{gitignoreTurbogears2Gitignore, map[string]*bintree{}},
		"Typo3.gitignore": &bintree{gitignoreTypo3Gitignore, map[string]*bintree{}},
		"Umbraco.gitignore": &bintree{gitignoreUmbracoGitignore, map[string]*bintree{}},
		"Unity.gitignore": &bintree{gitignoreUnityGitignore, map[string]*bintree{}},
		"UnrealEngine.gitignore": &bintree{gitignoreUnrealengineGitignore, map[string]*bintree{}},
		"VVVV.gitignore": &bintree{gitignoreVvvvGitignore, map[string]*bintree{}},
		"VisualStudio.gitignore": &bintree{gitignoreVisualstudioGitignore, map[string]*bintree{}},
		"Waf.gitignore": &bintree{gitignoreWafGitignore, map[string]*bintree{}},
		"WordPress.gitignore": &bintree{gitignoreWordpressGitignore, map[string]*bintree{}},
		"Xojo.gitignore": &bintree{gitignoreXojoGitignore, map[string]*bintree{}},
		"Yeoman.gitignore": &bintree{gitignoreYeomanGitignore, map[string]*bintree{}},
		"Yii.gitignore": &bintree{gitignoreYiiGitignore, map[string]*bintree{}},
		"ZendFramework.gitignore": &bintree{gitignoreZendframeworkGitignore, map[string]*bintree{}},
		"Zephir.gitignore": &bintree{gitignoreZephirGitignore, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

